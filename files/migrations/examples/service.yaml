- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: b1bebdc2-77c3-48f6-9fb6-c175360c5d32
  definition: Definition
  delete_spaces_before_matching: false
  description: Start point of a workflow
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-01 01:36:02.097383'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Start'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Ansible Playbook Service: [-638, 93]
    (R) Configuration Properties Backup Services: [-826, 220]
    (R) Gateway Mechanism (SSH Proxy with Netmiko): &id001 [-208, -125]
    (R) Gateway Mechanism (SSH Proxy with Paramiko): *id001
    (R) Gateway Mechanism (SSH Proxy with Scrapli): [-208, -125]
    (R) Generic File Transfer Service: &id004 [-479, -89]
    (R) Labels and Custom Property: [-256, -78]
    (R) Multiple parallel connections to same device: &id014 [-339, -168]
    (R) NAPALM Configuration and Rollback Services: &id015 [-684, -34]
    (R) NCClient Netconf Service: &id016 [-448, -185]
    (R) Napalm Getters Service: &id017 [-604, 9]
    (R) Netmiko Configuration and Validation Services: &id013 [-435, -39]
    (R) Netmiko File Transfer Service: &id018 [-380, -131]
    (R) Netmiko Prompts Service: &id019 [-397, 136]
    (R) Netmiko Validation with TextFSM Option: &id020 [-366, 74]
    (R) Operational Data Backup Service: [-826, 220]
    (R) Scalability: &id010 [-437, -191]
    (R) Scrapli Netconf Service: &id049 [-298, -101]
    (R) Scrapli Service: &id035 [-192, 31]
    (R) Scrapli and Netmiko Multiple Commands and Jinja2: [-376, 194]
    (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism: [-382, 39]
    Advanced Iteration Targets: &id034 [-131, -24]
    Advanced Multiprocessing (admin): [-492, -39]
    Ansible Playbook Service: &id061 [-638, 93]
    Ansible with Validation: [-634, -20]
    'Automation: gateways (SSH Proxy with Paramiko)': *id001
    Basic Iteration Targets with Netmiko: [-308, -231]
    Basic Superworkflow: [-149, 39]
    'Basic: Deletion (Device, Link, Service, Task)': &id002 [-335, 173]
    Combined Device & Target Iteration: &id007 [-458, -30]
    Conditional Skip Query in Failed and Discard Modes: &id062 [-322, 98]
    Credentials (Password & Key, Priority Mechanism): &id039 [-157, 96]
    Data Extraction Jinja2 Template: [-255, -44]
    Data Extraction Service: &id040 [-421, 129]
    Deletion and Cascade Deletion: *id002
    Deletion of Devices, Links, Services, Tasks and associated Cascade Deletion: *id002
    Device Iteration: &id008 [-354, -121]
    Dictionary as Iteration Target Variable: &id009 [-308, -231]
    DxD and SxS Run Methods: &id033 [-404, 147]
    Fork based on Result with Success & Failure Edges: &id003 [-327, -20]
    Fork based on Success Value: *id003
    Fork based on value with Skip Discard Mechanism: &id063 [-563, 184]
    'Function: get_credential': &id006 [-477, -78]
    'Functions: factory, fetch, fetch_all, encrypt and get_result': &id005 [-228,
      7]
    'Functions: get_result and get_var': [-368, 44]
    'Functions: get_var, set_var, and get_result': &id031 [-506, -55]
    GET Endpoints is_alive, configuration and instance: &id024 [-477, 22]
    GET Endpoints query and token: &id025 [-423, -76]
    Gateway Mechanism (SSH Proxy with Paramiko): *id001
    Generic File Transfer: *id004
    Global Variables and post-run Pool Update Mechanism: *id005
    Global get_credential Function and Log Obfuscation: *id006
    'Global variables: get_result and get_var': [-335, -16]
    Interaction of Restart Mechanism and Superworkflow: &id058 [-212, 24]
    'Iteration Mechanism: Combined Device & Target Iteration': *id007
    'Iteration Mechanism: Device Iteration': *id008
    'Iteration Mechanism: Dictionary as Iteration Target Variable': *id009
    'Iteration Mechanism: Workflow and Subworkflow Iteration': &id070 [-313, 364]
    Iteration Services Test Workflow: ['-359', '-163']
    Iteration Targets Mechanism: [-400, -61]
    Iteration Targets with a Dictionary: *id009
    Large Device Configuration and Operational Data: [-179, -19]
    Large Payload: &id071 [-102, 94]
    Large Results: &id072 [-100, 46]
    Large Subworkflow: &id011 [-193, 16]
    Large Workflow (20 services): *id010
    Large Workflow (30 services): *id011
    Large Workflow with Large Subworkflows: [-252, -4]
    Link Neighbors Mechanism: &id012 [-339, -122]
    Link Neighbors Mechanism (device.get_neighbors function): *id012
    Link Neighbors Mechanism (public): [-339, -122]
    Mail Notifications: &id021 [-391, -77]
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [-492,
      -39]
    'Miscellaneous: Fork based on Result with Success & Failure Edges': *id003
    'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)': *id012
    'Miscellaneous: Netmiko Services, Connection Cache Management': [-383, -95]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': *id013
    Multiple parallel connections to same device: *id014
    Multiprocessing in DxD mode: [-492, -39]
    NAPALM Configuration and Rollback: *id015
    NCClient Netconf Service: *id016
    Napalm Getters Validation: *id017
    Netmiko Configuration and Validation Services: *id013
    Netmiko File Transfer: *id018
    Netmiko Prompts: *id019
    Netmiko TextFSM Option: *id020
    Notification Mechanism: *id021
    Notifications: *id021
    Operational Data Backup (admin): [-689, 207]
    Optional Prerequisite Services: &id045 [-356, 121]
    Optional Remediation Branch: [-356, 121]
    POST Endpoint search: &id026 [-374, 42]
    POST update, DELETE delete and GET & POST results: &id027 [-359, 245]
    Parameterized Form (override labels & targets, add payload): &id046 [-262, -163]
    Parameterized Multiprocessing: [-169, 101]
    Parameterized Run with a Superworkflow: &id022 [-293, -76]
    Parameterized Superworkflow Run: *id022
    Parameterized Targets: [-54, -115]
    Payload Extraction & Validation: [-308, -170]
    Payload Extraction with Operations: &id047 [-661, -226]
    Payload Recursive Conservation with Restart Mechanism: &id059 [-238, -178]
    Preprocessing and Postprocessing Mechanism: &id023 [-197, -37]
    Preprocessing and Postprocessing Mechanisms: *id023
    RBAC Target Restriction: &id048 [-176, -144]
    'REST API: GET Endpoints': [-425, -25]
    'REST API: GET Endpoints is_alive, configuration and instance': *id024
    'REST API: GET Endpoints query and token': *id025
    'REST API: GET Endpoints query, result and token': *id025
    'REST API: Main Endpoints': [0, 0]
    'REST API: POST Endpoint search': *id026
    'REST API: POST Endpoints update and search': *id026
    'REST API: POST update, DELETE delete and GET & POST results': *id027
    'Regression Workflow 1: Netmiko with validation and retries': [-385, 11]
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id029 [-383,
      -95]
    'Regression Workflow 1: link neighbors mechanism': &id028 [-273, -126]
    'Regression Workflow 2: Separate Failure - Success paths': &id050 [-327, -20]
    'Regression Workflow 3: Napalm getters (postprocessing)': &id044 [-316, 80]
    'Regression Workflow 4: Link Neighbors Mechanism (public)': *id028
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id029
    'Regression Workflow 4: link neighbors mechanism': *id028
    'Regression Workflow 4: link neighbors mechanism (public)': *id028
    'Regression Workflow 5: VRF creation and deletion with Napalm': !!python/tuple [
      0, 0]
    'Regression Workflow 6: Ansible with Validation': &id038 [-557, -5]
    'Regression Workflow 7: Payload Extraction & Validation': !!python/tuple [0, 0]
    'Regression Workflow 8: Payload Extraction with Operations': !!python/tuple [
      0, 0]
    'Regression Workflow 9: Operational Data Backup': &id030 [-648, 121]
    'Regression Workflow 9: Operational Data Backup (admin)': *id030
    'Regression Workflow A: get_var, set_var, get_result': *id031
    'Regression Workflow B: Napalm getters validation': !!python/tuple [0, 0]
    'Regression Workflow C: Advanced multiprocessing': &id032 [-492, -39]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id032
    'Regression Workflow D: Prompts': *id019
    'Regression Workflow E: Iteration Targets': &id043 [-342, -252]
    'Regression Workflow F S1: Subworkflow of Workflow': !!python/tuple [0, 0]
    'Regression Workflow F S2: Access Variables from Parent Workflow': !!python/tuple [
      0, 0]
    'Regression Workflow F: Workflow of Workflows': &id057 [-965, 194]
    'Regression Workflow G: run methods (BFS)': *id033
    'Regression Workflow H: shared service in multiple subworkflows': &id051 [55,
      266]
    'Regression Workflow I: Iteration Targets Advanced': *id034
    'Regression Workflow J: Workflow and Subworkflow Iteration': [0, 0]
    'Regression Workflow K: preprocessing and postprocessing': *id023
    'Regression Workflow L: superworkflow': &id054 [-179, 6]
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id056 [
      -382, 39]
    'Regression Workflow M: Unix command & shell, ping, jump server': [-341, 17]
    'Regression Workflow N: Topology Import (netbox, librenms, opennms)': &id055 [
      -141, 21]
    'Regression Workflow O: Scrapli': *id035
    'Regression Workflow P: large workflow (scalability)': *id010
    'Regression Workflow Q: File transfer': &id041 [-479, -89]
    'Regression Workflow R: Skip Services in SxS mode': &id036 [-336, -35]
    'Regression Workflow R: skip services in service by service mode': *id036
    'Regression Workflow S: conditional skip query in failed and discard mode': &id037 [
      -205, -81]
    'Regression Workflow S: conditional skip query with skip value set to False': *id037
    'Regression Workflow T: global variables': [-277, -147]
    'Regression Workflow T: global variables and post-run pool update': [-277, -147]
    'Regression Workflow T: link neighbors mechanism': *id028
    'Regression Workflow U: fork based on value with skip discard mode': &id042 [
      -477, 154]
    'Regression Workflow V: skip query with device in run once mode': &id052 [-412,
      -72]
    'Regression Workflow V: skip query with device in subworkflow SxS': [-71, -2]
    'Regression Workflow W: disable result creation mode': [-295, -141]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id053 [
      -295, -141]
    'Regression Workflow X: Credentials (password & key, priority)': [-157, 96]
    'Regression Workflow: Advanced Iteration Targets': *id034
    'Regression Workflow: Advanced Multiprocessing (admin)': *id032
    'Regression Workflow: Ansible with Validation': *id038
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id037
    'Regression Workflow: Credentials (Password & Key, Priority Mechanism)': *id039
    'Regression Workflow: Data Extraction Service': *id040
    'Regression Workflow: Device Iteration': [-235, -81]
    'Regression Workflow: DxD and SxS Run Methods': *id033
    'Regression Workflow: File Transfer Mechanism': *id041
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id042
    'Regression Workflow: Generic File Transfer': *id004
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': *id005
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id006
    'Regression Workflow: Iteration Targets Mechanism': *id043
    'Regression Workflow: Link Neighbors Mechanism (public)': *id028
    'Regression Workflow: NCClient Netconf Service': *id016
    'Regression Workflow: Napalm Getters Validation': *id017
    'Regression Workflow: Napalm Getters and Postprocessing': *id044
    'Regression Workflow: Netmiko File Transfer': *id018
    'Regression Workflow: Netmiko Prompts': *id019
    'Regression Workflow: Netmiko TextFSM Option': *id020
    'Regression Workflow: Notifications': *id021
    'Regression Workflow: Operational Data Backup (admin)': *id030
    'Regression Workflow: Optional Prerequisite Services': *id045
    'Regression Workflow: Parameterized Form (override labels & targets, add payload)': *id046
    'Regression Workflow: Parameterized Superworkflow Run': *id022
    'Regression Workflow: Payload Extraction & Validation': &id087 [-115, -305]
    'Regression Workflow: Payload Extraction with Operations': *id047
    'Regression Workflow: Preprocessing and Postprocessing': *id023
    'Regression Workflow: RBAC Target Restriction': *id048
    'Regression Workflow: Result content in memory (scalability)': [0, 0]
    'Regression Workflow: Scalability Test (large workflow)': *id010
    'Regression Workflow: Scrapli': *id035
    'Regression Workflow: Scrapli Netconf Service': *id049
    'Regression Workflow: Separate Failure - Success Paths': *id050
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id060 [
      -316, 80]
    'Regression Workflow: Shared Service in Multiple Subworkflows': *id051
    'Regression Workflow: Skip Query with device in Run Once Mode': *id052
    'Regression Workflow: Skip Services in SxS mode': *id036
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id053
    'Regression Workflow: Specific Superworkflow': *id054
    'Regression Workflow: Superworkflow': *id054
    'Regression Workflow: Superworkflow in SxS w WT with Run Once service': &id067 [
      -197, -103]
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id065 [-436,
      94]
    'Regression Workflow: Topology Import (netbox, librenms, opennms)': *id055
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id056
    'Regression Workflow: Using get_var, set_var, get_result functions': *id031
    'Regression Workflow: VRF Creation and Deletion with Napalm': *id015
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id029
    'Regression Workflow: Validation Section Mechanism': [-413, -265]
    'Regression Workflow: Workflow and Subworkflow Iteration': [-313, 364]
    'Regression Workflow: Workflow of Workflows': *id057
    'Regression Workflow: multiple parallel connections to same device': [-339, -168]
    'Regression workflow P: large workflow (scalability)': *id010
    Restart From Feature and Superworkflow Interaction: *id058
    Restart Mechanism, payload + results recursive conservation: *id059
    Scalability Test (large workflow): *id010
    Scrapli Netconf Service: *id049
    Scrapli Service: *id035
    Separate Failure - Success Paths: [-327, -20]
    Service Priorities: [0, 0]
    Service Priorities, Napalm Getters, Postprocessing: *id060
    'Services: Ansible Playbook Service': *id061
    Shared Service in Multiple Subworkflows: *id051
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': *id062
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': *id063
    'Skip Mechanism: Skip in SxS mode': [-426, -49]
    'Skip Mechanism: Skip in SxS with WF targets mode': &id064 [-605, -49]
    Skip Query with device in Run Once Mode: *id052
    Skip Services in SxS mode: [-347, -44]
    Skip in SxS with WF targets mode: *id064
    Skip in SxS with service targets and Run Once services: *id065
    Skip, Discard and Disable Result Creation Mechanism: *id053
    Slack and Mattermost Notifications: &id066 [-143, 42]
    Slack and Mattermost notifications: *id066
    Specific Superworkflow: *id054
    Subworkflow 1: !!python/tuple [0, 0]
    Subworkflow 2: !!python/tuple [0, 0]
    Superworkflow in SxS w WT with Run Once service: *id067
    SxS Service Targets with Run Once + Skip: *id065
    Target Restriction Mechanism: *id048
    Topology Import Service (netbox, librenms, opennms): &id068 [-141, 21]
    Topology Import Services: *id068
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id056
    Using get_var, set_var, and get_result Functions: *id031
    VRF Creation and Deletion with Napalm: *id015
    VRF Creation and Deletion with Netmiko: *id029
    Validation Mechanism: &id069 [-478, -72]
    'Validation Mechanism: Section to Validate Property': *id069
    Validation Section Mechanism: [-540, -145]
    Workflow  in device by device mode: !!python/tuple [0, 0]
    'Workflow Regression R: skip services in service by service mode': *id036
    'Workflow Regression S: conditional skip query with skip value set to False': [
      -183, -152]
    Workflow and Subworkflow Iteration: *id070
    Workflow in service by service mode (workflow targets): !!python/tuple [0, 0]
    Workflow in service targets mode: !!python/tuple [0, 0]
    Workflow with Large Payload: *id071
    Workflow with Large Results: *id072
    Workflow with device and value iteration: [0, 0]
    Workflow with iteration target subworkflows: [-118, 4]
    Workflow with iteration targets: [0, 0]
    '[DxD and SxS Run Methods] Workflow  in device by device mode': &id076 [0, 0]
    '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': &id077 [
      -2, 14]
    '[DxD and SxS Run Methods] Workflow in service targets mode': &id078 [0, 0]
    '[Functions: get_result and get_var] Subworkflow': &id073 [0, 0]
    '[Global variables: get_result and get_var] Subworkflow': *id073
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': &id085 [
      0, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': &id086 [
      0, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': &id079 [
      0, 0]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id011
    '[Large Workflow with Large Subworkflows] Large Subworkflow 1': *id011
    '[Large Workflow with Large Subworkflows] Large Subworkflow 2': *id011
    '[Large Workflow with Large Subworkflows] Large Subworkflow 3': *id011
    '[Large Workflow with Large Subworkflows] Large Subworkflow 4': *id011
    '[Large Workflow with Large Subworkflows] Large Subworkflow 5': *id011
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id015
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow of Workflow': &id075 [
      -418, -147]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow F S2: Access Variables from Parent Workflow': &id074 [
      -253, -110]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: Access Variables from Parent Workflow': *id074
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow of Workflows': *id075
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id015
    '[Regression Workflow G: run methods (BFS)] Workflow  in device by device mode': *id076
    '[Regression Workflow G: run methods (BFS)] Workflow in service by service mode (workflow targets)': *id077
    '[Regression Workflow G: run methods (BFS)] Workflow in service targets mode': *id078
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 1': &id081 [
      -118, 0]
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 2': &id082 [
      0, 0]
    '[Regression Workflow J: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id079
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode - workflow targets': &id083 [
      -77, -17]
    '[Regression Workflow W: disable result creation mode] Workflow in DxD mode': &id080 [
      0, 0]
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in DxD mode': *id080
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in SxS mode': &id084 [
      0, 0]
    '[Regression Workflow: DxD and SxS Run Methods] Workflow  in device by device mode': *id076
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': *id077
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service targets mode': *id078
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 1': *id081
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 2': *id082
    '[Regression Workflow: Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id083
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id080
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id084
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id085
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id086
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id079
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id079
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: Access Variables from Parent Workflow': *id074
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow of Workflows': *id075
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id015
    '[Shared Service in Multiple Subworkflows] Subworkflow 1': *id081
    '[Shared Service in Multiple Subworkflows] Subworkflow 2': *id082
    '[Shared] Large Subworkflow': *id011
    '[Shared] Large Workflow': *id011
    '[Shared] Large Workflow (30 services)': *id011
    '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id083
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id080
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id084
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id085
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id086
    '[Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id079
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id087
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id047
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id017
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id087
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id047
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id017
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id017
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id087
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id047
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id017
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id087
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id047
    get_credential Function: *id006
    iteration_devices_workflow: ['-164', '15']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Start
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {(R) Gateway Mechanism (SSH Proxy with Scrapli): false, '[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 5ead95a2-fc8b-4821-b503-d64def93d98d
  definition: Definition
  delete_spaces_before_matching: false
  description: End point of a workflow
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-01 11:40:22.000682'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] End'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Ansible Playbook Service: [512, 246]
    (R) Configuration Properties Backup Services: [328, 372]
    (R) Gateway Mechanism (SSH Proxy with Netmiko): &id088 [795, -51]
    (R) Gateway Mechanism (SSH Proxy with Paramiko): *id088
    (R) Gateway Mechanism (SSH Proxy with Scrapli): [795, -51]
    (R) Generic File Transfer Service: &id091 [476, 156]
    (R) Labels and Custom Property: [669, -84]
    (R) Multiple parallel connections to same device: &id101 [689, 58]
    (R) NAPALM Configuration and Rollback Services: &id102 [-696, 47]
    (R) NCClient Netconf Service: &id103 [556, 119]
    (R) Napalm Getters Service: &id104 [-600, 63]
    (R) Netmiko Configuration and Validation Services: &id100 [-418, 177]
    (R) Netmiko File Transfer Service: &id105 [499, -103]
    (R) Netmiko Prompts Service: &id106 [608, 90]
    (R) Netmiko Validation with TextFSM Option: &id107 [522, 4]
    (R) Operational Data Backup Service: [328, 372]
    (R) Scalability: &id097 [483, -268]
    (R) Scrapli Netconf Service: &id136 [-293, 114]
    (R) Scrapli Service: &id122 [628, 113]
    (R) Scrapli and Netmiko Multiple Commands and Jinja2: [601, 109]
    (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism: [377, 272]
    AAA: !!python/tuple [500, 0]
    Advanced Iteration Targets: &id121 [350, -6]
    Advanced Multiprocessing (admin): [505, -10]
    Ansible Playbook Service: &id148 [512, 246]
    Ansible with Validation: [468, 147]
    'Automation: gateways (SSH Proxy with Paramiko)': *id088
    Basic Iteration Targets with Netmiko: [596, -221]
    Basic Superworkflow: [500, 0]
    'Basic: Deletion (Device, Link, Service, Task)': &id089 [664, 197]
    Combined Device & Target Iteration: &id094 [-437, 191]
    Conditional Skip Query in Failed and Discard Modes: &id149 [599, 331]
    Credentials (Password & Key, Priority Mechanism): &id126 [590, 124]
    Data Extraction Jinja2 Template: [445, 190]
    Data Extraction Service: &id127 [365, 216]
    Deletion and Cascade Deletion: *id089
    Deletion of Devices, Links, Services, Tasks and associated Cascade Deletion: *id089
    Device Iteration: &id095 [549, -155]
    Dictionary as Iteration Target Variable: &id096 [596, -221]
    DxD and SxS Run Methods: &id120 [638, 130]
    Fork based on Result with Success & Failure Edges: &id090 [553, 357]
    Fork based on Success Value: *id090
    Fork based on value with Skip Discard Mechanism: &id150 [388, 363]
    'Function: get_credential': &id093 [591, -45]
    'Functions: factory, fetch, fetch_all, encrypt and get_result': &id092 [749, 100]
    'Functions: get_result and get_var': [697, -62]
    'Functions: get_var, set_var, and get_result': &id118 [-528, 25]
    GET Endpoints is_alive, configuration and instance: &id111 [460, 246]
    GET Endpoints query and token: &id112 [604, 81]
    Gateway Mechanism (SSH Proxy with Paramiko): *id088
    Generic File Transfer: *id091
    Global Variables and post-run Pool Update Mechanism: *id092
    Global get_credential Function and Log Obfuscation: *id093
    'Global variables: get_result and get_var': [697, -62]
    Interaction of Restart Mechanism and Superworkflow: &id145 [500, 0]
    'Iteration Mechanism: Combined Device & Target Iteration': *id094
    'Iteration Mechanism: Device Iteration': *id095
    'Iteration Mechanism: Dictionary as Iteration Target Variable': *id096
    'Iteration Mechanism: Workflow and Subworkflow Iteration': &id157 [627, 254]
    Iteration Services Test Workflow: ['-9', '294']
    Iteration Targets Mechanism: [-370, 210]
    Iteration Targets with a Dictionary: *id096
    Large Device Configuration and Operational Data: [611, 1]
    Large Payload: &id158 [605, 99]
    Large Results: &id159 [642, 43]
    Large Subworkflow: &id098 [626, 191]
    Large Workflow (20 services): *id097
    Large Workflow (30 services): *id098
    Large Workflow with Large Subworkflows: [596, -8]
    Link Neighbors Mechanism: &id099 [387, -149]
    Link Neighbors Mechanism (device.get_neighbors function): *id099
    Link Neighbors Mechanism (public): [387, -149]
    Mail Notifications: &id108 [530, 32]
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [505, -10]
    'Miscellaneous: Fork based on Result with Success & Failure Edges': *id090
    'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)': *id099
    'Miscellaneous: Netmiko Services, Connection Cache Management': [-383, 167]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': *id100
    Multiple parallel connections to same device: *id101
    Multiprocessing in DxD mode: [505, -10]
    NAPALM Configuration and Rollback: *id102
    NCClient Netconf Service: *id103
    Napalm Getters Validation: *id104
    Netmiko Configuration and Validation Services: *id100
    Netmiko File Transfer: *id105
    Netmiko Prompts: *id106
    Netmiko TextFSM Option: *id107
    Notification Mechanism: *id108
    Notifications: *id108
    Operational Data Backup (admin): [282, 396]
    Optional Prerequisite Services: &id132 [734, 171]
    Optional Remediation Branch: [734, 171]
    POST Endpoint search: &id113 [576, 170]
    POST update, DELETE delete and GET & POST results: &id114 [503, 145]
    Parameterized Form (override labels & targets, add payload): &id133 [692, -112]
    Parameterized Multiprocessing: [615, 109]
    Parameterized Run with a Superworkflow: &id109 [565, -70]
    Parameterized Superworkflow Run: *id109
    Parameterized Targets: [-41, 252]
    Payload Extraction & Validation: [279, 262]
    Payload Extraction with Operations: &id134 [-688, -153]
    Payload Recursive Conservation with Restart Mechanism: &id146 [663, 12]
    Preprocessing and Postprocessing Mechanism: &id110 [619, 353]
    Preprocessing and Postprocessing Mechanisms: *id110
    RBAC Target Restriction: &id135 [654, -133]
    'REST API: GET Endpoints': [500, 0]
    'REST API: GET Endpoints is_alive, configuration and instance': *id111
    'REST API: GET Endpoints query and token': *id112
    'REST API: GET Endpoints query, result and token': *id112
    'REST API: Main Endpoints': [500, 0]
    'REST API: POST Endpoint search': *id113
    'REST API: POST Endpoints update and search': *id113
    'REST API: POST update, DELETE delete and GET & POST results': *id114
    'Regression Workflow 1: Netmiko with validation and retries': [115, 3]
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id116 [-383,
      167]
    'Regression Workflow 1: link neighbors mechanism': &id115 [713, 86]
    'Regression Workflow 2: Separate Failure - Success paths': &id137 [737, 276]
    'Regression Workflow 3: Napalm getters (postprocessing)': &id131 [703, 150]
    'Regression Workflow 4: Link Neighbors Mechanism (public)': *id115
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id116
    'Regression Workflow 4: link neighbors mechanism': *id115
    'Regression Workflow 4: link neighbors mechanism (public)': *id115
    'Regression Workflow 5: VRF creation and deletion with Napalm': !!python/tuple [
      0, 0]
    'Regression Workflow 6: Ansible with Validation': &id125 [567, -24]
    'Regression Workflow 7: Payload Extraction & Validation': !!python/tuple [0, 0]
    'Regression Workflow 8: Payload Extraction with Operations': !!python/tuple [
      0, 0]
    'Regression Workflow 9: Operational Data Backup': &id117 [290, 314]
    'Regression Workflow 9: Operational Data Backup (admin)': *id117
    'Regression Workflow A: get_var, set_var, get_result': *id118
    'Regression Workflow B: Napalm getters validation': !!python/tuple [0, 0]
    'Regression Workflow C: Advanced multiprocessing': &id119 [505, -10]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id119
    'Regression Workflow D: Prompts': *id106
    'Regression Workflow E: Iteration Targets': &id130 [-334, 29]
    'Regression Workflow F S1: Subworkflow of Workflow': !!python/tuple [0, 0]
    'Regression Workflow F S2: Access Variables from Parent Workflow': !!python/tuple [
      0, 0]
    'Regression Workflow F: Workflow of Workflows': &id144 [-934, 289]
    'Regression Workflow G: run methods (BFS)': *id120
    'Regression Workflow H: shared service in multiple subworkflows': &id138 [688,
      -88]
    'Regression Workflow I: Iteration Targets Advanced': *id121
    'Regression Workflow J: Workflow and Subworkflow Iteration': [500, 0]
    'Regression Workflow K: preprocessing and postprocessing': *id110
    'Regression Workflow L: superworkflow': &id141 [730, 218]
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id143 [
      560, 9]
    'Regression Workflow M: Unix command & shell, ping, jump server': [560, 9]
    'Regression Workflow N: Topology Import (netbox, librenms, opennms)': &id142 [
      636, 24]
    'Regression Workflow O: Scrapli': *id122
    'Regression Workflow P: large workflow (scalability)': *id097
    'Regression Workflow Q: File transfer': &id128 [576, 135]
    'Regression Workflow R: Skip Services in SxS mode': &id123 [500, 0]
    'Regression Workflow R: skip services in service by service mode': *id123
    'Regression Workflow S: conditional skip query in failed and discard mode': &id124 [
      640, -155]
    'Regression Workflow S: conditional skip query with skip value set to False': *id124
    'Regression Workflow T: global variables': [569, -66]
    'Regression Workflow T: global variables and post-run pool update': [569, -66]
    'Regression Workflow T: link neighbors mechanism': *id115
    'Regression Workflow U: fork based on value with skip discard mode': &id129 [
      645, 270]
    'Regression Workflow V: skip query with device in run once mode': &id139 [670,
      159]
    'Regression Workflow V: skip query with device in subworkflow SxS': [572, -3]
    'Regression Workflow W: disable result creation mode': [529, -52]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id140 [
      547, -96]
    'Regression Workflow X: Credentials (password & key, priority)': [590, 124]
    'Regression Workflow: Advanced Iteration Targets': *id121
    'Regression Workflow: Advanced Multiprocessing (admin)': *id119
    'Regression Workflow: Ansible with Validation': *id125
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id124
    'Regression Workflow: Credentials (Password & Key, Priority Mechanism)': *id126
    'Regression Workflow: Data Extraction Service': *id127
    'Regression Workflow: Device Iteration': [699, 125]
    'Regression Workflow: DxD and SxS Run Methods': *id120
    'Regression Workflow: File Transfer Mechanism': *id128
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id129
    'Regression Workflow: Generic File Transfer': *id091
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': *id092
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id093
    'Regression Workflow: Iteration Targets Mechanism': *id130
    'Regression Workflow: Link Neighbors Mechanism (public)': *id115
    'Regression Workflow: NCClient Netconf Service': *id103
    'Regression Workflow: Napalm Getters Validation': *id104
    'Regression Workflow: Napalm Getters and Postprocessing': *id131
    'Regression Workflow: Netmiko File Transfer': *id105
    'Regression Workflow: Netmiko Prompts': *id106
    'Regression Workflow: Netmiko TextFSM Option': *id107
    'Regression Workflow: Notifications': *id108
    'Regression Workflow: Operational Data Backup (admin)': *id117
    'Regression Workflow: Optional Prerequisite Services': *id132
    'Regression Workflow: Parameterized Form (override labels & targets, add payload)': *id133
    'Regression Workflow: Parameterized Superworkflow Run': *id109
    'Regression Workflow: Payload Extraction & Validation': &id175 [279, 262]
    'Regression Workflow: Payload Extraction with Operations': *id134
    'Regression Workflow: Preprocessing and Postprocessing': *id110
    'Regression Workflow: RBAC Target Restriction': *id135
    'Regression Workflow: Scalability Test (large workflow)': *id097
    'Regression Workflow: Scrapli': *id122
    'Regression Workflow: Scrapli Netconf Service': *id136
    'Regression Workflow: Separate Failure - Success Paths': *id137
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id147 [
      703, 150]
    'Regression Workflow: Shared Service in Multiple Subworkflows': *id138
    'Regression Workflow: Skip Query with device in Run Once Mode': *id139
    'Regression Workflow: Skip Services in SxS mode': *id123
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id140
    'Regression Workflow: Specific Superworkflow': *id141
    'Regression Workflow: Superworkflow': *id141
    'Regression Workflow: Superworkflow in SxS w WT with Run Once service': &id154 [
      514, -109]
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id152 [605,
      380]
    'Regression Workflow: SxS Service Targets with Skip Global + Query': !!python/tuple [
      500, 0]
    'Regression Workflow: Topology Import (netbox, librenms, opennms)': *id142
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id143
    'Regression Workflow: Using get_var, set_var, get_result functions': *id118
    'Regression Workflow: VRF Creation and Deletion with Napalm': *id102
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id116
    'Regression Workflow: Validation Section Mechanism': [392, 138]
    'Regression Workflow: Workflow and Subworkflow Iteration': [644, 233]
    'Regression Workflow: Workflow of Workflows': *id144
    'Regression Workflow: multiple parallel connections to same device': [689, 58]
    'Regression workflow P: large workflow (scalability)': *id097
    Restart From Feature and Superworkflow Interaction: *id145
    Restart Mechanism, payload + results recursive conservation: *id146
    Scalability Test (large workflow): *id097
    Scrapli Netconf Service: *id136
    Scrapli Service: *id122
    Scrapli and Netmiko Multiple Commands and Jinja2: !!python/tuple [500, 0]
    Separate Failure - Success Paths: [737, 276]
    Service Priorities: [500, 0]
    Service Priorities, Napalm Getters, Postprocessing: *id147
    'Services: Ansible Playbook Service': *id148
    Shared Service in Multiple Subworkflows: *id138
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': *id149
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': *id150
    'Skip Mechanism: Skip in SxS mode': [407, -39]
    'Skip Mechanism: Skip in SxS with WF targets mode': &id151 [210, -67]
    Skip Query with device in Run Once Mode: *id139
    Skip Services in SxS mode: [387, -76]
    Skip in SxS with WF targets mode: *id151
    Skip in SxS with service targets and Run Once services: *id152
    Skip, Discard and Disable Result Creation Mechanism: *id140
    Slack and Mattermost Notifications: &id153 [588, 19]
    Slack and Mattermost notifications: *id153
    Specific Superworkflow: *id141
    Subworkflow 1: !!python/tuple [0, 0]
    Subworkflow 2: !!python/tuple [0, 0]
    Superworkflow in SxS w WT with Run Once service: *id154
    SxS Service Targets with Run Once + Skip: *id152
    T: !!python/tuple [500, 0]
    TEST: !!python/tuple [500, 0]
    TEST2: !!python/tuple [500, 0]
    Target Restriction Mechanism: *id135
    Topology Import Service (netbox, librenms, opennms): &id155 [636, 24]
    Topology Import Services: *id155
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id143
    Using get_var, set_var, and get_result Functions: *id118
    VRF Creation and Deletion with Napalm: *id102
    VRF Creation and Deletion with Netmiko: *id116
    Validation Mechanism: &id156 [310, -55]
    'Validation Mechanism: Section to Validate Property': *id156
    Validation Section Mechanism: [470, 106]
    Workflow  in device by device mode: !!python/tuple [0, 0]
    'Workflow Regression R: skip services in service by service mode': *id123
    'Workflow Regression S: conditional skip query with skip value set to False': [
      640, -155]
    Workflow and Subworkflow Iteration: *id157
    Workflow in service by service mode (workflow targets): !!python/tuple [0, 0]
    Workflow in service targets mode: !!python/tuple [0, 0]
    Workflow with Large Payload: *id158
    Workflow with Large Results: *id159
    Workflow with device and value iteration: [500, 0]
    Workflow with iteration target subworkflows: [617, 0]
    Workflow with iteration targets: [500, 0]
    '[DxD and SxS Run Methods] Workflow  in device by device mode': &id163 [500, 0]
    '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': &id164 [
      500, 0]
    '[DxD and SxS Run Methods] Workflow in service targets mode': &id165 [500, 0]
    '[Functions: get_result and get_var] Subworkflow': &id160 [500, 0]
    '[Global variables: get_result and get_var] Subworkflow': *id160
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': &id173 [
      500, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': &id174 [
      500, 0]
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': &id166 [
      500, 0]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id098
    '[Large Workflow with Large Subworkflows] Large Subworkflow 1': *id098
    '[Large Workflow with Large Subworkflows] Large Subworkflow 2': *id098
    '[Large Workflow with Large Subworkflows] Large Subworkflow 3': *id098
    '[Large Workflow with Large Subworkflows] Large Subworkflow 4': *id098
    '[Large Workflow with Large Subworkflows] Large Subworkflow 5': *id098
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id102
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow of Workflow': &id162 [
      -447, 191]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow F S2: Access Variables from Parent Workflow': &id161 [
      -274, 112]
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: Access Variables from Parent Workflow': *id161
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow of Workflows': *id162
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id102
    '[Regression Workflow G: run methods (BFS)] Workflow  in device by device mode': *id163
    '[Regression Workflow G: run methods (BFS)] Workflow in service by service mode (workflow targets)': *id164
    '[Regression Workflow G: run methods (BFS)] Workflow in service targets mode': *id165
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 1': &id168 [
      610, 4]
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 2': &id169 [
      500, 0]
    '[Regression Workflow J: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id166
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode': !!python/tuple [
      500, 0]
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode - service targets': &id170 !!python/tuple [
      500, 0]
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode - workflow targets': &id171 [
      521, -13]
    '[Regression Workflow W: disable result creation mode] Workflow in DxD mode': &id167 [
      500, 0]
    '[Regression Workflow W: disable result creation mode] Workflow in SxS mode': !!python/tuple [
      500, 0]
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in DxD mode': *id167
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in SxS mode': &id172 [
      500, 0]
    '[Regression Workflow: DxD and SxS Run Methods] Workflow  in device by device mode': *id163
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': *id164
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service targets mode': *id165
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 1': *id168
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 2': *id169
    '[Regression Workflow: Skip Query with device in Run Once Mode] Subworkflow in SxS mode - service targets': *id170
    '[Regression Workflow: Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id171
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id167
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id172
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id173
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id174
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id166
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id166
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: Access Variables from Parent Workflow': *id161
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow of Workflows': *id162
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id102
    '[Shared Service in Multiple Subworkflows] Subworkflow 1': *id168
    '[Shared Service in Multiple Subworkflows] Subworkflow 2': *id169
    '[Shared] Large Subworkflow': *id098
    '[Shared] Large Workflow': *id098
    '[Shared] Large Workflow (30 services)': *id098
    '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - service targets': *id170
    '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id171
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id167
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id172
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id173
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id174
    '[Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id166
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id175
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id134
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id104
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id175
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id134
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id104
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id104
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id175
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id134
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id104
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id175
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id134
    get_credential Function: *id093
    iteration_devices_workflow: ['651', '20']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: End
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {(R) Gateway Mechanism (SSH Proxy with Scrapli): false, '[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 74eee826-e9e4-499e-9742-9ec6bf2818bb
  definition: Definition
  delete_spaces_before_matching: false
  description: Monitor eNMS cluster
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-07-11 13:51:13.461232'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: cluster_monitoring
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: cluster_monitoring
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- a_dict: {}
  a_float: 5.0
  a_list: []
  access_groups: ''
  admin_only: false
  an_integer: 10
  boolean1: true
  boolean2: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_integer: 0
  default_uuid: b3c7daf0-ac5d-4a63-beb3-5ffe3bd9b411
  definition: Definition
  delete_spaces_before_matching: false
  description: Example
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  exclusion_field: d
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  ip_address: 10.1.1.1
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 03:59:06.111065'
  log_level: 1
  mac_address: FF:FF:FF:FF:FF:FF
  mail_address: aaa@gmail.com
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Example Service (does nothing)'
  negative_logic: false
  notification_header: ''
  number_in_range: 7
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Advanced Multiprocessing (admin): [-266, -204]
    Fork based on Result with Success & Failure Edges: &id176 [696, 185]
    Fork based on Success Value: *id176
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [-266,
      -204]
    'Miscellaneous: Fork based on Result with Success & Failure Edges': *id176
    Multiprocessing in DxD mode: [-211, 129]
    'Regression Workflow 2: Separate Failure - Success paths': &id178 [741, 106]
    'Regression Workflow C: Advanced multiprocessing': &id177 [-266, -204]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id177
    'Regression Workflow: Advanced Multiprocessing (admin)': *id177
    'Regression Workflow: Separate Failure - Success Paths': *id178
    Separate Failure - Success Paths: [741, 106]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  regex: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Example Service (does nothing)
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  string1: cisco
  string2: s2
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: example_service
  update_pools_after_running: false
  update_target_pools: false
  url: https://www.google.fr/
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 2a444b5b-7dcb-46d3-9386-f6aa1b0ae76d
  definition: Definition
  delete_spaces_before_matching: false
  description: Configuration Backup using NAPALM
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  getters: [get_arp_table, get_interfaces]
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-31 03:59:15.060637'
  local_path: network_data
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[(R) Configuration Properties Backup Services] Configuration Backup (NAPALM)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Configuration Properties Backup Services: [-299, 188]
    (R) Operational Data Backup Service: [-299, 188]
    Operational Data Backup (admin): [-307, 391]
    'Regression Workflow 9: Operational Data Backup': &id179 [-259, 351]
    'Regression Workflow 9: Operational Data Backup (admin)': *id179
    'Regression Workflow: Operational Data Backup (admin)': *id179
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  property: operational_data
  replacements:
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Configuration Backup (NAPALM)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow 9: Operational Data Backup': true, 'Regression Workflow: Operational Data Backup (admin)': true}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_backup_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  commit_configuration: false
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content: vrf instance test
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 0e7de6bf-a6c5-49d6-b45b-567ef335815b
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Create a VRF "test" with Netmiko
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  enable_mode: true
  exit_config_mode: true
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-04 11:01:33.553474'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Configuration and Validation Services] netmiko_create_vrf_test'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Configuration and Validation Services: &id180 [-115, -70]
    'Miscellaneous: Netmiko Services, Connection Cache Management': [-38, -86]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': *id180
    Netmiko Configuration and Validation Services: *id180
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id181 [-38,
      -86]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id181
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id181
    VRF Creation and Deletion with Netmiko: *id181
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: netmiko_create_vrf_test
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: false
  strip_prompt: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3
  type: netmiko_configuration_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: true
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: test
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 80ad614c-8f49-4328-af54-b920697aabbb
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check that the vrf "test" is configured
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-10-10 09:46:36.865576'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Configuration and Validation Services] netmiko_check_vrf_test'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Configuration and Validation Services: &id182 [352, 7]
    Iteration Services Test Workflow: ['147', '-14']
    'Miscellaneous: Netmiko Services, Connection Cache Management': [445, -37]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': *id182
    Netmiko Configuration and Validation Services: *id182
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id183 [445,
      -37]
    'Regression Workflow 2: Separate Failure - Success paths': ['84', '-3']
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id183
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '-50']
    'Regression Workflow A: get_var, set_var, get_result': ['355', '-25']
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id183
    VRF Creation and Deletion with Netmiko: *id183
    iteration_devices_workflow: ['414', '-154']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: netmiko_check_vrf_test
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  commit_configuration: false
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content: no vrf instance test
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 21f33a2c-b2ce-453d-9adc-60c09c68ae53
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Delete VRF "test"
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  enable_mode: true
  exit_config_mode: true
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-01 11:40:18.423301'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Configuration and Validation Services] netmiko_delete_vrf_test'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Configuration and Validation Services: &id184 [347, 119]
    'Miscellaneous: Netmiko Services, Connection Cache Management': [476, 119]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': *id184
    Netmiko Configuration and Validation Services: *id184
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id185 [476,
      119]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id185
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '50']
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id185
    VRF Creation and Deletion with Netmiko: *id185
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: netmiko_delete_vrf_test
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: false
  strip_prompt: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3
  type: netmiko_configuration_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 1
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: Telecom1
  content_match_regex: true
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: d4461d18-e869-438b-9e59-f7da32ba7a33
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check that the vrf "test" is NOT configured
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-10-09 03:24:55.798104'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Netmiko: Check VRF (Telecom1) does not exist'
  negative_logic: true
  notification_header: ''
  number_of_retries: 2
  operating_system: EOS
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Configuration and Validation Services: &id187 [-84, 184]
    Fork based on Result with Success & Failure Edges: &id186 [-179, 259]
    Fork based on Success Value: *id186
    'Miscellaneous: Fork based on Result with Success & Failure Edges': *id186
    'Miscellaneous: Netmiko Services, Connection Cache Management': [-10, 157]
    'Miscellaneous: Netmiko Services, Connection Cache, Targets Definition': *id187
    Netmiko Configuration and Validation Services: *id187
    'Regression Workflow 1: VRF creation and deletion with Netmiko': &id188 [-10,
      157]
    'Regression Workflow 2: Separate Failure - Success paths': &id189 [-194, 225]
    'Regression Workflow 4: VRF creation and deletion with Netmiko': *id188
    'Regression Workflow 5: VRF creation and deletion with Napalm': ['0', '150']
    'Regression Workflow: Separate Failure - Success Paths': *id189
    'Regression Workflow: VRF Creation and Deletion with Netmiko': *id188
    Separate Failure - Success Paths: [-179, 259]
    VRF Creation and Deletion with Netmiko: *id188
    iteration_devices_workflow: ['337', '-145']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: 'Netmiko: Check VRF (Telecom1) does not exist'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: true
  strip_command: true
  strip_prompt: true
  target_devices: [Austin, Washington, Philadelphia]
  target_pools: []
  time_between_retries: 1
  timeout: 3.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: admin
  default_uuid: 34bc8665-9360-4de0-b4d5-8007d06b60f7
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-28 10:36:02.393623'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Shared] REST API: call *is_alive* endpoint'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  payload:
    a: b
    c: ['1', '2', '3']
  pools: [Everything]
  positions:
    (R) Netmiko Prompts Service: &id192 [405, -103]
    (R) Scalability: &id191 [-415, -115]
    Advanced Multiprocessing (admin): [386, 124]
    Fork based on Result with Success & Failure Edges: &id190 [339, 297]
    Fork based on Success Value: *id190
    'Functions: get_var, set_var, and get_result': &id193 [-10, 157]
    Large Workflow (20 services): *id191
    'Miscellaneous: DxD Multiprocessing, RBAC Admin Only, Skip Mechanism': [386, 124]
    'Miscellaneous: Fork based on Result with Success & Failure Edges': *id190
    Multiprocessing in DxD mode: [210, 130]
    Netmiko Prompts: *id192
    'Regression Workflow 2: Separate Failure - Success paths': &id195 [374, 278]
    'Regression Workflow 3: Napalm getters (postprocessing)': ['-50', '0']
    'Regression Workflow A: get_var, set_var, get_result': *id193
    'Regression Workflow C: Advanced multiprocessing': &id194 [386, 124]
    'Regression Workflow C: Advanced multiprocessing (admin)': *id194
    'Regression Workflow D: Prompts': *id192
    'Regression Workflow L: superworkflow': &id196 [162, -126]
    'Regression Workflow P: large workflow (scalability)': *id191
    'Regression Workflow: Advanced Multiprocessing (admin)': *id194
    'Regression Workflow: Netmiko Prompts': *id192
    'Regression Workflow: Scalability Test (large workflow)': *id191
    'Regression Workflow: Separate Failure - Success Paths': *id195
    'Regression Workflow: Specific Superworkflow': *id196
    'Regression Workflow: Superworkflow': *id196
    'Regression Workflow: Using get_var, set_var, get_result functions': *id193
    'Regression workflow P: large workflow (scalability)': *id191
    Scalability Test (large workflow): *id191
    Separate Failure - Success Paths: [374, 278]
    Specific Superworkflow: *id196
    Using get_var, set_var, and get_result Functions: *id193
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Columbus]
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 4225d229-6c01-41fd-941b-cfd2b4bafa83
  definition: Definition
  delete_spaces_before_matching: false
  description: 'Getter: get_facts'
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  getters: [get_facts]
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-07 12:58:14.647164'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] NAPALM: Get Facts'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Fork based on Result with Success & Failure Edges: &id197 [-31, -43]
    Fork based on Success Value: *id197
    'Miscellaneous: Fork based on Result with Success & Failure Edges': *id197
    'Regression Workflow 2: Separate Failure - Success paths': &id199 [-102, -130]
    'Regression Workflow 3: Napalm getters (postprocessing)': &id198 [-154, -70]
    'Regression Workflow A: get_var, set_var, get_result': ['39', '-32']
    'Regression Workflow F: Workflow of Workflows': [3, -51]
    'Regression Workflow: Napalm Getters and Postprocessing': *id198
    'Regression Workflow: Separate Failure - Success Paths': *id199
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id200 [
      -154, -70]
    Separate Failure - Success Paths: [-37, -67]
    Service Priorities, Napalm Getters, Postprocessing: *id200
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 12
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'NAPALM: Get Facts'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: e50a9c76-acde-4d94-8aee-24ccbb9a53e1
  definition: Definition
  delete_spaces_before_matching: false
  description: 'Getter: get_interfaces'
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  getters: [get_interfaces]
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-07 13:27:53.699477'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] NAPALM: Get interfaces'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Fork based on Result with Success & Failure Edges: &id201 [608, 46]
    Fork based on Success Value: *id201
    'Miscellaneous: Fork based on Result with Success & Failure Edges': *id201
    'Regression Workflow 2: Separate Failure - Success paths': &id203 [611, -72]
    'Regression Workflow 3: Napalm getters (postprocessing)': &id202 [-166, 303]
    'Regression Workflow F: Workflow of Workflows': &id204 [-336, 217]
    'Regression Workflow: Napalm Getters and Postprocessing': *id202
    'Regression Workflow: Separate Failure - Success Paths': *id203
    'Regression Workflow: Service Priorities, Napalm Getters, Postprocessing': &id205 [
      -183, 311]
    'Regression Workflow: Workflow of Workflows': *id204
    Separate Failure - Success Paths: [611, -72]
    Service Priorities, Napalm Getters, Postprocessing: *id205
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 12
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'NAPALM: Get interfaces'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: ac33b08e-e253-4285-ac34-72acc02a788b
  definition: Definition
  delete_spaces_before_matching: false
  description: Add devices to the payload
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-12-09 12:30:00.373117'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Modify Payload for Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Combined Device & Target Iteration: &id206 [-201, -15]
    'Iteration Mechanism: Combined Device & Target Iteration': *id206
    Iteration Services Test Workflow: ['3', '-144']
    Iteration Targets Mechanism: [-171, -53]
    'Regression Workflow E: Iteration Targets': &id207 [-195, -168]
    'Regression Workflow F: Workflow of Workflows': &id208 [-790, 110]
    'Regression Workflow: Iteration Targets Mechanism': *id207
    'Regression Workflow: Workflow of Workflows': *id208
    Workflow with iteration target subworkflows: [283, -152]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Modify Payload for Iteration
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Interfaces 1\r\ntargets = ['Loopback101', 'Loopback15'] if device.name\
    \ == \"Washington\" else ['Loopback9', 'Loopback1000']\r\nset_var('Interfaces\
    \ 1', targets, device=device.name)\r\n\r\n# Derived Devices\r\nset_var(\"Derived\
    \ Devices\", [\"Atlanta\", \"Austin\"] if device.name == \"Austin\" else [\"Washington\"\
    ], device=device.name)\r\n\r\n# Interfaces 2\r\nset_var('Interfaces 2', ['Loopback333',\
    \ 'Loopback334'])\r\nsave_result(True, {})"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  command: show vrf a
  completion_time: 1
  config_mode: false
  confirmation1: Protocols
  confirmation2: Interfaces
  confirmation3: bipbipbop
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: e9c246f3-6be1-4ce5-abff-f3c121b984c0
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-09-18 18:31:59.605812'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 2
  multiprocessing: false
  name: '[(R) Netmiko Prompts Service] Test Netmiko Prompt Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Prompts Service: &id209 [22, -74]
    Netmiko Prompts: *id209
    'Regression Workflow D: Prompts': *id209
    'Regression Workflow: Netmiko Prompts': *id209
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  response1: show vrf b
  response2: show vrf c
  response3: ''
  run_method: per_device
  scoped_name: Test Netmiko Prompt Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_prompts_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  command: show vrf
  completion_time: 1
  config_mode: false
  confirmation1: Protocols
  confirmation2: Interfaces
  confirmation3: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 8c92c8ea-6a16-416c-9a76-b761a1bfbc5e
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-07-19 15:41:59.683776'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Prompts Service] Test netmiko prompts pass'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Prompts Service: &id210 [350, 108]
    Netmiko Prompts: *id210
    'Regression Workflow D: Prompts': *id210
    'Regression Workflow: Netmiko Prompts': *id210
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  response1: show vrf
  response2: ''
  response3: ''
  run_method: per_device
  scoped_name: Test netmiko prompts pass
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_prompts_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: cedb995d-6f78-4635-9be5-2b4d2b5d57d9
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-26 06:48:21.758699'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_var, set_var, and get_result] Modify payload (no device)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_var, set_var, and get_result': &id211 [-376, -138]
    'Regression Workflow A: get_var, set_var, get_result': *id211
    'Regression Workflow: Using get_var, set_var, get_result functions': *id211
    Using get_var, set_var, and get_result Functions: *id211
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Modify payload (no device)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"global_variable\", value=1050)\r\nset_var(\"variable\",\
    \ \"variable_in_variables\")\r\nsave_result(success=True, result={})"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: aba9d28f-2932-444d-899d-c65e2e007bbc
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-29 06:50:07.334676'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_var, set_var, and get_result] Modify payload (per device)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_var, set_var, and get_result': &id212 [0, -144]
    'Regression Workflow A: get_var, set_var, get_result': *id212
    'Regression Workflow: Using get_var, set_var, get_result functions': *id212
    Using get_var, set_var, and get_result Functions: *id212
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Modify payload (per device)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"variable1\", 999, device=device.name)\r\nset_var(\"variable2\"\
    , \"1000\", device=device.name, section=\"variables\")\r\nset_var(\"iteration_simple\"\
    , \"192.168.56.50\")\r\ndevices = [\"Boston\", \"Cincinnati\"] if device.name\
    \ == \"Chicago\" else [\"Cleveland\", \"Washington\"]\r\nset_var(\"iteration_device\"\
    , devices, device=device.name)\r\nsave_result(success=True, result={})"
  target_devices: [Washington, Chicago]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf {{iteration_simple}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 101f2f66-3a8e-43fb-a911-236a07654e6d
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: get_var("iteration_device", device=parent_device.name)
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-02-26 06:48:40.762497'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_var, set_var, and get_result] Show vrf with payload helper'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_var, set_var, and get_result': &id213 [474, -11]
    'Regression Workflow A: get_var, set_var, get_result': *id213
    'Regression Workflow: Using get_var, set_var, get_result functions': *id213
    Using get_var, set_var, and get_result Functions: *id213
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show vrf with payload helper
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 1.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf test
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 369c7240-61c1-489d-83c6-6b5a0715cfac
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '[get_var("iteration_simple")]'
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-02-26 06:50:26.306070'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_var, set_var, and get_result] Show vrf with python query'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_var, set_var, and get_result': &id214 [425, 190]
    'Regression Workflow A: get_var, set_var, get_result': *id214
    'Regression Workflow: Using get_var, set_var, get_result functions': *id214
    Using get_var, set_var, and get_result Functions: *id214
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show vrf with python query
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf {{get_result("Modify payload (per device)", device=device.name)["duration"]}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: b1ad55ee-05df-408f-803c-69b99542c9a4
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-29 06:56:23.711236'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_var, set_var, and get_result] show runtime with get_result
    helper'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_var, set_var, and get_result': &id215 [-445, 128]
    'Regression Workflow A: get_var, set_var, get_result': *id215
    'Regression Workflow: Using get_var, set_var, get_result functions': *id215
    Using get_var, set_var, and get_result Functions: *id215
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: show runtime with get_result helper
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 6a021610-58fb-46a4-b444-46c4a179ce8e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match:
    '{{device.ip_address}}': {prefix_length: 24}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  getters: [get_interfaces_ip]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-08 21:45:40.369909'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Getters Workflow: Interface IP'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Napalm Getters Service: &id216 [581, 136]
    Napalm Getters Validation: *id216
    Payload Extraction with Operations: &id217 [-348, -240]
    'Regression Workflow: Napalm Getters Validation': *id216
    'Regression Workflow: Payload Extraction with Operations': *id217
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id217
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id216
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id217
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id216
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id216
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id217
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id216
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id217
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: Interface IP'
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  arguments: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: device
  default_uuid: 3b32d993-fb2d-404e-9cf5-d6380b76518c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {ok: 2}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-04-26 12:51:19.802312'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 2
  multiprocessing: false
  name: '[(R) Ansible Playbook Service] Ansible Workflow: Arista show version'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pass_device_properties: true
  playbook_path: /media/sf_shared/eNMS/files/playbooks/arista_show_version.yml
  pools: [Everything]
  positions:
    (R) Ansible Playbook Service: [-305, 177]
    Ansible Playbook Service: &id219 [-305, 177]
    Ansible with Validation: [-116, 248]
    'Regression Workflow 6: Ansible with Validation': &id218 [-107, 153]
    'Regression Workflow B: Napalm getters validation': [-30, 126]
    'Regression Workflow: Ansible with Validation': *id218
    'Services: Ansible Playbook Service': *id219
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Ansible Workflow: Arista show version'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: ansible_playbook_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  arguments: ''
  completion_time: 1
  content_match: ip address\s.*/24
  content_match_regex: true
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  default_uuid: 0e0f6eea-3705-46d0-abb9-83013e0a43bf
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-27 05:41:57.831683'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Ansible Playbook Service] Ansible Workflow: Arista show configuration
    (regex match)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pass_device_properties: true
  playbook_path: /media/sf_shared/eNMS/files/playbooks/arista_show_running_config.yml
  pools: [Everything]
  positions:
    (R) Ansible Playbook Service: [267, 283]
    Ansible Playbook Service: &id221 [267, 283]
    Ansible with Validation: [370, 229]
    'Regression Workflow 6: Ansible with Validation': &id220 [179, -62]
    'Regression Workflow: Ansible with Validation': *id220
    'Services: Ansible Playbook Service': *id221
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Ansible Workflow: Arista show configuration (regex match)'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: ansible_playbook_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  arguments: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: device
  default_uuid: 92029c79-84a0-4081-82bd-976f9f8037d6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {action: debug, changed: false, failed: false}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-27 05:38:15.786745'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Ansible Playbook Service] Ansible Workflow: Arista show configuration
    (dict match)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pass_device_properties: true
  playbook_path: /media/sf_shared/eNMS/files/playbooks/arista_show_running_config.yml
  pools: [Everything]
  positions:
    (R) Ansible Playbook Service: [211, 148]
    Ansible Playbook Service: &id223 [211, 148]
    Ansible with Validation: [348, 36]
    'Regression Workflow 6: Ansible with Validation': &id222 [486, 173]
    'Regression Workflow: Ansible with Validation': *id222
    'Services: Ansible Playbook Service': *id223
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Ansible Workflow: Arista show configuration (dict match)'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: ansible_playbook_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show interface {{non_default_iteration_value_name}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: does not exist
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 471d0603-85ba-43a4-b84e-7200c3e85650
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: get_var("Derived Devices", device=device.name)
  iteration_devices_property: name
  iteration_values: '["Loopback11","Loopback15"]'
  iteration_variable_name: non_default_iteration_value_name
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-07 04:19:08.658446'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Combined Device & Target Iteration] Iteration Targets Workflow - Test 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Combined Device & Target Iteration: &id224 [214, 72]
    'Iteration Mechanism: Combined Device & Target Iteration': *id224
    Iteration Targets Mechanism: [198, -59]
    'Regression Workflow E: Iteration Targets': &id225 [240, -144]
    'Regression Workflow: Iteration Targets Mechanism': *id225
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Iteration Targets Workflow - Test 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show interface {{iteration_value}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: does not exist
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: f4f6dd23-2fab-4b7d-ad9c-0fc348915e63
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: get_var('Interfaces 1', device=device.name)
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-07 04:19:45.112707'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Combined Device & Target Iteration] Iteration Target Workflow - Test 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Combined Device & Target Iteration: &id226 [633, 36]
    'Iteration Mechanism: Combined Device & Target Iteration': *id226
    Iteration Targets Mechanism: [572, -4]
    'Regression Workflow E: Iteration Targets': &id227 [572, -4]
    'Regression Workflow: Iteration Targets Mechanism': *id227
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Iteration Target Workflow - Test 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show interface {{iteration_value}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: does not exist
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: bdad80c5-6861-4dcc-b446-6de2435ab08d
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Check the iteration mechanism (interfaces)
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: get_var("Derived Devices", device=parent_device.name)
  iteration_devices_property: name
  iteration_values: get_var('Interfaces 2')
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-05-07 04:19:56.019693'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Combined Device & Target Iteration] Iteration Target Workflow - Test 3'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Combined Device & Target Iteration: &id228 [468, 196]
    'Iteration Mechanism: Combined Device & Target Iteration': *id228
    Iteration Targets Mechanism: [647, 164]
    'Regression Workflow E: Iteration Targets': &id229 [556, 123]
    'Regression Workflow: Iteration Targets Mechanism': *id229
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Iteration Target Workflow - Test 3
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: a0ba1c4c-1789-4665-9725-dc782c700406
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: '["Washington", "Atlanta"]'
  iteration_variable_name: iteration_value
  last_modified: '2021-08-21 12:59:02.930936'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Combined Device & Target Iteration] Iteration Targets Workflow - Test 4'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    Combined Device & Target Iteration: &id230 [-120, 211]
    'Iteration Mechanism: Combined Device & Target Iteration': *id230
    Iteration Targets Mechanism: [36, 183]
    'Regression Workflow E: Iteration Targets': &id231 [-135, 91]
    'Regression Workflow: Iteration Targets Mechanism': *id231
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/instance/device/{{iteration_value}}
  run_method: per_device
  scoped_name: Iteration Targets Workflow - Test 4
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 87135703-c855-42d2-99e5-76e5223560e5
  definition: Definition
  delete_spaces_before_matching: false
  description: Poll configuration and push to gitlab
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    3b9c0900-5718-4298-afcc-67bb0a7fb3af:
      alignment: center
      content: "This workflow calls netmiko, napalm and scrapli backup services.\r\
        \n"
      positions: [-267, 113]
      size: 14
  last_modified: '2022-05-13 09:44:16.415721'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: (R) Configuration Properties Backup Services
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow F S1: Subworkflow of Workflow': [200, -205]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: (R) Configuration Properties Backup Services
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Configuration Properties Backup
      Services] Configuration Backup (NAPALM)', '[(R) Configuration Properties Backup
      Services] Get Operational Data with Netmiko', '[(R) Configuration Properties
      Backup Services] Get Configuration with Netmiko', '[(R) Configuration Properties
      Backup Services] Push Configurations to Git', '[(R) Configuration Properties
      Backup Services] Get Configuration with Scrapli', '[(R) Configuration Properties
      Backup Services] Get Operational Data with Scrapli']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: true
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 16f875b4-9e2e-4536-9594-5884a931b7a1
  definition: is_alive
  delete_spaces_before_matching: false
  description: Create and delete a VRF with Netmiko
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    6a9299b5-7ec9-40e8-955d-408344e7ea2e:
      alignment: left
      content: "This service is configured with \"Close connection\".\r\nIt should\
        \ use the same connection as in the previous service, then close it.\r\nExpected\
        \ logs:\r\n- netmiko_check_vrf_test - DEVICE Washington : Using cached Netmiko\
        \ connection\r\n- netmiko_check_vrf_test - DEVICE Washington : Closed netmiko\
        \ connection\r\n"
      positions: [525, -84]
    735baaec-e1f2-4b17-b402-11d8ae7a0d75:
      alignment: left
      content: "This workflow tests:\r\n- the targets defined as a combination of\
        \ devices and pools.\r\nIt runs on two devices, the pool \"Washington\" and\
        \ the device \"Austin\".\r\n- The netmiko Validation and Configuration services.\
        \ It creates and\r\ndeletes a VRF on the router with Netmiko.\r\n- The connection\
        \ cache management: closing cached connection,\r\nopening new connection,\
        \ reusing cached connection.\r\nAt the end of the workflow, the cache connection\
        \ should be closed.\r\nExpected log:\r\n- Regression Workflow 4: VRF creation\
        \ and deletion with Netmiko -\r\nDEVICE Washington : Closed netmiko connection"
      positions: [-96, 61]
    a7458a18-4812-498e-857d-b885237a6525:
      alignment: left
      content: "This service is configured with \"Start New Connection\".\r\nIt should\
        \ close the connection opened at the previous service,\r\nand start a new\
        \ one.\r\nExpected Log:\r\n- Netmiko: Check VRF (test) does not exist - DEVICE\
        \ Washington : Closed netmiko connection\r\n- Netmiko: Check VRF (test) does\
        \ not exist - DEVICE Washington : Opening new Netmiko connection\r\n"
      positions: [-82, 299]
    b5dc9b96-d0bf-4092-8e60-b82ca6db2ad6:
      alignment: left
      content: "This service should automatically detect that there is no\r\nlonger\
        \ a cached connection, and recreate a new one.\r\nExpected log:\r\nnetmiko_delete_vrf_test\
        \ - DEVICE Washington : Opening new Netmiko connection\r\n"
      positions: [529, 207]
  last_modified: '2022-01-16 05:37:56.023249'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: (R) Netmiko Configuration and Validation Services
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow F: Workflow of Workflows': [-423, -31]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Netmiko Configuration and Validation Services
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Netmiko Configuration and Validation
      Services] netmiko_create_vrf_test', '[(R) Netmiko Configuration and Validation
      Services] netmiko_check_vrf_test', '[(R) Netmiko Configuration and Validation
      Services] netmiko_delete_vrf_test', '[Shared] Netmiko: Check VRF (Telecom1)
      does not exist']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  superworkflow: Specific Superworkflow
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Basics
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 03d5d1b6-4d53-4ddd-ab60-ea2eb9d8b358
  definition: Definition
  delete_spaces_before_matching: false
  description: Workflow with separate failure - success path
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    1d6eb567-a377-4442-a3e6-fad7e792c516:
      alignment: left
      content: Run "show vrf" with Netmiko
      positions: [-187, 318]
    63bebf9d-b5d5-47fd-9849-4177f2517be4:
      alignment: left
      content: "This workflow must be run with the router up and running.\r\nIt runs\
        \ on 3 devices: Washington (active router) and 2 dummy devices.\r\nThe first\
        \ service is a netmiko validation service running \"show vrf\": it\r\nshould\
        \ pass for Washington and fail for the others.\r\nAs a result, Washington\
        \ will take the upward path, and the others\r\nwill take the downward path.\r\
        \nBoth path rejoin at the end.\r\nTo be tested both with and without multiprocessing."
      positions: [194, 131]
    abc34c52-1c3e-4f1b-964b-8a1ee0b3a35a:
      alignment: left
      content: 'Expected: 3 devices'
      positions: [696, 308]
    b8cb58d2-b2ee-4816-8b34-23191c4604d8:
      alignment: left
      content: 'Expected: 1 device'
      positions: [-169, 49]
    c42ee848-1630-4a36-9b3c-0ff3e88e449c:
      alignment: left
      content: "Retrieving interfaces data with Napalm.\r\nShould pass for Washington,\
        \ fail for the others.\r\nExpected: Washington exiting via the success edge,\r\
        \n2 others via the failure edge.\r\n"
      positions: [676, -34]
    ef63ac32-ca44-4045-a511-d1271a8646a6:
      alignment: left
      content: 'Expected: 2 devices'
      positions: [113, 266]
  last_modified: '2022-01-16 05:41:23.421169'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: Fork based on Success Value
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Fork based on Success Value
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] NAPALM: Get Facts', '[Shared]
      REST API: call *is_alive* endpoint', '[Shared] Netmiko: Check VRF (Telecom1)
      does not exist', '[Shared] Example Service (does nothing)', '[Shared] NAPALM:
      Get interfaces']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, Philadelphia, LosAngeles]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 1b1a7e6c-eab8-42a4-89b8-dd07309a6124
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    4b2ac5bb-900e-40b2-952b-30614cf6e22a:
      alignment: left
      content: "Use Netmiko to run a \"show vrf\".\r\nUse the validation mechanism\
        \ to check for the string \"NOVRF\".\r\nThere is no such VRF configured so\
        \ the service is expected to fail.\r\nRetry twice with 2 seconds between retries."
      positions: [-243, -179]
    ce7e6857-714e-4102-a65b-ec2d67414866:
      content: "Test of the maximum number of run of a service in a workflow.\r\n\
        For Test Netmiko Prompt Service, it is set to 2: it should run\r\nonce more\
        \ after the REST service.\r\n"
      positions: [288, -203]
  last_modified: '2022-07-12 05:30:46.993613'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: (R) Netmiko Prompts Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Netmiko Prompts Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Netmiko Prompts Service] Test
      Netmiko Prompt Service', '[(R) Netmiko Prompts Service] Test netmiko prompts
      pass', '[Shared] REST API: call *is_alive* endpoint', '[(R) Netmiko Prompts
      Service] Check VRF (NOVRF) exists']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Global Variables
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: cb0e1346-60c0-42f9-9677-6c189b2bcc9e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    6c961848-4911-4983-aaf9-d8e2dcb69bca:
      alignment: left
      content: "Set a variable called \"iteration_device\" that we will use in the\
        \ following service\r\nto define iteration devices.\r\ndevices = [\"Boston\"\
        , \"Cincinnati\"] if device.name == \"Chicago\" else [\"Cleveland\", \"Washington\"\
        ]\r\nset_var(\"iteration_device\", devices, section=\"pools\", device=device.name)."
      positions: ['103', '-224']
    8d64652f-dbc6-4916-ba06-a49ae0ed36fb:
      alignment: left
      content: "Will run on 4 \"iterated devices\" in total.\r\nTests that \"parent_device\"\
        \ and \"device\"\r\ncan both be used from the \"Service\" tab.\r\nTests sending\
        \ multiple commands with a Netmiko service."
      positions: [568, -123]
    afb8aaab-be91-4d46-8de9-9f7803682323:
      alignment: left
      content: "This service is configured to run SERVICE BY SERVICE.\r\nThe first\
        \ service is set to \"Run once\": it must run only once for both devices.\r\
        \nThis workflow uses \"set_var\" to modify the payload, and get_var to\r\n\
        retrieve a variable.\r\nIt also uses \"get_result\" to retrieve the result\
        \ of a previously run job."
      positions: [-92, -34]
  last_modified: '2022-01-20 07:16:42.896628'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: 'Functions: get_var, set_var, and get_result'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Functions: get_var, set_var, and get_result'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Functions: get_var, set_var, and
      get_result] Modify payload (no device)', '[Functions: get_var, set_var, and
      get_result] Modify payload (per device)', '[Functions: get_var, set_var, and
      get_result] Show vrf with payload helper', '[Functions: get_var, set_var, and
      get_result] Show vrf with python query', '[Shared] REST API: call *is_alive*
      endpoint', '[Functions: get_var, set_var, and get_result] show runtime with
      get_result helper']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 4f1976cc-d27c-4273-950c-fe4bbb2b7a35
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    1dff7d24-0b6b-4524-a07a-26ac67e1ae2c:
      alignment: center
      content: "Uses Ansible to do a \"show configuration\":\r\n  tasks:\r\n    -\
        \ name: eos show commands\r\n      eos_command:\r\n        commands:\r\n \
        \         - show running-config\r\n        provider: \"{{ cli }}\"\r\n   \
        \   register: output\r\nConvert the result to text and check that the result\
        \ matches\r\nthe following regular expression: \"ip address\\s.*/32\""
      positions: [270, 416]
    36072c59-543f-4600-b2be-f88c366ccb79:
      alignment: center
      content: "Uses Ansible to do a \"show configuration\".\r\nConvert the result\
        \ to a dictionary and check that it\r\ncontains the following dictionary:\r\
        \n{\"action\":\"debug\",\"changed\":false,\"failed\":false}"
      positions: [293, 77]
    813cd109-d252-4731-99b8-7a0828883b6d:
      alignment: left
      content: "Uses Ansible to do a \"show version\":\r\n  tasks:\r\n    - name:\
        \ eos show commands\r\n      eos_command:\r\n        commands:\r\n       \
        \   - show version\r\n        provider: \"{{ cli }}\"\r\n      register: output\r\
        \nConverts the results to a dictionary.\r\nCheck that the results contains\
        \ the following dictionary:\r\n{\"ok\": 2} (via dictionary inclusion)\r\n"
      positions: ['-281.11001252948114', '328.74855358195754']
      size: 14
    af753a72-ccd8-43fd-87c2-fde82348f798:
      alignment: left
      content: "Runs \"simple_playbook.yml\":\r\n---\r\n- hosts: all\r\n  name: Simple\
        \ playbook\r\n  gather_facts: false\r\n  connection: local\r\n"
      positions: [-626, 386]
    cb3b0740-411a-4138-a54d-31a133413526:
      alignment: left
      content: "This workflow :\r\n- uses the Ansible Playbook Service to run playbooks\r\
        \n- uses the conversion mechanism to turn the output into a dictionary (JSON\
        \ conversion)\r\n- uses the \"Text with regular expression\" and \"dictionary\
        \ inclusion\" mechanisms to validate the result."
      positions: [-240, 69]
  last_modified: '2022-04-26 12:35:22.898565'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: (R) Ansible Playbook Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Ansible Playbook Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Ansible Playbook Service] Ansible
      Workflow: Arista show version', '[(R) Ansible Playbook Service] Ansible Workflow:
      Arista show configuration (regex match)', '[(R) Ansible Playbook Service] Ansible
      Workflow: Arista show configuration (dict match)', '[(R) Ansible Playbook Service]
      Simple Playbook']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Run Methods
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 0c5928bd-ee55-4535-ba36-e240cce0fbeb
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {mode: LAB}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0ff12571-5530-428f-9f4e-d09f6cb963d6:
      alignment: left
      content: "This workflow is testing that DxD multiprocessing is working correctly.\r\
        \nIt runs on 17 devices in DxD mode with 10 processes."
      positions: [20, -28]
    682828ea-f876-4028-8bf9-eb67ac8e520b:
      alignment: left
      content: "\r\n\r\n"
      positions: [-107, -81]
  last_modified: '2022-01-16 05:30:59.362228'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 10
  maximum_runs: 1
  multiprocessing: true
  name: Multiprocessing in DxD mode
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Multiprocessing in DxD mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Example Service (does nothing)',
    '[Shared] REST API: call *is_alive* endpoint']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Jackson, PaloAlto, Austin, Washington, Chicago, SanJose, SanDiego,
    Dallas, Houston, Baltimore, Cleveland, Cincinnati, Minneapolis, Sacramento, SanFrancisco,
    Oakland, Denver]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Iteration Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 6a95c637-7892-4738-8871-f96ea74f85e5
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0d15f57d-aef4-47a4-9ba5-86ab26acace4:
      alignment: left
      content: "This service tests the case where both iteration devices and iteration\
        \ values\r\nare used at the same time.\r\nThe first service sets the necessary\
        \ variables, and the next 3 services uses\r\nthe iteration value with netmiko\
        \ to run a \"show interface {{ value }}\" command.\r\nThe last service uses\
        \ the iteration value to make a REST call to the following URL:\r\nhttp://127.0.0.1:5000/rest/instance/device/{{iteration_value}}"
      positions: [-244, 92]
    5043ff9c-79b0-4712-a706-502724ac4e31:
      alignment: left
      content: "The iteration devices field is set to \"get_var(\"Derived Devices\"\
        , device=device.name)\"\r\nThe iteration values are set to [\"Loopback11\"\
        ,\"Loopback15\"] (static), and the name\r\nof the iteration variable is set\
        \ to a non-default value.\r\nThe service does a \"show interface\" over the\
        \ loopback interfaces.\r\nFor \"Austin\", one of the iterated device is Atlanta\
        \ which does not exist,\r\nso netmiko should fail to connect and the service\
        \ will fail for Atlanta.\r\nAustin should stop here as a result, while Washington\
        \ moves forward."
      positions: [275, -72]
    76ece5f4-54f7-4f6b-8ea0-7d2918524e92:
      alignment: left
      content: "Only Washington should reach this service.\r\nThis service iterates\
        \ over a set of values \"Interfaces 1\"\r\ndefined at the first step (\"Modify\
        \ Payload\"):\r\nget_var('Interfaces 1', device=device.name)\r\nThe \"get_var\"\
        \ function will evaluate to\r\n['Loopback101', 'Loopback15']. None of these\
        \ interfaces\r\nexist, and the validation checks for \"does not exist\" in\
        \ the\r\noutput, so the service should pass."
      positions: [784, -98]
    93d396cb-cc7e-47ac-ac12-8f75207dcb14:
      alignment: left
      content: "This service combines iteration devices and iteration values once\
        \ again.\r\nThe iteration devices query is the same as  in \"Test 1\", except\
        \ that it uses\r\nthe \"parent_device\" global variable in the get_var function.\r\
        \nWhen iteration devices are computed, \"parent_device\" and \"device\"\r\n\
        should evaluate to the same device.\r\nFor each derived device, it will iterate\
        \ over the \"Interface 2\" variable which will\r\nevaluate to ['Loopback333',\
        \ 'Loopback334'] (set in the Modify Payload service).\r\nThe validation checks\
        \ that \"does not exist\" is in the result.\r\n\r\n"
      positions: [534, 324]
    b61a926f-87e4-48a6-86bd-74500e9568ab:
      alignment: left
      content: "Set the following variables in the payload :\r\n- Interfaces 1 : ['Loopback101',\
        \ 'Loopback15'] for \"Washington\"\r\notherwise ['Loopback9', 'Loopback1000']\r\
        \n- Derived Devices : [\"Atlanta\", \"Austin\"] for \"Austin\" else [\"Washington\"\
        ]\r\n- Interfaces 2 : ['Loopback333', 'Loopback334'] for any device"
      positions: [-261, -105]
    fbd0224f-eae2-461b-bfc5-9de385e078f0:
      alignment: left
      content: "The iteration values field is hardcoded to '[\"Washington\", \"Atlanta\"\
        ]'.\r\nThe service makes a REST call to\r\nhttp://127.0.0.1:5000/rest/instance/device/{{get_var('iteration_value')}}."
      positions: [-113, 314]
  last_modified: '2022-01-16 05:15:22.444345'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Combined Device & Target Iteration
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Combined Device & Target Iteration
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Modify Payload for Iteration',
    '[Combined Device & Target Iteration] Iteration Target Workflow - Test 2', '[Combined
      Device & Target Iteration] Iteration Targets Workflow - Test 1', '[Combined
      Device & Target Iteration] Iteration Target Workflow - Test 3', '[Combined Device
      & Target Iteration] Iteration Targets Workflow - Test 4']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  add_header: true
  admin_only: false
  close_connection: true
  commands:
  - {prefix: shusers, value: show users}
  - {prefix: shipintbr, value: show ip interface brief}
  - {prefix: '', value: show vrf}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  completion_time: 1
  config_mode: false
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 7b2d3e3f-1444-4317-9ae8-cb9dd65c21f3
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2022-05-13 09:43:40.064022'
  local_path: network_data
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Configuration Properties Backup Services] Get Operational Data with
    Netmiko'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Configuration Properties Backup Services: [-25, 33]
    (R) Operational Data Backup Service: [-25, 33]
    Operational Data Backup (admin): [-78, 70]
    'Regression Workflow 9: Operational Data Backup': &id232 [-125, 15]
    'Regression Workflow 9: Operational Data Backup (admin)': *id232
    'Regression Workflow: Operational Data Backup (admin)': *id232
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  property: operational_data
  replacements:
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Operational Data with Netmiko
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_backup_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Run Methods
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: bc289981-50e8-46bd-8526-ac69fe48a905
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-16 05:31:20.934203'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: DxD and SxS Run Methods
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: DxD and SxS Run Methods
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[DxD and SxS Run Methods] Workflow  in
      device by device mode', '[DxD and SxS Run Methods] Service in run once mode',
    '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)',
    '[DxD and SxS Run Methods] Service in Run once per device mode', '[DxD and SxS
      Run Methods] Workflow in service targets mode']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: ae21f693-563c-4c37-83b7-2a70fe521dcb
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:56.780411'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Workflow  in device by device mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    DxD and SxS Run Methods: &id233 [-296, -98]
    'Regression Workflow G: run methods (BFS)': *id233
    'Regression Workflow: DxD and SxS Run Methods': *id233
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Workflow  in device by device mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[DxD and SxS Run Methods] Workflow  in
      device by device mode] Validation show VRF']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: ''
  default_uuid: e4e43439-9e24-469e-b36b-bc3b6906483e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-12-05 04:47:34.680139'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Service in run once mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    DxD and SxS Run Methods: &id234 [-135, 189]
    'Regression Workflow G: run methods (BFS)': *id234
    'Regression Workflow: DxD and SxS Run Methods': *id234
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: ''
  run_method: per_device
  scoped_name: Service in run once mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 285f8bcc-5b0a-4f68-8457-fa914bcca43c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:56.810878'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    DxD and SxS Run Methods: &id235 [123, -96]
    'Regression Workflow G: run methods (BFS)': *id235
    'Regression Workflow: DxD and SxS Run Methods': *id235
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Workflow in service by service mode (workflow targets)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[DxD and SxS Run Methods] Workflow
      in service by service mode (workflow targets)] Validation show VRF']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: ''
  default_uuid: e10751fb-4e75-4cc6-b340-297faffa0940
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-12-05 04:48:35.401292'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Service in Run once per device mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    DxD and SxS Run Methods: &id236 [254, 163]
    'Regression Workflow G: run methods (BFS)': *id236
    'Regression Workflow: DxD and SxS Run Methods': *id236
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: ''
  run_method: per_device
  scoped_name: Service in Run once per device mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: fe3f8eef-dd06-4847-84f9-053a6dee7cd6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:56.844799'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[DxD and SxS Run Methods] Workflow in service targets mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    DxD and SxS Run Methods: &id237 [622, -89]
    'Regression Workflow G: run methods (BFS)': *id237
    'Regression Workflow: DxD and SxS Run Methods': *id237
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Workflow in service targets mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[DxD and SxS Run Methods] Workflow
      in service targets mode] Validation show VRF']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: ''
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 73862812-df82-4ac4-8318-88b6234ab115
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-12-05 04:52:26.145384'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[DxD and SxS Run Methods] Workflow  in device by device mode] Validation
    show VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[DxD and SxS Run Methods] Workflow  in device by device mode': &id238 [248, -94]
    '[Regression Workflow G: run methods (BFS)] Workflow  in device by device mode': *id238
    '[Regression Workflow: DxD and SxS Run Methods] Workflow  in device by device mode': *id238
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Validation show VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: ''
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: ae0e2167-e441-413f-94ef-f4973b0d80dd
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-12-05 04:52:44.909327'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[DxD and SxS Run Methods] Workflow in service by service mode (workflow
    targets)] Validation show VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': &id239 [
      239, -108]
    '[Regression Workflow G: run methods (BFS)] Workflow in service by service mode (workflow targets)': *id239
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service by service mode (workflow targets)': *id239
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Validation show VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: ''
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 137503f6-65b0-4a77-8b0e-fd4b4b234c8a
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-12-05 04:53:36.285402'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[DxD and SxS Run Methods] Workflow in service targets mode] Validation show
    VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[DxD and SxS Run Methods] Workflow in service targets mode': &id240 [234, -86]
    '[Regression Workflow G: run methods (BFS)] Workflow in service targets mode': *id240
    '[Regression Workflow: DxD and SxS Run Methods] Workflow in service targets mode': *id240
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Validation show VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Philadelphia, LosAngeles]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Basics
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: f6d0000b-2396-47b8-916e-15fe3b6c49f8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    2e441343-09bb-478c-91d2-78225ce412a7:
      alignment: left
      content: "This workflow tests:\r\n- subworkflow iteration (to run both in device\
        \ by device and service by service mode)\r\n- having the same shared service\
        \ in different subworkflow (make sure the progress\r\nis displayed per subworkflow\
        \ and not for the whole runtime)"
      positions: [146, -81]
    468e9cf3-85da-4e97-9a1c-0acc89076aeb:
      alignment: left
      content: "This first subworkflow will run on Washington and Austin\r\nas hardcoded\
        \ iterated devices.\r\nWashington should pass the shared service, Austin fail.\r\
        \nA failure edge is drawn to the end, so both iterated devices\r\nshould pass\
        \ the workflow, and it should be a success\r\nfor PaloAlto (iteration device)."
      positions: [-213, 46]
    77bbb8a5-d4ab-4eed-818d-da17f6ec405d:
      alignment: left
      content: "This subworkflow contains the same shared service, but :\r\n- it runs\
        \ on Washington and Atlanta\r\n- Atlanta should fail and no failure edge exists\
        \ to the end\r\n=> The workflow should fail for PaloAlto.\r\nPaloAlto should\
        \ still reach end through the failure edge,\r\nso the top-level workflow should\
        \ be a success."
      positions: [580, 192]
  last_modified: '2022-01-20 07:28:59.262995'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Shared Service in Multiple Subworkflows
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Shared Service in Multiple Subworkflows
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared Service in Multiple Subworkflows]
      Subworkflow 1', '[Shared Service in Multiple Subworkflows] Subworkflow 2']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: c4c000fa-e7e6-4922-8515-e70fc275341c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["Washington", "Austin"]'
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:56.924607'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared Service in Multiple Subworkflows] Subworkflow 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow H: shared service in multiple subworkflows': &id241 [-241,
      197]
    'Regression Workflow: Shared Service in Multiple Subworkflows': *id241
    Shared Service in Multiple Subworkflows: *id241
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Subworkflow 1
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Shared Service for Regression
      Workflow H']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 4fc3a49b-3498-48a4-9aa6-725b1f26d635
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["Washington", "Atlanta"]'
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:56.957394'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared Service in Multiple Subworkflows] Subworkflow 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow H: shared service in multiple subworkflows': &id242 [548,
      48]
    'Regression Workflow: Shared Service in Multiple Subworkflows': *id242
    Shared Service in Multiple Subworkflows: *id242
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Subworkflow 2
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Shared Service for Regression
      Workflow H']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: NOMATCH
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 285e7d00-beb9-4208-8dfe-8296c861816d
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-12-16 16:46:16.211030'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Shared Service for Regression Workflow H'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 1': &id243 [
      167, -185]
    '[Regression Workflow H: shared service in multiple subworkflows] Subworkflow 2': &id244 [
      243, -104]
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 1': *id243
    '[Regression Workflow: Shared Service in Multiple Subworkflows] Subworkflow 2': *id244
    '[Shared Service in Multiple Subworkflows] Subworkflow 1': *id243
    '[Shared Service in Multiple Subworkflows] Subworkflow 2': *id244
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Shared Service for Regression Workflow H
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  arguments: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  default_uuid: 7469be25-8e54-4116-813e-9029bd2f9098
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-19 05:09:22.996758'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Ansible Playbook Service] Simple Playbook'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  options: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pass_device_properties: false
  playbook_path: /media/sf_shared/eNMS/files/playbooks/simple_playbook.yml
  pools: [Everything]
  positions:
    (R) Ansible Playbook Service: [-640, 277]
    Ansible Playbook Service: &id246 [-640, 277]
    Ansible with Validation: [-630, 214]
    'Regression Workflow 6: Ansible with Validation': &id245 [-536, 192]
    'Regression Workflow: Ansible with Validation': *id245
    'Services: Ansible Playbook Service': *id246
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Simple Playbook
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: ansible_playbook_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Iteration Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 9c3d5316-c765-4aeb-b715-aa719b2927b5
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    13d32f97-9185-4863-adf0-0a741471f8fc:
      alignment: left
      content: "The iteration value field is set to the \"dict_iteration\" variable\
        \ via get_result,\r\nwith the iteration variable name set to \"command_dict\"\
        .\r\nThe service uses netmiko to show the vrf \"test\" and \"test2\", via\r\
        \nthe command \"show vrf {{command_dict[\"command\"]}}\"."
      positions: [454, 90]
    9a8d7756-d57d-48bd-97fe-1f3df896110c:
      alignment: left
      content: "This workflow is testing a specific case of the iteration target mechanism,\r\
        \nwhere the iteration variable is a dictionary: eNMS iterates over the values\r\
        \nof the dictionary.\r\nThe workflow proceeds to using the dictionary values\
        \ with netmiko to\r\nshow the associated VRFs via the \"show vrf {{...}}\"\
        \ command."
      positions: [150, -174]
    f93c7a5d-e43f-43a6-b392-fe75c02ab798:
      alignment: left
      content: "Set the \"result\" value to the following dictionary:\r\n\"dict_iteration\"\
        : {\r\n    \"variable1\": {\"command\": \"test\"},\r\n    \"variable2\": {\"\
        command\": \"test2\"}\r\n}"
      positions: [-111, 83]
  last_modified: '2022-01-16 05:15:50.185310'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Dictionary as Iteration Target Variable
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dictionary as Iteration Target Variable
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Dictionary as Iteration Target Variable]
      Set Variables for Iteration', '[Dictionary as Iteration Target Variable] Show
      VRF with iteration']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 6b263634-df29-46bd-9088-6d0f4641aff1
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-22 09:57:19.634575'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Dictionary as Iteration Target Variable] Set Variables for Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Advanced Iteration Targets: &id248 [132, -202]
    Basic Iteration Targets with Netmiko: [-209, -7]
    Dictionary as Iteration Target Variable: &id247 [-209, -7]
    'Iteration Mechanism: Dictionary as Iteration Target Variable': *id247
    Iteration Targets with a Dictionary: *id247
    'Regression Workflow I: Iteration Targets Advanced': *id248
    'Regression Workflow: Advanced Iteration Targets': *id248
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Set Variables for Iteration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow: Advanced Iteration Targets': false}
  skip_query: ''
  skip_value: success
  source_code: "results[\"success\"] = True\r\nresults[\"result\"] = {\r\n  \"dict_iteration\"\
    : {\r\n    \"variable1\": {\"command\": \"test\"},\r\n    \"variable2\": {\"command\"\
    : \"test2\"}\r\n  }\r\n}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf {{command_dict["command"]}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 3a9da36d-9c15-4233-ad27-eff0e91e4b71
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: get_result("Set Variables for Iteration", device=device.name)["result"]["dict_iteration"]
  iteration_variable_name: command_dict
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-02-22 10:09:31.770582'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Dictionary as Iteration Target Variable] Show VRF with iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Advanced Iteration Targets: &id250 [135, 100]
    Basic Iteration Targets with Netmiko: [436, -6]
    Dictionary as Iteration Target Variable: &id249 [436, -6]
    'Iteration Mechanism: Dictionary as Iteration Target Variable': *id249
    Iteration Targets with a Dictionary: *id249
    'Regression Workflow I: Iteration Targets Advanced': *id250
    'Regression Workflow: Advanced Iteration Targets': *id250
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show VRF with iteration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow: Advanced Iteration Targets': false}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Iteration Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 0b73e38f-b5e1-4526-aa8b-1762c12f7f97
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: '["A", "B", "C"]'
  iteration_variable_name: top_level_iteration
  labels:
    0f4aee6b-bb98-4f76-b25c-1286a2aab65a:
      alignment: left
      content: "This workflow runs with iteration value set to [\"A\", \"B\", \"C\"\
        ] (variable: \"top_level_iteration\"),\r\non one device: Washington.\r\nThe\
        \ first service will simply use the iteration value in the result (expected:\
        \ 3 results)\r\nThe first subworkflow tests iteration value with a subworkflow\
        \ on 3 values:\r\n[1, 2, 3] (variable: \"subworkflow_iteration\").\r\nThe\
        \ second subworkflow tests subworkflow combined device and value iteration\
        \ in DxD mode.\r\nThe third subworkflow tests subworkflow device iteration\
        \ in SxS w/ WF targets mode.\r\nExpected 3 results for the subworkflow, and\
        \ 9 results for the service within it.\r\nThis workflow must be tested both\
        \ in DxD and SxS w/ WF targets run mode."
      positions: [229, 303]
    1aaeee9b-2ae3-428f-86c4-a0ddba662139:
      alignment: left
      content: "Iteration value retrieved from payload:\r\n\"get_var(\"device_iteration\"\
        , device=device.name)\"\r\nShould evaluate to \"[\"Atlanta\", \"SanFrancisco\"\
        ]\".\r\nWorkflow in SxS w/ WF targets mode."
      positions: [699, 577]
    4a67748b-2d06-47fc-b648-39e02d6cf123:
      alignment: left
      content: "Tests subworkflow combined iteration in DxD mode,\r\nwith iteration\
        \ devices set to [\"PaloAlto\", \"Austin\"],\r\nand value iteration set to\
        \ [\"D\", \"E\"].\r\nExpected number of iteration:\r\n|top-level iteration|\
        \ * |device iteration| * |value iteration|\r\n= 3 * 2 * 2 = 12."
      positions: ['255.35369723338', '601.2747609264446']
    7c717702-3a49-4a67-b1d0-c8471f149114:
      alignment: left
      content: "Hardcoded iteration values: [1, 2, 3]\r\nExpected results:\r\n- 3\
        \ results for the workflow, one per top-level iteration value\r\n- 9 results\
        \ for the service inside the workflow, one per couple\r\n(top-level iteration\
        \ value, workflow iteration value) = [1, 2, 3] X [A, B, C]"
      positions: [-193, 601]
    a58455e0-c6d5-4eb5-9d1d-7cf72ffe706e:
      alignment: left
      content: 3 expected results.
      positions: [-192, 218]
  last_modified: '2022-01-16 05:15:58.440770'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Workflow and Subworkflow Iteration
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Workflow and Subworkflow Iteration
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Workflow and Subworkflow Iteration]
      Test Iteration', '[Workflow and Subworkflow Iteration] Subworkflow Value Iteration',
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration', '[Workflow
      and Subworkflow Iteration] Subworkflow Device Iteration 2']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 8b33a170-7d3a-41d3-8f6a-065622e7e178
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-09 03:15:03.998374'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Workflow and Subworkflow Iteration] Test Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Iteration Mechanism: Workflow and Subworkflow Iteration': &id251 [-197, 268]
    'Regression Workflow J: Workflow and Subworkflow Iteration': [226, -76]
    'Regression Workflow: Workflow and Subworkflow Iteration': [-210, 233]
    Workflow and Subworkflow Iteration: *id251
  postprocessing: set_var("device_iteration", ["Atlanta", "SanFrancisco"], device=device.name)
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Test Iteration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result={\"top_level\": top_level_iteration}\r\nresults[\"result\"\
    ] = result\r\nresults[\"success\"] = True"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 6cf20c0b-36af-4ad8-8f3b-36cc118216d0
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: '[1, 2, 3]'
  iteration_variable_name: subworkflow_iteration
  labels: {}
  last_modified: '2021-10-09 03:25:57.123684'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Workflow and Subworkflow Iteration] Subworkflow Value Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Iteration Mechanism: Workflow and Subworkflow Iteration': &id252 [-182, 477]
    'Regression Workflow J: Workflow and Subworkflow Iteration': [218, 171]
    'Regression Workflow: Workflow and Subworkflow Iteration': [-182, 477]
    Workflow and Subworkflow Iteration: *id252
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Subworkflow Value Iteration
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Workflow and Subworkflow Iteration]
      Subworkflow Value Iteration] Test Iteration']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 4518d849-937a-4426-8da9-83c811a62188
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-02-26 07:05:54.058757'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Workflow and Subworkflow Iteration] Subworkflow Value Iteration] Test Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': &id253 [
      231, -87]
    '[Regression Workflow J: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id253
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Iteration': *id253
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id253
    '[Workflow and Subworkflow Iteration] Subworkflow Value Iteration': *id253
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Test Iteration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result={\"top_level\": top_level_iteration, \"subworkflow\": subworkflow_iteration}\r\
    \nresults[\"success\"] = True\r\nresults[\"result\"] = result\r\n"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Basics
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 4b635150-b9b5-4299-92ee-bdb5018234ae
  definition: is_alive
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    031755da-162e-475a-a798-29deb02cff55:
      alignment: left
      content: "Test \"Run on failure\" post-processing\r\nby setting success to False.\r\
        \nPostprocessing set the variables \"should be there\":\r\nthis variable should\
        \ be in the results.\r\n\r\nBesides, the results should contain:\r\n- func_result\
        \ set to EOS (Washington) / IOS (Chicago)\r\n- cls_result set to Washington\
        \ / Chicago"
      positions: [559, 16]
    15b463f1-e8ba-4d61-a84f-cf39d1434533:
      alignment: left
      content: "Preprocessing: set a per-device variable \"device OS\" in payload\
        \ with set_var\r\nPython snippet: retrieves the variable with get_var and\
        \ adds it to the results\r\nPostprocessing: set to \"Failure only\" but the\
        \ service is a success,\r\nso doesn't run.\r\nThe variable \"BUG\" shouldn't\
        \ be in the results.\r\nThis service is also adding a FUNCTION and a CLASS\
        \ in the payload with set_var :\r\n\r\ndef test():\r\n    return device.operating_system\r\
        \n\r\nclass Test():\r\n    device = device.name"
      positions: [-16, 269]
  last_modified: '2022-01-20 07:14:19.999019'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Preprocessing and Postprocessing Mechanisms
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Preprocessing and Postprocessing Mechanisms
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Preprocessing and Postprocessing
      Mechanisms] Preprocessing', '[Preprocessing and Postprocessing Mechanisms] Service
      preprocessing and postprocessing']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  superworkflow: Specific Superworkflow
  target_devices: [Washington, Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 9ed6e0ac-9bb7-4ca9-b3c0-760843389670
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-06-17 05:05:10.364625'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Preprocessing and Postprocessing Mechanisms] Preprocessing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Preprocessing and Postprocessing Mechanism: &id254 [-26, 123]
    Preprocessing and Postprocessing Mechanisms: *id254
    'Regression Workflow K: preprocessing and postprocessing': *id254
    'Regression Workflow: Preprocessing and Postprocessing': *id254
  postprocessing: "results[\"postprocessing\"] = f\"Value set with postprocessing\
    \ for {device.name}\"\r\n\r\ndef test():\r\n  \treturn device.operating_system\r\
    \n\r\nclass Test():\r\n  device = device.name\r\n\r\nset_var(\"func\", test, device=device.name)\r\
    \nset_var(\"cls\", Test, device=device.name)\r\n"
  postprocessing_mode: always
  preprocessing: set_var("test", device.operating_system, device=device.name)
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Preprocessing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = test"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 83c21c66-5a56-4589-a4d9-6d66dbd053c5
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-06-04 09:38:15.173377'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Preprocessing and Postprocessing Mechanisms] Service preprocessing and postprocessing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Preprocessing and Postprocessing Mechanism: &id255 [558, 152]
    Preprocessing and Postprocessing Mechanisms: *id255
    'Regression Workflow K: preprocessing and postprocessing': *id255
    'Regression Workflow: Preprocessing and Postprocessing': *id255
  postprocessing: "results[\"SHOULD BE THERE\"] = \"NO BUG\"\r\n\r\nresults[\"func_result\"\
    ] = func()\r\nresults[\"cls_result\"] = cls().device"
  postprocessing_mode: failure
  preprocessing: set_var("integer", 10)
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service preprocessing and postprocessing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "results[\"integer\"] = 10 + integer\r\nresults[\"success\"] = False"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 66191423-8279-4a6c-8d1a-15e38dbe635e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-24 07:01:45.366014'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Shared] Placeholder'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Basic Superworkflow: [187, 18]
    'Regression Workflow L: superworkflow': &id256 [511, -111]
    'Regression Workflow: Specific Superworkflow': *id256
    'Regression Workflow: Superworkflow': *id256
    'Regression Workflow: Superworkflow in SxS w WT with Run Once service': &id257 [
      408, 135]
    Specific Superworkflow: *id256
    Superworkflow in SxS w WT with Run Once service: *id257
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Placeholder
  send_notification: false
  send_notification_method: mail
  shared: true
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: swiss_army_knife_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Superworkflows
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 5171eb9c-8fd6-4007-bedf-be6372c8c5fd
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-16 05:16:18.788732'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Specific Superworkflow
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Specific Superworkflow
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Placeholder', '[Shared] REST
      API: call *is_alive* endpoint', '[Specific Superworkflow] REST API: call to
      placeholder property', '[Specific Superworkflow] Post Placeholder Processing']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [SanJose, SanDiego]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: b0734a4a-b378-49e8-a070-b5caa8b9ad88
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    72a98179-fe57-4bca-ac49-2d7f4912954f:
      alignment: left
      content: "This service uses the password admin in the \"Jump on Connect\" section\
        \ :\r\nthis password must be set to \"admin\" after database reload."
      positions: [467, -1]
  last_modified: '2022-07-21 12:13:43.982325'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Unix Command & Chell, Ping Service,
      Jump on Connect mechanism] Unix command: ps -ef | grep test', '[(R) Unix Command
      & Chell, Ping Service, Jump on Connect mechanism] Unix shell: ping eNMS server
      from remote server', '[(R) Unix Command & Chell, Ping Service, Jump on Connect
      mechanism] Ping Washington', '[(R) Unix Command & Chell, Ping Service, Jump
      on Connect mechanism] Validation: jump on server 2 from Washington', '[(R) Unix
      Command & Chell, Ping Service, Jump on Connect mechanism] Ping Custom IP']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  command: ps -ef
  completion_time: 1
  content_match: python\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 6be1d210-137f-43cb-b4e1-547dcd651ba4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-26 13:24:11.303147'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Unix Command & Chell, Ping Service, Jump on Connect mechanism] Unix
    command: ps -ef | grep test'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism: [-142, -11]
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id258 [
      -177, -94]
    'Regression Workflow M: Unix command & shell, ping, jump server': [-148, -126]
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id258
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id258
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Unix command: ps -ef | grep test'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, LosAngeles]
  target_pools: []
  time_between_retries: 10
  type: unix_command_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: false
  close_connection: false
  completion_time: 1
  config_mode: false
  connection_name: default
  content_match: 5 received
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 0313cb6c-9439-4735-817f-54a8be49fbc0
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: linux
  enable_mode: true
  expect_string: root.*#
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-26 05:39:44.995695'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Unix Command & Chell, Ping Service, Jump on Connect mechanism] Unix
    shell: ping eNMS server from remote server'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism: [-156, 196]
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id259 [
      -113, 220]
    'Regression Workflow M: Unix command & shell, ping, jump server': [-76, 172]
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id259
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id259
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Unix shell: ping eNMS server from remote server'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "#!/bin/bash\r\nping_result=`ping -c 5 192.168.56.102`  # Needs privileged\
    \ mode\r\nreturn_code=$?\r\nif [ $return_code -ne 0 ]; then\r\n    exit $return_code\
    \  # Indicating Failure\r\nelse\r\n    echo -e \"$ping_result\"\r\n    exit 0\r\
    \nfi\r\n"
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Server 2]
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: unix_shell_script_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  count: 5
  creator: admin
  credential_type: any
  default_uuid: 2caab1c2-7ef6-4977-ba4a-4cb6eef438ec
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  ip_address: ''
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-27 13:40:16.952410'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Unix Command & Chell, Ping Service, Jump on Connect mechanism] Ping
    Washington'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  packet_size: 56
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  ports: '22'
  positions:
    (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism: [126, -10]
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id260 [
      200, -71]
    'Regression Workflow M: Unix command & shell, ping, jump server': [182, -134]
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id260
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id260
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  protocol: ICMP
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Ping Washington
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 2
  ttl: 60
  type: ping_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: dcd9de16-7b3f-4db4-adba-110e1ccca736
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-16 05:09:23.121184'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Topology Import Services
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Topology Import Services
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Topology Import Services] OpenNMS
      Import']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: c6a21c03-9a1a-4471-b86e-8e70a71f96c6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  import_type: opennms
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-27 15:00:28.449935'
  librenms_address: http://librenms.example.com
  librenms_token: ''
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Topology Import Services] OpenNMS Import'
  negative_logic: false
  netbox_address: http://0.0.0.0:8000
  netbox_token: ''
  notification_header: ''
  number_of_retries: 0
  opennms_address: https://demo.opennms.org/opennms/rest
  opennms_devices: ''
  opennms_login: demo
  opennms_password: ''
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow N: Topology Import (netbox, librenms, opennms)': &id261 [
      113, -104]
    'Regression Workflow: Topology Import (netbox, librenms, opennms)': *id261
    Topology Import Service (netbox, librenms, opennms): &id262 [221, -123]
    Topology Import Services: *id262
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: OpenNMS Import
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: topology_import_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: ps -ef
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: python\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 1c56e96a-8795-418c-8046-55092e008676
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: 'admin.*:'
  expect_prompt: .*$
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh 192.168.56.103
  jump_on_connect: true
  jump_password: ''
  jump_username: ''
  last_modified: '2020-03-28 05:52:51.717182'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Unix Command & Chell, Ping Service, Jump on Connect mechanism] Validation:
    jump on server 2 from Washington'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism: [428, 74]
    'Regression Workflow M: Unix command & shell, ping, - jump on connect - mechanism': &id263 [
      358, 190]
    'Regression Workflow M: Unix command & shell, ping, jump server': [338, 138]
    'Regression Workflow: Unix Command & Chell, Ping Service, Jump on Connect mechanism': *id263
    Unix Command & Chell, Ping Service, Jump on Connect mechanism: *id263
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: 'Validation: jump on server 2 from Washington'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: admin
  default_uuid: 6cdc65cd-3731-45de-a9ec-a7cbbd7e4546
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-05-28 10:36:29.931698'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Specific Superworkflow] REST API: call to placeholder property'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  payload:
    a: b
    c: ['1', '2', '3']
  pools: [Everything]
  positions:
    'Regression Workflow L: superworkflow': &id264 [227, 151]
    'Regression Workflow: Specific Superworkflow': *id264
    'Regression Workflow: Superworkflow': *id264
    Specific Superworkflow: *id264
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/{{ placeholder.definition }}
  run_method: per_device
  scoped_name: 'REST API: call to placeholder property'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Columbus]
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show version
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: b553111e-c447-4b33-8456-c6d7feb735d3
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-08-07 08:46:58.575856'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: Open File Descriptors Leak (public)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Open File Descriptors Leak (public)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Chicago, Boston, Baltimore, Cleveland, Columbus, Cincinnati, Cambridge]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  add_header: true
  admin_only: false
  close_connection: false
  commands:
  - {prefix: '', value: show run}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  completion_time: 1
  config_mode: false
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 88af9ac4-7eb7-451e-869f-bf60eac5c9b1
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2022-05-13 09:42:17.151597'
  local_path: network_data
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Configuration Properties Backup Services] Get Configuration with Netmiko'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Configuration Properties Backup Services: [-550, 45]
    (R) Operational Data Backup Service: [-550, 45]
    Operational Data Backup (admin): [-452, 74]
    'Regression Workflow 9: Operational Data Backup': &id265 [-455, 15]
    'Regression Workflow 9: Operational Data Backup (admin)': *id265
    'Regression Workflow: Operational Data Backup (admin)': *id265
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  property: configuration
  replacements:
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Configuration with Netmiko
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_backup_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  actions: [add_commit, pull, push]
  admin_only: false
  commit_message: Automatic commit (configurations)
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 51245a79-e075-4747-8026-0d33c1eb826e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-20 04:43:07.649203'
  local_repository: network_data
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Configuration Properties Backup Services] Push Configurations to Git'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Configuration Properties Backup Services: [271, 209]
    (R) Operational Data Backup Service: [271, 209]
    Operational Data Backup (admin): [216, 210]
    'Regression Workflow 9: Operational Data Backup': &id266 [148, 191]
    'Regression Workflow 9: Operational Data Backup (admin)': *id266
    'Regression Workflow: Operational Data Backup (admin)': *id266
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  relative_path: true
  remote_repository: ''
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Push Configurations to Git
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow: Operational Data Backup (admin)': true}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: git_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: fcf543d6-b2a3-408d-aa81-24d43a76f281
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-06-24 03:55:19.605566'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Specific Superworkflow] Post Placeholder Processing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow L: superworkflow': &id267 [606, 47]
    'Regression Workflow: Specific Superworkflow': *id267
    'Regression Workflow: Superworkflow': *id267
    Specific Superworkflow: *id267
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Post Placeholder Processing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_result(placeholder.name)[\"summary\"]"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 02230219-84b5-4cbc-bc11-9e2e94f9f0a2
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-16 05:07:46.622434'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Scrapli Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Scrapli Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Scrapli Service] Check running
      configuration', '[(R) Scrapli Service] Configure VRF TEST-VRF', '[(R) Scrapli
      Service] Check that TEST-VRF is configured', '[(R) Scrapli Service] Decommission
      VRF TEST-VRF']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  commands: "show run\r\nshow vrf"
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 5b0610f8-cb7c-410d-8d08-74902f20e3a4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2020-07-15 02:01:30.590001'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli Service] Check running configuration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli Service: &id268 [-33, -167]
    'Regression Workflow O: Scrapli': *id268
    'Regression Workflow: Scrapli': *id268
    Scrapli Service: *id268
  postprocessing: results["success"] = "TEST-VRF" not in results["result"]
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Check running configuration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  commands: vrf instance TEST-VRF
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 672fad45-36b2-450c-a051-7d73b80b88ad
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: true
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2020-07-19 03:57:12.933011'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli Service] Configure VRF TEST-VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli Service: &id269 [402, -161]
    'Regression Workflow O: Scrapli': *id269
    'Regression Workflow: Scrapli': *id269
    Scrapli Service: *id269
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Configure VRF TEST-VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  commands: "show run\r\nshow vrf"
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 82ba4852-de33-4c58-91fb-0e317c9692f8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2020-07-15 02:50:17.263309'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli Service] Check that TEST-VRF is configured'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli Service: &id270 [6, 112]
    'Regression Workflow O: Scrapli': *id270
    'Regression Workflow: Scrapli': *id270
    Scrapli Service: *id270
  postprocessing: results["success"] = "TEST-VRF" in results["result"]
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Check that TEST-VRF is configured
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  commands: no vrf instance TEST-VRF
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 2f9aab65-86db-44cd-972d-1d6cfe0348d4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: true
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2020-07-19 03:57:21.922089'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli Service] Decommission VRF TEST-VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli Service: &id271 [373, 107]
    'Regression Workflow O: Scrapli': *id271
    'Regression Workflow: Scrapli': *id271
    Scrapli Service: *id271
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Decommission VRF TEST-VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: b5f15ce6-c698-4bfc-86a3-3bba5cfa5b2c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    3a9a1a53-0a95-44f3-89a6-63431f9ece91:
      alignment: left
      content: "This workflow should be run on both Washington and Austin,\r\nas Austin\
        \ will use the SSH key authentication. Key-based auth must be\r\ntested for\
        \ the generic file transfer as it does not use the netmiko\r\nauthentication\
        \ mechanism."
      positions: [38, -174]
  last_modified: '2022-01-16 05:09:58.076503'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Generic File Transfer Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Generic File Transfer Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Generic File Transfer Service]
      Check that test file does not exist', '[(R) Generic File Transfer Service] Transfer
      a.bin', '[(R) Generic File Transfer Service] Check that test file does exist',
    '[(R) Generic File Transfer Service] Transfer bc.bin and bd.bin with glob option',
    '[(R) Generic File Transfer Service] Delete all transferred files', '[(R) Generic
      File Transfer Service] Transfer non-existing file']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 1859c746-68ae-48bb-b1d2-61af82ba883d
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-24 04:12:46.366228'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Generic File Transfer Service] Check that test file does not exist'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Generic File Transfer Service: &id272 [-243, -73]
    Generic File Transfer: *id272
    'Regression Workflow Q: File transfer': &id273 [-171, -148]
    'Regression Workflow: File Transfer Mechanism': *id273
    'Regression Workflow: Generic File Transfer': *id272
  postprocessing: results["success"] = "a.bin" not in results["result"]
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Check that test file does not exist
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 3841b151-6fd6-449e-84fa-07fe43e13ff1
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_file: enms_files/a.bin
  device_query: ''
  device_query_property: name
  dict_match: {}
  direction: put
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-24 04:08:50.675082'
  load_known_host_keys: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  max_transfer_size: 1073741824
  maximum_runs: 1
  missing_host_key_policy: true
  multiprocessing: false
  name: '[(R) Generic File Transfer Service] Transfer a.bin'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Generic File Transfer Service: &id274 [-120, 143]
    Generic File Transfer: *id274
    'Regression Workflow Q: File transfer': &id275 [-21, 255]
    'Regression Workflow: File Transfer Mechanism': *id275
    'Regression Workflow: Generic File Transfer': *id274
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  protocol: scp
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Transfer a.bin
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_file: /media/sf_shared/eNMS/tests/file_transfer/a.bin
  source_file_includes_globbing: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: generic_file_transfer_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  window_size: 1073741824
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 6bd66b7f-a015-40d4-b49e-8234abee21dd
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-24 04:13:28.626790'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Generic File Transfer Service] Check that test file does exist'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Generic File Transfer Service: &id276 [209, 155]
    Generic File Transfer: *id276
    'Regression Workflow Q: File transfer': &id277 [362, 239]
    'Regression Workflow: File Transfer Mechanism': *id277
    'Regression Workflow: Generic File Transfer': *id276
  postprocessing: "simple_file = \"a.bin\" in results[\"result\"]\r\nglob_files =\
    \ \"bc.bin\" in results[\"result\"] and \"bd.bin\" in results[\"result\"]\r\n\
    results[\"success\"] = simple_file and glob_files"
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Check that test file does exist
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 4798a35a-3639-401c-ba70-a0eefffd9924
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_file: enms_files
  device_query: ''
  device_query_property: name
  dict_match: {}
  direction: put
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-24 04:12:14.915986'
  load_known_host_keys: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  max_transfer_size: 1073741824
  maximum_runs: 1
  missing_host_key_policy: true
  multiprocessing: false
  name: '[(R) Generic File Transfer Service] Transfer bc.bin and bd.bin with glob
    option'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Generic File Transfer Service: &id278 [126, -84]
    Generic File Transfer: *id278
    'Regression Workflow Q: File transfer': &id279 [187, -140]
    'Regression Workflow: File Transfer Mechanism': *id279
    'Regression Workflow: Generic File Transfer': *id278
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  protocol: scp
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Transfer bc.bin and bd.bin with glob option
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_file: /media/sf_shared/eNMS/tests/file_transfer/?[c|d].bi*
  source_file_includes_globbing: true
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: generic_file_transfer_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  window_size: 1073741824
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: delete flash:/enms_files/*.bin
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: f801cf7b-ecd9-47af-a65b-d9d42222ab88
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-07-24 04:18:11.791054'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Generic File Transfer Service] Delete all transferred files'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Generic File Transfer Service: &id280 [460, -83]
    Generic File Transfer: *id280
    'Regression Workflow Q: File transfer': &id281 [517, -138]
    'Regression Workflow: File Transfer Mechanism': *id281
    'Regression Workflow: Generic File Transfer': *id280
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Delete all transferred files
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: No such file or directory
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 116a4c63-30e2-4a54-9485-92f3c9d9c57a
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_file: enms_files
  device_query: ''
  device_query_property: name
  dict_match: {}
  direction: put
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-24 10:13:57.495865'
  load_known_host_keys: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  max_transfer_size: 1073741824
  maximum_runs: 1
  missing_host_key_policy: true
  multiprocessing: false
  name: '[(R) Generic File Transfer Service] Transfer non-existing file'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Generic File Transfer Service: &id282 [-385, 147]
    Generic File Transfer: *id282
    'Regression Workflow Q: File transfer': &id283 [-332, 180]
    'Regression Workflow: File Transfer Mechanism': *id283
    'Regression Workflow: Generic File Transfer': *id282
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  protocol: scp
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Transfer non-existing file
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_file: /media/test.bin
  source_file_includes_globbing: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: generic_file_transfer_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: failure
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  window_size: 1073741824
- access_groups: ''
  admin_only: false
  category: Skip Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: b98c828e-273c-4b1a-ad0f-e135d0796b21
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    047e351c-3263-4df8-b3b3-cbf7273d0a2e:
      alignment: left
      content: "This workflow tests the skip mechanism in SxS with WF targets mode.\r\
        \nIt runs on three devices: Austin, PaloAlto, Washington. Washington will\r\
        \nfail at the first service and stop.\r\nThe second service aims at making\
        \ sure that a service that is skipped globally\r\nshould not prevent devices\
        \ from moving forward throughout the workflow.\r\nSimilarly, a per-device\
        \ skipped service should also enable the skipped\r\ndevices to move forward:\
        \ the third service will skip PaloAlto with the skip\r\nquery, set to a skip\
        \ value of False. PaloAlto should go to the end via the\r\nfailure edge, and\
        \ Austin via the success edge."
      positions: [-166, 2]
    9da73478-f2b2-4d97-ba73-5d43d3e3abcd:
      alignment: left
      content: "In this service, postprocessing is set to\r\nresults[\"success\"]\
        \ = device.name != \"Washington\".\r\nWashington should fail, others should\
        \ pass."
      positions: [-579, 220]
  last_modified: '2022-01-20 06:28:21.964618'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Skip in SxS with WF targets mode
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Skip in SxS with WF targets mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip in SxS with WF targets mode]
      Partial failure (Washington)', '[Skip in SxS with WF targets mode] Query Skipped
      Service', '[Skip in SxS with WF targets mode] Globally Skipped Service']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 086ada64-4528-43b2-9737-4a8ab97dcb27
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-09-21 06:38:02.831326'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip in SxS with WF targets mode] Partial failure (Washington)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow R: Skip Services in SxS mode': &id284 [-124, -154]
    'Regression Workflow R: skip services in service by service mode': *id284
    'Regression Workflow: Skip Services in SxS mode': *id284
    'Skip Mechanism: Skip in SxS mode': [-392, 138]
    'Skip Mechanism: Skip in SxS with WF targets mode': &id285 [-595, 141]
    Skip Services in SxS mode: [-249, 110]
    Skip in SxS with WF targets mode: *id285
    'Workflow Regression R: skip services in service by service mode': *id284
  postprocessing: results["success"] = device.name != "Washington"
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Partial failure (Washington)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 1ed2ad4f-772e-40b6-ac4a-f1b5fed5718e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-09-21 06:38:39.317238'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip in SxS with WF targets mode] Query Skipped Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow R: Skip Services in SxS mode': &id286 [304, -102]
    'Regression Workflow R: skip services in service by service mode': *id286
    'Regression Workflow: Skip Services in SxS mode': *id286
    'Skip Mechanism: Skip in SxS mode': [298, 193]
    'Skip Mechanism: Skip in SxS with WF targets mode': &id287 [93, 160]
    Skip Services in SxS mode: [338, 103]
    Skip in SxS with WF targets mode: *id287
    'Workflow Regression R: skip services in service by service mode': *id286
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Query Skipped Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name == "PaloAlto"
  skip_value: failure
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: e18eed89-d195-4147-8d3a-89a6fa944ee2
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-09-21 06:38:17.891973'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip in SxS with WF targets mode] Globally Skipped Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow R: Skip Services in SxS mode': &id288 [12, 179]
    'Regression Workflow R: skip services in service by service mode': *id288
    'Regression Workflow: Skip Services in SxS mode': *id288
    'Skip Mechanism: Skip in SxS mode': [-49, 185]
    'Skip Mechanism: Skip in SxS with WF targets mode': &id289 [-226, 165]
    Skip Services in SxS mode: [31, -26]
    Skip in SxS with WF targets mode: *id289
    'Workflow Regression R: skip services in service by service mode': *id288
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Globally Skipped Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow R: skip services in service by service mode': true,
    'Skip Mechanism: Skip in SxS mode': true, 'Skip Mechanism: Skip in SxS with WF targets mode': true}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Skip Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: a35063d0-a397-40dd-812e-329aba3dab79
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    055563ce-090a-4d88-b80c-c208f2befa69:
      alignment: left
      content: "This workflow runs on 6 devices including Washington.\r\nThe first\
        \ service will DISCARD 3 devices: router5-7.\r\nThe second service will skip\
        \ Washington in failed skip mode.\r\nWashington must follow the failure edges\
        \ while the other\r\ntwo devices follow the success edge.\r\nIn post-success\
        \ service, PaloAlto should be skip in failure mode,\r\nbut with no failure\
        \ edge it is equivalent to discard.\r\nIn the end, 2 devices should all run\
        \ the last service:\r\nAustin and Washington."
      positions: [-6, 145]
    065de869-c69f-4489-8c9a-8dbb520d1031:
      alignment: left
      content: "Must be tested both in:\r\n- device by device mode\r\n- service by\
        \ service with workflow targets mode"
      positions: [-65, 267]
    296bb5de-e6fa-42a1-a3de-f6ba257ee28b:
      alignment: left
      content: "The skip query is set to\r\n\"device.name.startswith(\"router\")\"\
        \r\nShould match router5, router6 and router7.\r\nSkip value is set to \"\
        Discard\"."
      positions: [-314, 453]
    9458426f-623e-46be-85e9-6b673e3e9575:
      alignment: left
      content: "In this service, the skip query is set to 'device.name == \"PaloAlto\"\
        ',\r\nand the skip value is set to \"Failure\". However, unlike the last service,\r\
        \nthere is no failure edge exiting the service, so PaloAlto should be\r\n\
        discarded here."
      positions: [480, 95]
    e74316f1-b154-4c62-af4e-e3ce8ebe1ee4:
      alignment: left
      content: "Skip query set to 'device.name == \"Washington\"'\r\nSkip value set\
        \ to \"Failure\". Washington should fail."
      positions: [55, 451]
  last_modified: '2022-01-20 06:28:03.483260'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Conditional Skip Query in Failed and Discard Modes
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Conditional Skip Query in Failed and Discard Modes
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Conditional Skip Query in Failed
      and Discard Modes] Skip Washington with Skip value == False', '[Conditional
      Skip Query in Failed and Discard Modes] Post-success service', '[Conditional
      Skip Query in Failed and Discard Modes] Post-failure service', '[Conditional
      Skip Query in Failed and Discard Modes] Final service', '[Conditional Skip Query
      in Failed and Discard Modes] Skip router5-7 in discard mode']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington, router5, router6, router7]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: b874a3ce-0ffb-43ef-b634-a3f2658909e2
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-08-03 12:01:17.859136'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Conditional Skip Query in Failed and Discard Modes] Skip Washington with
    Skip value == False'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id291 [38, 378]
    'Regression Workflow S: conditional skip query in failed and discard mode': &id290 [
      -242, 237]
    'Regression Workflow S: conditional skip query with skip value set to False': *id290
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id290
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': *id291
    'Workflow Regression S: conditional skip query with skip value set to False': [
      -149, -30]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Skip Washington with Skip value == False
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name == "Washington"
  skip_value: failure
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 1af4657d-0bc2-4444-b3e1-bb61e2468f39
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-18 00:13:35.279991'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Conditional Skip Query in Failed and Discard Modes] Post-success service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id293 [450, 173]
    'Regression Workflow S: conditional skip query in failed and discard mode': &id292 [
      412, 108]
    'Regression Workflow S: conditional skip query with skip value set to False': *id292
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id292
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': *id293
    'Workflow Regression S: conditional skip query with skip value set to False': [
      264, -16]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Post-success service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name == "PaloAlto"
  skip_value: failure
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 19354dd6-ab18-4c6f-b643-7b1a1bdea04f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-24 04:46:08.378087'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Conditional Skip Query in Failed and Discard Modes] Post-failure service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id295 [519, 439]
    'Regression Workflow S: conditional skip query in failed and discard mode': &id294 [
      605, 248]
    'Regression Workflow S: conditional skip query with skip value set to False': *id294
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id294
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': *id295
    'Workflow Regression S: conditional skip query with skip value set to False': [
      208, 194]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Post-failure service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 33466e13-1012-4fbb-b64f-31dcb84d2fea
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-08-03 12:00:41.901802'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Conditional Skip Query in Failed and Discard Modes] Final service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id297 [324, 323]
    'Regression Workflow S: conditional skip query in failed and discard mode': &id296 [
      660, 13]
    'Regression Workflow S: conditional skip query with skip value set to False': *id296
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id296
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': *id297
    'Workflow Regression S: conditional skip query with skip value set to False': [
      636, 63]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Final service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Global Variables
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: f0289347-42fd-40b0-81e5-07ac8a92b2e6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    12c1aa1a-19a6-41cc-a1b3-04c2e0abe15c:
      alignment: left
      content: "Tests get_neighbors on the main device Dallas\r\nwith many different\
        \ parameters.\r\nIf any of these tests fails, the whole service should fail."
      positions: [-262, 143]
    93568f7d-0cd8-4062-92e7-7bfb346ea1d2:
      alignment: left
      content: "Using get_neighbors as the iteration query.\r\nThe service should\
        \ use the four neighbors of Dallas as iteration targets.\r\nIt uses \"device.name\"\
        \ to query device info via the REST API.\r\nCredentials must be updated each\
        \ time."
      positions: [461, 143]
    a0ccdcaf-94b9-43f3-873c-db101440e363:
      alignment: left
      content: "This workflow is designed to test the get_neighbors function.\r\n\
        get_neighbors takes:\r\n- one mandatory parameter object type: \"link\" or\
        \ \"device\" to retrieve\r\neither the neighboring links of a device, or the\
        \ neighboring devices\r\n(connected to the original device via a link)\r\n\
        - an optional parameter direction (\"both\" / \"source\" / \"destination\"\
        ,\r\ndefault to \"both\").\r\n- any link parameters used to filter the links\
        \ that are to be considered"
      positions: [36, -131]
    a672b458-970b-42c5-958e-2c9de635e83d:
      alignment: left
      content: "The workflow is also testing the RBAC default access mechanism.\r\n\
        Default access is set to public, meaning that anyone can access it\r\nregardless\
        \ of how RBAC is configured.\r\nWhen logging in with \"ny\" user, it should\
        \ be visible in the workflow\r\nbuilder."
      positions: [28, -27]
  last_modified: '2022-01-16 05:37:09.880045'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Link Neighbors Mechanism (device.get_neighbors function)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Link Neighbors Mechanism (device.get_neighbors function)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Link Neighbors Mechanism (device.get_neighbors
      function)] Test get_neighbors function', '[Link Neighbors Mechanism (device.get_neighbors
      function)] Iterate over neighbors of workflow device']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Dallas]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: a2ab6333-039c-4474-820d-a63f5c53f088
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-01 07:22:37.645802'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Link Neighbors Mechanism (device.get_neighbors function)] Test get_neighbors
    function'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Link Neighbors Mechanism: &id298 [-291, 68]
    Link Neighbors Mechanism (device.get_neighbors function): *id298
    Link Neighbors Mechanism (public): [-291, 68]
    'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)': *id298
    'Regression Workflow 1: link neighbors mechanism': &id299 [-20, 30]
    'Regression Workflow 4: Link Neighbors Mechanism (public)': *id299
    'Regression Workflow 4: link neighbors mechanism': *id299
    'Regression Workflow 4: link neighbors mechanism (public)': *id299
    'Regression Workflow T: link neighbors mechanism': *id299
    'Regression Workflow: Link Neighbors Mechanism (public)': *id299
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Test get_neighbors function
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "def names(instances):\r\n  return {instance.name for instance in instances}\r\
    \n\r\nresult = {}\r\n# neighbors in both direction\r\nresults[\"result\"] = {\r\
    \n  \t\"direction=both, device\": names(device.get_neighbors(\"device\")),\r\n\
    \t\"direction=both, link\": names(device.get_neighbors(\"link\")),\r\n\t\"direction=source,\
    \ device\": names(device.get_neighbors(\"device\", direction=\"source\")),\r\n\
    \t\"direction=source, link\": names(device.get_neighbors(\"link\", direction=\"\
    source\")),\r\n\t\"direction=destination, device\": names(device.get_neighbors(\"\
    device\", direction=\"destination\")),\r\n  \t\"direction=destination, link\"\
    : names(device.get_neighbors(\"link\", direction=\"destination\")),\r\n\t\"direction=both,\
    \ device, 10G\": names(device.get_neighbors(\"device\", model=\"10G\")),\r\n \
    \ \t\"direction=both, link, 400G\": names(device.get_neighbors(\"link\", model=\"\
    400G\")),\r\n  \t\"direction=source, device, 40G\": names(device.get_neighbors(\"\
    device\", direction=\"source\", model=\"40G\")),\r\n  \t\"direction=destination,\
    \ link, 10G\": names(device.get_neighbors(\"link\", direction=\"destination\"\
    , model=\"10G\")),\r\n}\r\nresults[\"expected_result\"] = {\r\n   \t\"direction=both,\
    \ device\": {\"Austin\", \"Atlanta\", \"Houston\", \"LosAngeles\"},\r\n\t\"direction=both,\
    \ link\": {\"link13\", \"link25\", \"link0\", \"link24\"},\r\n\t\"direction=source,\
    \ device\": {\"Atlanta\", \"LosAngeles\"},\r\n\t\"direction=source, link\": {\"\
    link25\", \"link24\"},\r\n\t\"direction=destination, device\": {\"Austin\", \"\
    Houston\"},\r\n  \t\"direction=destination, link\": {\"link13\", \"link0\"},\r\
    \n\t\"direction=both, device, 10G\": {\"Houston\"},\r\n  \t\"direction=both, link,\
    \ 400G\": {\"link25\", \"link24\"},\r\n  \t\"direction=source, device, 40G\":\
    \ set(),\r\n  \t\"direction=destination, link, 10G\": {\"link0\"},\r\n}\r\n\r\n\
    results[\"success\"] = True\r\nfor test, result in results[\"result\"].items():\r\
    \n    if result != results[\"expected_result\"][test]:\r\n        results[\"success\"\
    ] = False\r\n"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: admin
  default_uuid: a2459a9d-c2ec-4541-9112-5f162faeecc2
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: device.get_neighbors("device")
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-01 07:28:53.069205'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Link Neighbors Mechanism (device.get_neighbors function)] Iterate over neighbors
    of workflow device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    Link Neighbors Mechanism: &id300 [466, 49]
    Link Neighbors Mechanism (device.get_neighbors function): *id300
    Link Neighbors Mechanism (public): [466, 49]
    'Miscellaneous: Link Neighbors Mechanism and RBAC default access (public)': *id300
    'Regression Workflow 1: link neighbors mechanism': &id301 [401, -181]
    'Regression Workflow 4: Link Neighbors Mechanism (public)': *id301
    'Regression Workflow 4: link neighbors mechanism': *id301
    'Regression Workflow 4: link neighbors mechanism (public)': *id301
    'Regression Workflow T: link neighbors mechanism': *id301
    'Regression Workflow: Link Neighbors Mechanism (public)': *id301
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/instance/device/{{device.name}}
  run_method: per_device
  scoped_name: Iterate over neighbors of workflow device
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: NOVRF
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 9e1c4ee2-6f0d-4450-80b8-3843e484bf6d
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-10-21 21:59:43.430409'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Prompts Service] Check VRF (NOVRF) exists'
  negative_logic: false
  notification_header: ''
  number_of_retries: 2
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Prompts Service: &id302 [-291, -104]
    Netmiko Prompts: *id302
    'Regression Workflow 1: Netmiko with validation and retries': [-142, -137]
    'Regression Workflow D: Prompts': *id302
    'Regression Workflow: Netmiko Prompts': *id302
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Check VRF (NOVRF) exists
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 2
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Global Variables
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: f1026f36-9d14-44b6-acb0-b84eead698b8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    276a5b4a-720e-457a-8d66-6c49d03c937d:
      alignment: left
      content: "Delete the device \"---\" that was\r\ncreated by the factory function."
      positions: [165, 199]
    50a94bb5-ad54-4164-92a3-b4022d43de4d:
      alignment: left
      content: "Test fetch and fetch_all.\r\nChange name of device \"New-{device.id}\"\
        \ to \"No-{device.id}\".\r\nService is configured to update pools after running:\r\
        \nThe device should be removed from the pool San Francisco."
      positions: ['-12.02587890625', '-58']
    bc5601cb-db25-4614-b82b-15122f71739b:
      alignment: left
      content: "We use get_result to fetch custom credentials\r\nfrom previous service\
        \ via variable substitution:\r\n* {{ get_result(\"Credentials encryption\"\
        , device=device.name)[\"username\"] }}\r\n* {{ get_result(\"Credentials encryption\"\
        , device=device.name)[\"password\"] }}"
      positions: [472, 301]
    d7ebfa57-b26d-4401-80c5-40f8be6c8519:
      alignment: left
      content: "Create a new device \"New-{device.id}\" for each device.\r\nThis device\
        \ should be put in San Francisco pool (contains letter \"e\")."
      positions: ['-131.02587890625', '275']
    e5b50708-629d-41ac-a83b-275946c7d45a:
      alignment: left
      content: "We encrypt credentials with the \"encrypt\" function.\r\nTo be decrypted\
        \ in the next service via\r\ncustom credentials variable substitution."
      positions: [576, -71]
  last_modified: '2022-01-16 05:35:07.247712'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Functions: factory, fetch, fetch_all, encrypt and get_result'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: 'Functions: factory, fetch, fetch_all, encrypt and get_result'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Functions: factory, fetch, fetch_all,
      encrypt and get_result] Functions fetch and fetch_all', '[Functions: factory,
      fetch, fetch_all, encrypt and get_result] Credentials encryption', '[Functions:
      factory, fetch, fetch_all, encrypt and get_result] Show vrf with custom encrypted
      credentials', '[Functions: factory, fetch, fetch_all, encrypt and get_result]
      Factory function: Create new device', '[Functions: factory, fetch, fetch_all,
      encrypt and get_result] Delete function: delete new device']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: fb598472-46a5-4e1f-a6de-a38d7745467c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-24 15:05:09.390396'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: factory, fetch, fetch_all, encrypt and get_result] Functions
    fetch and fetch_all'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: factory, fetch, fetch_all, encrypt and get_result': &id303 [28, 6]
    Global Variables and post-run Pool Update Mechanism: *id303
    'Regression Workflow T: global variables': [-180, 198]
    'Regression Workflow T: global variables and post-run pool update': [-153, 159]
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': *id303
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Functions fetch and fetch_all
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nsuccess = True\r\nresults[\"result\"] = result\r\n\r\
    \ntry:\r\n    fetch(\"user\", name=\"admin\")\r\n    success = False\r\nexcept:\r\
    \n    pass\r\n\r\ntry:\r\n    fetch(\"access\", name=\"Full Access to Everything\"\
    )\r\n    success = False\r\nexcept:\r\n    pass\r\n\r\ntry:\r\n    fetch(\"task\"\
    , name=\"Full Access to Everything\")\r\n    success = False\r\nexcept:\r\n  \
    \  pass\r\n\r\nnew_device = fetch(\"device\", name=f\"New-{device.id}\")\r\n\r\
    \nresults[\"operations\"] = {\r\n    \"device\": new_device.name,\r\n    \"pool\"\
    : fetch(\"pool\", name=\"All devices, links, services and users\").name,\r\n \
    \   \"services\": [service.name for service in fetch_all(\"service\")]\r\n}\r\n\
    \r\nnew_device.name = f\"No-{device.id}\"\r\n\r\nresults[\"success\"] = success"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: true
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 58ad8ed6-c274-4f61-ad52-b5c41b219409
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-24 04:20:21.737519'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: factory, fetch, fetch_all, encrypt and get_result] Credentials
    encryption'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: factory, fetch, fetch_all, encrypt and get_result': &id304 [568, 6]
    Global Variables and post-run Pool Update Mechanism: *id304
    'Regression Workflow T: global variables': [42, -43]
    'Regression Workflow T: global variables and post-run pool update': [42, -43]
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': *id304
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Credentials encryption
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"username\"\
    ] = \"admin\"\r\nresults[\"password\"] = encrypt(\"admin\")\r\nresults[\"result\"\
    ] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: '{{ get_result("Credentials encryption", device=device.name)["username"]
    }}'
  default_uuid: 76a56fbc-64f8-4ad7-a51b-8883e32dcd14
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-09-24 04:24:35.178486'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: factory, fetch, fetch_all, encrypt and get_result] Show vrf with
    custom encrypted credentials'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: factory, fetch, fetch_all, encrypt and get_result': &id305 [514, 220]
    Global Variables and post-run Pool Update Mechanism: *id305
    'Regression Workflow T: global variables': [487, 104]
    'Regression Workflow T: global variables and post-run pool update': [487, 104]
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': *id305
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show vrf with custom encrypted credentials
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: a2d73459-dd25-452a-86f3-5e4e171e579e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-18 00:06:35.440142'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Conditional Skip Query in Failed and Discard Modes] Skip router5-7 in discard
    mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Conditional Skip Query in Failed and Discard Modes: &id307 [-335, 369]
    'Regression Workflow S: conditional skip query in failed and discard mode': &id306 [
      -215, 70]
    'Regression Workflow S: conditional skip query with skip value set to False': *id306
    'Regression Workflow: Conditional Skip Query in Failed and Discard Modes': *id306
    'Skip Mechanism: Conditional Skip Query in Failed and Discard Modes': *id307
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Skip router5-7 in discard mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name.startswith("router")
  skip_value: discard
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Skip Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 3ed02118-236d-4237-af85-b082d25dedad
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    263966e8-80d5-4cf2-a63f-5ca7fd56c6ec:
      alignment: left
      content: "Discards all devices whose\r\nmodel is not Juniper."
      positions: [-425, 385]
    7ac4a816-41e6-4737-aa39-4df30198b799:
      alignment: left
      content: "This service is configured to discard all devices,\r\nto test that\
        \ it works when all devices are discarded."
      positions: [13, 407]
    e463d7db-3148-4df3-acf9-62e42f52b73e:
      alignment: left
      content: "Discards all devices whose\r\nmodel is not Arista."
      positions: [335, 22]
    f8de3ca5-718c-4d76-860e-ddceeb7e3f83:
      alignment: left
      content: "This workflow runs on 5 devices:\r\n* 2 with model \"Arista\": Washington,\
        \ Austin\r\n* 3 with model \"Juniper\": Baltimore, Cambridge, Cincinnati\r\
        \nThe devices will take different success based on their model,\r\nusing the\
        \ \"Discard\" option of the skip mechanism.\r\nTo be tested both in DxD and\
        \ SxS WF targets mode.\r\nExpected results:\r\n- 3 devices discarded in the\
        \ upper path,\r\n0 device exiting via failure edge, 2 via sucess edge.\r\n\
        After \"Show VRF\", 2 via success or failure depending on\r\nwhether the router\
        \ is UP.\r\n- 2 devices discarded in the lower path, 0 device exiting\r\n\
        via failure edge, then all devices discarded in next service."
      positions: [-129, 146]
  last_modified: '2022-01-20 06:28:13.405257'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Fork based on value with Skip Discard Mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Fork based on value with Skip Discard Mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Fork based on value with Skip Discard
      Mechanism] REST API: call *is_alive* endpoint', '[Fork based on value with Skip
      Discard Mechanism] Arista devices', '[Fork based on value with Skip Discard
      Mechanism] Juniper devices', '[Fork based on value with Skip Discard Mechanism]
      Show VRF', '[Fork based on value with Skip Discard Mechanism] is_alive endpoint
      2: Skipped']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington, Baltimore, Cincinnati, Cambridge]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: admin
  default_uuid: 2e9c05ff-46d2-4217-8ef0-612f5763c92e
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-24 07:50:53.187875'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Fork based on value with Skip Discard Mechanism] REST API: call *is_alive*
    endpoint'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  payload:
    a: b
    c: ['1', '2', '3']
  pools: [Everything]
  positions:
    Fork based on value with Skip Discard Mechanism: &id310 [-480, 30]
    'Regression Workflow 2: Separate Failure - Success paths': [374, 278]
    'Regression Workflow 3: Napalm getters (postprocessing)': ['-50', '0']
    'Regression Workflow A: get_var, set_var, get_result': [-10, 157]
    'Regression Workflow C: Advanced multiprocessing': [386, 124]
    'Regression Workflow D: Prompts': [405, -103]
    'Regression Workflow L: superworkflow': [162, -126]
    'Regression Workflow P: large workflow (scalability)': &id309 [-415, -115]
    'Regression Workflow U: fork based on value with skip discard mode': &id308 [
      -354, -22]
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id308
    'Regression workflow P: large workflow (scalability)': *id309
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': *id310
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'REST API: call *is_alive* endpoint'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 47f5f9d1-5c46-41e0-8f6c-f4bb0bf8fc48
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-19 07:44:43.988142'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Fork based on value with Skip Discard Mechanism] Arista devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Fork based on value with Skip Discard Mechanism: &id312 [336, 89]
    'Regression Workflow U: fork based on value with skip discard mode': &id311 [
      47, -29]
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id311
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': *id312
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Arista devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.model != "Arista"
  skip_value: discard
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: acc8fc18-57d8-4387-95e1-796464779e54
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-19 07:44:52.104274'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Fork based on value with Skip Discard Mechanism] Juniper devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Fork based on value with Skip Discard Mechanism: &id314 [-434, 308]
    'Regression Workflow U: fork based on value with skip discard mode': &id313 [
      -430, 342]
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id313
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': *id314
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Juniper devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.model != "Juniper"
  skip_value: discard
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 989a75aa-6888-44aa-a72b-038c1ef9a928
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-09-25 04:28:01.307849'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Fork based on value with Skip Discard Mechanism] Show VRF'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Fork based on value with Skip Discard Mechanism: &id316 [548, 232]
    'Regression Workflow U: fork based on value with skip discard mode': &id315 [
      574, 0]
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id315
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': *id316
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show VRF
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: admin
  default_uuid: f4aad9a2-2258-41c5-b8de-60b11a0519ff
  definition: Definition
  delete_spaces_before_matching: false
  description: Use REST call is_alive
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  headers: {}
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-19 07:46:35.027296'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Fork based on value with Skip Discard Mechanism] is_alive endpoint 2: Skipped'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  payload:
    a: b
    c: ['1', '2', '3']
  pools: [Everything]
  positions:
    Fork based on value with Skip Discard Mechanism: &id318 [-5, 318]
    'Regression Workflow U: fork based on value with skip discard mode': &id317 [
      32, 431]
    'Regression Workflow: Fork based on value with Skip Discard Mechanism': *id317
    'Skip Mechanism: Fork based on value with Skip Discard Mechanism': *id318
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/is_alive
  run_method: per_device
  scoped_name: 'is_alive endpoint 2: Skipped'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: 'True'
  skip_value: discard
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: true
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Skip Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: ab3cb7ec-09fb-405c-8053-3fbfd325af3d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    7c48dd42-cfd7-435d-97d6-ae4b37603d84:
      alignment: left
      content: "In this service, Washington should be skipped\r\nwith a skipped value\
        \ of False:\r\nit should move forward to the subworkflow with the failure\
        \ edge.\r\nThe other devices should appear in the results under the \"devices\"\
        \ key."
      positions: ['-10', '-107']
    d4451b5e-1d2c-4a43-bbbc-3fd0e60eda25:
      alignment: left
      content: "When a service is in \"Run once\" mode, it must\r\nbe allowed to skip\
        \ devices with the skip query.\r\nThis also applies to a subworkflow in SxS\
        \ mode,\r\nwhich is equivalent to a service in run once mode.\r\nBesides,\
        \  the first service must be tested in full skip mode\r\nto make sure the\
        \ display is correct."
      positions: ['472', '-84']
    f9a7af7c-88d0-46ff-84f9-9a15cf4df7b1:
      alignment: left
      content: "PaloAlto is skipped at workflow level with skip value set to Discard.\r\
        \nIt should stop right there.\r\nIn the workflow, there is a service that\
        \ should be skipped for Austin:\r\nAustin won't reach the end and will be\
        \ considered a failure for the workflow.\r\nAustin should move along the failure\
        \ edge, and\r\nWashington should move along the success edge."
      positions: [-201, 295]
  last_modified: '2022-01-20 06:28:51.434075'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Skip Query with device in Run Once Mode
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Skip Query with device in Run Once Mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip Query with device in Run Once
      Mode] Subworkflow in SxS mode - workflow targets', '[Skip Query with device
      in Run Once Mode] Python service in run once mode', '[Skip Query with device
      in Run Once Mode] Subworkflow in SxS mode - service targets']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 1d7fdb58-67cc-4cc5-908d-1a88f1cf5c7d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:58.147307'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow
    targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow V: skip query with device in run once mode': &id319 [-221,
      154]
    'Regression Workflow: Skip Query with device in Run Once Mode': *id319
    Skip Query with device in Run Once Mode: *id319
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Subworkflow in SxS mode - workflow targets
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Skip Query with device in Run Once
      Mode] Subworkflow in SxS mode - workflow targets] Fail Austin']
  shared: false
  skip: {}
  skip_query: device.name == "PaloAlto"
  skip_value: discard
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 08d04cb6-2ba1-4fc1-a0b0-494e2eb12f91
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-29 04:31:17.767321'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Query with device in Run Once Mode] Python service in run once mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow V: skip query with device in run once mode': &id320 [-31,
      3]
    'Regression Workflow: Skip Query with device in Run Once Mode': *id320
    Skip Query with device in Run Once Mode: *id320
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Python service in run once mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name == "Washington"
  skip_value: failure
  source_code: "result = {}\r\nfor device in devices:\r\n  results.setdefault(\"devices\"\
    , []).append(device.name)\r\nresults[\"success\"] = True\r\nresults[\"result\"\
    ] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: bab8f138-376a-498e-a590-c2e669a1d4b8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:58.176258'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - service
    targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow V: skip query with device in run once mode': &id321 [342,
      205]
    'Regression Workflow: Skip Query with device in Run Once Mode': *id321
    Skip Query with device in Run Once Mode: *id321
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Subworkflow in SxS mode - service targets
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 6a00022d-0c9e-44aa-8c66-567c92928711
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-09-27 03:56:02.350546'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow
    targets] Fail Austin'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[Regression Workflow V: skip query with device in run once mode] Subworkflow in SxS mode - workflow targets': &id322 [
      230, -19]
    '[Regression Workflow: Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id322
    '[Skip Query with device in Run Once Mode] Subworkflow in SxS mode - workflow targets': *id322
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Fail Austin
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Availble variables: device, results, run\r\n# Returning state:\r\
    \n#    results[\"success\"] = True\r\n#    results[\"result\"] = <return data>\r\
    \n# Logging: log(level, text)\r\n#    log(\"info\", \"My log message\")\r\n# Exit\
    \ in the middle of the script:\r\n#    exit()\r\n#    Note: exit() is not required\
    \ as the last line\r\n\r\nresult = {}\r\nresults[\"success\"] = device.name ==\
    \ \"Washington\"\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Skip Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 92058bcd-1493-44ea-9fd2-0191ad756165
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    63712159-29e8-4848-8889-9e630019a516:
      alignment: left
      content: "Austin is discarded.\r\nPaloAlto should be stopped in the middle of\
        \ the workflow.\r\nExpected output: PaloAlto via failure edge,\r\nWashington\
        \ via success edge."
      positions: [404, 220]
    b4479263-ee3a-4526-a182-0b73b025d972:
      alignment: left
      content: "PaloAlto is skipped with skip value of False.\r\nAustin should be\
        \ stopped in the middle of the workflow.\r\nExpected output: PaloAlto and\
        \ Austin via failure edge,\r\nWashington on success edge."
      positions: [-227, 264]
    ec9df9f3-7b90-4939-99c7-c8cacf696a3d:
      alignment: left
      content: "This workflow tests that the disable result creation works fine.\r\
        \nAll results are disabled, except for the services in subworkflows.\r\nAND\
        \ does not prevent the workflow from running properly.\r\nTo be tested both\
        \ in DxD and SxS with workflow targets mode.\r\nRuns on: PaloAlto, Washington,\
        \ Austin"
      positions: [104, -127]
  last_modified: '2022-01-20 06:28:38.346685'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Skip, Discard and Disable Result Creation Mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Skip, Discard and Disable Result Creation Mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip, Discard and Disable Result
      Creation Mechanism] Pre-service with result creation disabled', '[Skip, Discard
      and Disable Result Creation Mechanism] Workflow in DxD mode', '[Skip, Discard
      and Disable Result Creation Mechanism] Workflow in SxS mode', '[Skip, Discard
      and Disable Result Creation Mechanism] Service in run once mode']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 1d544fd2-397c-4172-842a-53738a3565ee
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: true
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-10-01 04:05:51.093813'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip, Discard and Disable Result Creation Mechanism] Pre-service with result
    creation disabled'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow W: disable result creation mode': [-312, -10]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id323 [
      -254, -15]
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id323
    Skip, Discard and Disable Result Creation Mechanism: *id323
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Pre-service with result creation disabled
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: cd583d9a-afa9-41fe-ae34-4cce9b6f5770
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: true
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:58.282963'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow W: disable result creation mode': [-174, 154]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id324 [
      -231, 149]
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id324
    Skip, Discard and Disable Result Creation Mechanism: *id324
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Workflow in DxD mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Skip, Discard and Disable Result
      Creation Mechanism] Workflow in DxD mode] Fail Austin']
  shared: false
  skip: {}
  skip_query: device.name == "PaloAlto"
  skip_value: failure
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: d63edb20-6909-499d-a331-107364fe630a
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: true
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:58.315811'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow W: disable result creation mode': [442, 205]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id325 [
      379, 130]
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id325
    Skip, Discard and Disable Result Creation Mechanism: *id325
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Workflow in SxS mode
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Skip, Discard and Disable Result
      Creation Mechanism] Workflow in SxS mode] Fail PaloAlto']
  shared: false
  skip: {}
  skip_query: device.name == "Austin"
  skip_value: discard
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 5219e4e9-906d-4769-b6e1-ae0a1e696bff
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: true
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-10-01 04:05:55.852522'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip, Discard and Disable Result Creation Mechanism] Service in run once
    mode'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow W: disable result creation mode': [101, -37]
    'Regression Workflow W: skip, discard and disable result creation mechanism': &id326 [
      103, -43]
    'Regression Workflow: Skip, Discard and Disable Result Creation Mechanism': *id326
    Skip, Discard and Disable Result Creation Mechanism: *id326
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Service in run once mode
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 3b2a4b5e-640a-4198-aeb6-7d4baf5f686b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-10-01 04:06:03.214998'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode]
    Fail Austin'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[Regression Workflow W: disable result creation mode] Workflow in DxD mode': &id327 [
      224, -51]
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in DxD mode': *id327
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id327
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in DxD mode': *id327
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Fail Austin
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = device.name == \"Washington\"\
    \r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 7ea19dce-d212-4ae3-81b7-aaa9acaa9f2a
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-10-01 04:05:44.930376'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode]
    Fail PaloAlto'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[Regression Workflow W: skip, discard and disable result creation mechanism] Workflow in SxS mode': &id328 [
      220, -28]
    '[Regression Workflow: Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id328
    '[Skip, Discard and Disable Result Creation Mechanism] Workflow in SxS mode': *id328
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Fail PaloAlto
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = device.name != \"PaloAlto\"\r\
    \nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show run
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 6d816a51-3740-498a-a5f6-3382d9adb0df
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-08-07 08:46:54.921205'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Connect to Router with Device Credentials
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Connect to Router with Device Credentials
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: RBAC
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: fc635092-168f-4c10-afd3-8cd2fd6fe2c5
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    16752478-6639-43a8-a2c5-e5dedd826184:
      alignment: left
      content: "This workflow must be tested with all different types of credential:\
        \ \r\n- Credential type \"any\" (default) should work as described on the\
        \ left:\r\n3 pass, 1 fail (Austin-3).\r\n- Credential type \"read-only\":\
        \ Washington should fail with the exception\r\n\"No matching credentials found\"\
        , because its associated credential\r\nis set to read-write.\r\nHowever, Austin3\
        \ should pass along with Austin and Austin-2\r\nbecause the Austin-3 \"wrong\
        \ credentials\" is also set to read-write,\r\nso Austin-3 will use the right\
        \ credential (SSH key) even though\r\nit has lower priority.\r\n- Credential\
        \ type \"read-write\": Austin and Austin-2 should use the\r\npassword-based\
        \ credential instead of the key-based credential\r\nbecause it is set to read-only.\r\
        \nAustin-3 should use the wrong credentials and fail."
      positions: ['486', '-109']
    86737c37-94b1-4c51-8f57-9cfcd32caf5a:
      alignment: left
      content: "This workflow runs on Washington, Austin, Austin-2 and Austin-3.\r\
        \n- Washington will use \"Router Credentials - Password\" (correct credentials).\r\
        \n- Austin and Austin-2 will match both \"Router Credentials - Password\"\r\
        \n and \"Router Credentials - SSH Key\", but the SSH key has higher priority\r\
        \nso they should use that to log in.\r\n- Austin-3 will match all credentials\
        \ but \"Router Credentials - Wrong Password\"\r\nhas higher priority, so it\
        \ should be used and\r\nthe connection should fail.\r\n\r\nAll devices but\
        \ Austin-3 should pass. For Austin and Austin-2,\r\nthe authentication in\
        \ the server logs should say \"authentication (publickey)\"\r\nand for Washington,\
        \ \"authentication (keyboard-interactive)\".\r\nThe logs also indicate which\
        \ credentials were used."
      positions: ['-71', '-110']
  last_modified: '2022-01-15 07:51:27.989861'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Credentials (Password & Key, Priority Mechanism)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Credentials (Password & Key, Priority Mechanism)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Credentials (Password & Key, Priority
      Mechanism)] Show interfaces with netmiko']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: [Credentials pool - Austin devices]
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show interfaces
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 59fce2e6-4092-4ab8-8ff1-cb6435bfc977
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2020-11-17 09:04:17.856544'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Credentials (Password & Key, Priority Mechanism)] Show interfaces with netmiko'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Credentials (Password & Key, Priority Mechanism): &id329 [220, 52]
    'Regression Workflow X: Credentials (password & key, priority)': [220, 52]
    'Regression Workflow: Credentials (Password & Key, Priority Mechanism)': *id329
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show interfaces with netmiko
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Basics
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: f2234600-a663-43f5-a49a-9e3b431c89ed
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    f721f743-3dd8-40a2-a5eb-5680a80b50da:
      alignment: left
      content: "When a service fails, there can be a remediation process to apply\
        \ to\r\nthe failed devices before moving on to the next service.\r\nThe remediation\
        \ must be run before the next service if there are any\r\nfailed device, while\
        \ not preventing the workflow from running to\r\ncompletion if there aren't\
        \ any.\r\nThis justifies the move from the concept of \"prerequisite edges\"\
        \ to a\r\npriority-based graph traversal implemented with Dijkstra algorithm.\r\
        \nIn this workflow: TODO remove iteration and describe with and without\r\n\
        use-case"
      positions: [172, 116]
  last_modified: '2022-01-16 05:51:45.214836'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Optional Remediation Branch
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Optional Remediation Branch
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Optional Remediation Branch] Dispatch
      Devices', '[Optional Remediation Branch] Last Service', '[Optional Remediation
      Branch] Failure case: device + value iteration', '[Optional Remediation Branch]
      Post-Iteration Service']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Jackson, PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 08b43c19-fdef-4bfc-b3b2-bfbc87356273
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-12-22 05:26:18.550097'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Optional Remediation Branch] Dispatch Devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Optional Prerequisite Services: &id330 [-342, 317]
    Optional Remediation Branch: [-342, 317]
    'Regression Workflow: Optional Prerequisite Services': *id330
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dispatch Devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = device.name in (\"Washington\"\
    , \"Jackson\")\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 4ea13d34-7aa9-4755-996d-e2f7e88b65c8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-12-22 02:08:35.787494'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Optional Remediation Branch] Last Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Optional Prerequisite Services: &id331 [644, 318]
    Optional Remediation Branch: [644, 318]
    'Regression Workflow: Optional Prerequisite Services': *id331
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Last Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Click on \"i\" to right of \"Source Code\" for examples.\r\n\r\n\
    result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: ae3368aa-c384-4133-aaab-f78ccfc53f82
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["PaloAlto", "Atlanta"]'
  iteration_devices_property: name
  iteration_values: ("v1", "v2", "v3")
  iteration_variable_name: iteration_value
  last_modified: '2020-12-22 05:29:35.324665'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Optional Remediation Branch] Failure case: device + value iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Optional Prerequisite Services: &id332 [-214, -47]
    Optional Remediation Branch: [-214, -47]
    'Regression Workflow: Optional Prerequisite Services': *id332
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Failure case: device + value iteration'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Click on \"i\" to right of \"Source Code\" for examples.\r\n\r\n\
    result = {}\r\nresults[\"success\"] = parent_device.name == \"Austin\"\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: e1348690-aaab-4395-a90e-4816ea686970
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-12-22 02:09:11.818342'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Optional Remediation Branch] Post-Iteration Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Optional Prerequisite Services: &id333 [601, -27]
    Optional Remediation Branch: [601, -27]
    'Regression Workflow: Optional Prerequisite Services': *id333
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Post-Iteration Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Click on \"i\" to right of \"Source Code\" for examples.\r\n\r\n\
    result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Iteration Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 297cede9-bd2d-40d7-8bfa-ebd7e0d9660b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    565d2938-6b9a-46c3-97b5-02fd4fa05e0b:
      alignment: left
      content: "This workflow runs on two devices: San Diego and Dallas.\r\nIts preprocessing\
        \ field is used to define the iteration devices\r\nfor the second service,\
        \ via the following snippet:\r\ndevices = [\"Austin\", \"PaloAlto\"] if device.name\
        \ == \"Dallas\" else [\"NewYork\"]\r\nset_var(\"iteration_devices\", devices,\
        \ device=device.name)\r\nThe workflow can only run in DxD mode, as \"device\"\
        \ is not defined\r\nin the preprocessing section of the workflow in SxS mode."
      positions: [99, -120]
    9ab175e4-2b58-48da-bae1-89ea98ee75ed:
      alignment: left
      content: "Has \"iteration_devices\" hardcoded iteration devices: this variable\r\
        \nhas been set in the workflow preprocessing field.\r\nThree results are expected\
        \ (Parent Device / Iterated Device):\r\n1) San Diego / New York\r\n2) Dallas\
        \ / Austin\r\n3) Dallas / PaloAlto"
      positions: [284, 130]
    ca71af98-62bf-4aae-8aa5-ac4d8f804700:
      alignment: left
      content: "Has [\"Washington\", \"Austin\"] as hardcoded iteration devices.\r\
        \nFour results are expected with San Diego / Dallas as parent\r\ndevices,\
        \ and Washington / Austin as iterated device for\r\neach parent device."
      positions: [-152, 117]
  last_modified: '2022-01-16 05:15:29.754652'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Device Iteration
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: "devices = [\"Austin\", \"PaloAlto\"] if device.name == \"Dallas\"\
    \ else [\"NewYork\"]\r\nset_var(\"iteration_devices\", devices, device=device.name)"
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Device Iteration
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Device Iteration] Hard-coded iteration
      devices', '[Device Iteration] Iteration Devices from Predefined Variable']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [SanDiego, Dallas]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 821559b1-10f0-44be-88b5-29fd4f4e31fd
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["Washington", "Austin"]'
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-03 03:43:39.735814'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Device Iteration] Hard-coded iteration devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Device Iteration: &id334 [-151, 24]
    'Iteration Mechanism: Device Iteration': *id334
    'Regression Workflow: Device Iteration': [-233, 160]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Hard-coded iteration devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "# Click on \"i\" to right of \"Source Code\" for examples.\r\n\r\n\
    result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 313c7480-b3c2-4ec0-8cf4-a67096d73075
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["PaloAlto", "Austin"]'
  iteration_devices_property: name
  iteration_values: '["D", "E"]'
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:58.517714'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Iteration Mechanism: Workflow and Subworkflow Iteration': &id335 [233, 471]
    'Regression Workflow: Workflow and Subworkflow Iteration': [233, 471]
    Workflow and Subworkflow Iteration: *id335
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Subworkflow Device Iteration
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Workflow and Subworkflow Iteration]
      Subworkflow Device Iteration] Service that does nothing']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 038f592f-5850-4839-8fa9-6db51170eb1d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: get_var("device_iteration", device=device.name)
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-10-09 03:25:58.552695'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Iteration Mechanism: Workflow and Subworkflow Iteration': &id336 [628, 455]
    'Regression Workflow: Workflow and Subworkflow Iteration': [649, 409]
    Workflow and Subworkflow Iteration: *id336
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Subworkflow Device Iteration 2
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Workflow and Subworkflow Iteration]
      Subworkflow Device Iteration 2] Service that does nothing']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 59ae170e-d0df-4c4b-a986-f661b1215722
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-09 03:22:49.943322'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2] Service
    that does nothing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': &id337 [
      233, -24]
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id337
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration 2': *id337
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service that does nothing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 5c6bd006-cad4-4559-8863-a5c5cbdd0f2f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-09 03:31:47.477556'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Workflow and Subworkflow Iteration] Subworkflow Device Iteration] Service
    that does nothing'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[Iteration Mechanism: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': &id338 [
      241, -26]
    '[Regression Workflow: Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id338
    '[Workflow and Subworkflow Iteration] Subworkflow Device Iteration': *id338
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service that does nothing
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 12da927d-04d3-45eb-a2aa-46e2906e4dc3
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-24 15:03:50.088980'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: factory, fetch, fetch_all, encrypt and get_result] Factory function:
    Create new device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: factory, fetch, fetch_all, encrypt and get_result': &id339 [-165,
      199]
    Global Variables and post-run Pool Update Mechanism: *id339
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': *id339
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Factory function: Create new device'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "new_device = factory(\"device\", name=f\"New-{device.id}\")\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = new_device.serialized"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 0ae7cac0-fd1b-4d99-b21b-7e1e66d33cc3
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-24 15:04:58.720648'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: factory, fetch, fetch_all, encrypt and get_result] Delete function:
    delete new device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: factory, fetch, fetch_all, encrypt and get_result': &id340 [182, 132]
    Global Variables and post-run Pool Update Mechanism: *id340
    'Regression Workflow: Global Variables and post-run Pool Update Mechanism': *id340
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Delete function: delete new device'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "delete(\"device\", name=f\"No-{device.id}\")\r\nresults[\"success\"\
    ] = True\r\nresults[\"result\"] = {}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: RBAC
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 53cbb106-1d3a-40fe-af30-3a5193c054d6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    893cb12b-1918-4e50-8aa2-a71ae7bf3e8f:
      alignment: left
      content: "Iteration targets set to \"Boston\" and \"Washington\" too.\r\nIterating\
        \ should fail for Boston as parent device, and for Washington,\r\nit should\
        \ only iterate on Washington as iteration devices and not Boston."
      positions: [583, 220]
    a310fb32-d6ca-408d-87b1-83e5f95e36ff:
      alignment: left
      content: "This workflow must be run by user \"ny\" on two devices:\r\nBoston\
        \ and Washington.\r\nny has access to Washington, but not Boston: Bostin should\r\
        \nfail without prevent the workflow from running on Washington.\r\nThe restriction\
        \ must apply to direct targets as well as\r\niteration and device targets.\r\
        \nMust be run both in DxD and SxS w/ WF targets mode."
      positions: [279, -88]
  last_modified: '2022-01-15 07:51:11.373697'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Target Restriction Mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything, Services for access by user ny]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Target Restriction Mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Target Restriction Mechanism] Direct
      Target', '[Target Restriction Mechanism] Device Targets', '[Target Restriction
      Mechanism] Iteration Targets']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington, Boston]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 50b64b97-c0ce-4eb8-9c05-5432ffdbc4a9
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-28 04:54:12.473429'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Target Restriction Mechanism] Direct Target'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    RBAC Target Restriction: &id341 [-162, 99]
    'Regression Workflow: RBAC Target Restriction': *id341
    Target Restriction Mechanism: *id341
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Direct Target
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: [Washington, Boston]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: f4f43dd8-bdfb-4dd3-a5b3-0d2f4a92d787
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: '["Washington", "Boston"]'
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-28 04:54:24.915967'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Target Restriction Mechanism] Device Targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    RBAC Target Restriction: &id342 [181, 119]
    'Regression Workflow: RBAC Target Restriction': *id342
    Target Restriction Mechanism: *id342
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Device Targets
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: e301f99f-d7c6-4856-939c-bd0e387bb44f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: '["Washington", "Boston"]'
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-03-28 04:54:47.352189'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Target Restriction Mechanism] Iteration Targets'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    RBAC Target Restriction: &id343 [590, 138]
    'Regression Workflow: RBAC Target Restriction': *id343
    Target Restriction Mechanism: *id343
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Iteration Targets
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: [Washington, Boston]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: f3900441-4222-4fd1-98a3-5fa628e9f338
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    03095192-e0e3-4e4b-837a-d62da1e2745d:
      alignment: left
      content: "Uses Netconf RPC to delete the description\r\nof interface \"Loopback\
        \ 5\"."
      positions: [509, 220]
    ae5534ad-a205-4918-9410-060a9e37be0d:
      alignment: left
      content: "Uses Netconf RPC to edit the description of interface \"Loopback 5\"\
        .\r\nDescription is set to \"YYYY\""
      positions: ['-111.71806001863283', '-160.49012390785245']
      size: 24
    b4231341-9041-4ff2-9d9e-4955d16aa247:
      alignment: left
      content: "Uses Scrapli Netconf \"get config\" function to retrieve\r\nthe running\
        \ configuration.\r\nIn postprocessing, checking for \"YYYY\" to make sure\
        \ the\r\ndescription was properly configured in the previous step."
      positions: [483, -149]
    d95f1a49-b583-4bf9-91a8-94a0ed98171f:
      alignment: left
      content: "Uses Scrapli Netconf \"Get\" function with XML payload to get data\r\
        \nfrom all interfaces. The output is converted to a dictionary in step 4.\r\
        \nCheck that the interface description is not set in post-processing.\r\n"
      positions: [69, 216]
  last_modified: '2022-01-16 05:08:24.834235'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Scrapli Netconf Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Scrapli Netconf Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Scrapli Netconf Service] Get
      Running Configuration', '[(R) Scrapli Netconf Service] Get State', '[(R) Scrapli
      Netconf Service] Edit Interface Loopback 5', '[(R) Scrapli Netconf Service]
      Delete Loopback 5 description']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  command: get_config
  commit_config: false
  completion_time: 1
  connection_name: default
  content: ''
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 0a16e25b-b601-4add-af44-199cfd3d3230
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-05-02 03:34:31.845229'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli Netconf Service] Get Running Configuration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli Netconf Service: &id344 [479, -63]
    'Regression Workflow: Scrapli Netconf Service': *id344
    Scrapli Netconf Service: *id344
  postprocessing: "results[\"success\"] = \"<description>YYYY</description>\" in results[\"\
    result\"]\r\nlog(\"error\", \"Description 'YYYY' missing from Running Configuration\"\
    )"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Running Configuration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_namespaces: false
  target: running
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: scrapli_netconf_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  command: get
  commit_config: false
  completion_time: 1
  connection_name: default
  content: "<if:interfaces -state xmlns:if=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\
    >\r\n      <if:interface>\r\n        <if:name>Loopback5</if:name>\r\n      </if:interface>\r\
    \n</if:interfaces>"
  content_match: ''
  content_match_regex: false
  conversion_method: xml
  creator: admin
  credential_type: any
  credentials: device
  custom_password: YWRtaW4=
  custom_username: ''
  default_uuid: c20d818f-5dc0-48ca-84f9-8b8b95f71de0
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 07:36:06.901673'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli Netconf Service] Get State'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli Netconf Service: &id345 [26, 125]
    'Regression Workflow: Scrapli Netconf Service': *id345
    Scrapli Netconf Service: *id345
  postprocessing: "interfaces = results[\"result\"][\"rpc-reply\"][0][\"data\"][0][\"\
    interfaces\"][0][\"interface\"]\r\nfor interface in interfaces:\r\n    if interface[\"\
    name\"][0] == \"Loopback5\":\r\n        break\r\n\r\nresults[\"interface\"] =\
    \ interface\r\nresults[\"success\"] = interface[\"config\"][0][\"description\"\
    ] == [None]\r\n"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get State
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_namespaces: false
  target: running
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: scrapli_netconf_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  command: rpc
  commit_config: true
  completion_time: 1
  connection_name: default
  content: "<nc:edit-config xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\r\
    \n   <target>\r\n   <running/>\r\n   </target>\r\n   <commands>\r\n   <command>interface\
    \ Loopback5</command>\r\n   <command>description YYYY</command>\r\n   </commands>\r\
    \n   </nc:edit-config>"
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: f87f62a6-3a38-4eac-a16e-01cb5ff7d692
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:17:31.604783'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli Netconf Service] Edit Interface Loopback 5'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli Netconf Service: &id346 [20, -72]
    'Regression Workflow: Scrapli Netconf Service': *id346
    Scrapli Netconf Service: *id346
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Edit Interface Loopback 5
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_namespaces: false
  target: running
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: scrapli_netconf_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  command: rpc
  commit_config: false
  completion_time: 1
  connection_name: default
  content: "<nc:edit-config xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\r\
    \n   <target>\r\n   <running/>\r\n   </target>\r\n   <commands>\r\n   <command>interface\
    \ Loopback 5</command>\r\n   <command>no description YYYY</command>\r\n   </commands>\r\
    \n   </nc:edit-config>"
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: d1de71a9-1ba1-4ec4-94cc-34e2e2b54553
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:12:42.356680'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli Netconf Service] Delete Loopback 5 description'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli Netconf Service: &id347 [510, 143]
    'Regression Workflow: Scrapli Netconf Service': *id347
    Scrapli Netconf Service: *id347
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Delete Loopback 5 description
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_namespaces: false
  target: running
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: scrapli_netconf_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Parameterized Form
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 1d25efda-bfbe-4d57-9052-b39beb4a64ad
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: '["Atlanta"]'
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    19c40c2f-b0c6-4c33-b1b7-22085dcb07e3:
      alignment: left
      content: "Runs on two devices: San Diego and Dallas.\r\nUses a parameterized\
        \ form to define the value of an interface.\r\nBoth services use netmiko to\
        \ show the description of the interface:\r\n* the first service access the\
        \ interface from the payload, with payload[\"form\"].\r\n* the second service\
        \ access the interface as a global variable.\r\nThe parameterized run uses\
        \ the \"labels\" property to add labels\r\nto the run object."
      positions: [225, -24]
    46e3d026-f4f9-4d74-9ba9-2807c97ffe18:
      alignment: left
      content: 'Access the interface as a global variable: "interface"'
      positions: [449, 186]
    fded87ef-2b4a-4cdb-9f21-5c81981bde15:
      alignment: left
      content: "Access the interface property directly from the payload :\r\n\"payload[\"\
        form\"][\"interface\"]\"\r\n"
      positions: [-88, 196]
  last_modified: '2022-01-15 07:58:36.303716'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Labels and Custom Property
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "labels = SelectMultipleStringField(\r\n  \"Labels\",\r\n  choices=(\r\
    \n    (\"tag1\", \"Tag 1\"),\r\n    (\"tag2\", \"Tag 2\"),\r\n    (\"precheck\"\
    , \"Pre-checks\"),\r\n    (\"postcheck\", \"Post-checks\"))\r\n)\r\ninterface\
    \ = StringField(\"Interface\", default=\"Lo1\")\r\n"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Labels and Custom Property
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Labels and Custom Property] Show
      interface from initial form (default: Lo1)', '[(R) Labels and Custom Property]
      Show inteface as global variable']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [SanDiego, Dallas]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show interface {{payload["form"]["interface"]}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 746e4cf7-74e6-498f-ae2b-6bdfce04a59b
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-06-07 02:09:28.205784'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Labels and Custom Property] Show interface from initial form (default:
    Lo1)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Labels and Custom Property: [-78, 122]
    Parameterized Form (override labels & targets, add payload): &id348 [-78, 122]
    'Regression Workflow: Parameterized Form (override labels & targets, add payload)': *id348
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: 'Show interface from initial form (default: Lo1)'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Basics
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 8e244d91-ff47-466a-9ea1-1ce797009772
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    388cd977-3b5c-4159-a105-22c931b01eb8:
      alignment: left
      content: "A new key \"new_key\" is added to the result such that\r\nresults[\"\
        new_key\"] = {\r\n  \"a\": \"LLLoLLL\",\r\n  \"b\": {\"c\": \"JJJkJJJ\"},\r\
        \n  \"c\": [1, \"3\"]\r\n}\r\nWe test that {\"a\":\"LLLoLLL\",\"c\":[\"3\"\
        ]} is included in\r\nresults[\"new_key\"] via Dictionary Inclusion validation."
      positions: [-46, 235]
    47a0ea22-8a52-4ca6-87ae-70e0da8baea5:
      alignment: left
      content: "results[\"result\"] (default validation section) is set to\r\n{\"\
        key1\": \"value1\"} in the python section.\r\nVia the dictionary match mechanism,\
        \ we check that it is\r\nindeed equal to {\"key1\": \"value1\"}."
      positions: [-437, 207]
    508374df-69c4-40ed-87be-083eb30dd249:
      alignment: left
      content: "We set \"results[\"result\"]\" to {\"a\": {\"b\": \"LOL\"}}.\r\nWe\
        \ then check, via String Inclusion Validation,\r\nthat \"OL\" is included\
        \ in \"results['result'][\"a\"][\"b\"]\"."
      positions: [345, 208]
    82b58ac0-c894-4f7f-9b8c-1b4399c3cb2d:
      alignment: left
      content: "By default, the validation mechanism takes place on the\r\n\"result\"\
        \ key of the results (\"results['result']\"). The \"Section to Validate\"\r\
        \nfield lets you change that default behavior.\r\n* The first service uses\
        \ the default behavior of checking against\r\n\"results['result']\".\r\n*\
        \ The second service uses dictionary inclusion validation against\r\na new\
        \ top level key of the result dictionary.\r\n* The third service uses string\
        \ inclusion validation against\r\nan inner key of results['result'].\r\n"
      positions: [-86, -14]
  last_modified: '2022-01-20 07:15:35.541645'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Validation Mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation Mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Validation Mechanism] Dict Equality
      Validation of default path', '[Validation Mechanism] Dict Inclusion Validation
      of new key', '[Validation Mechanism] Nested Result String Validation']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 85d7b111-2ec1-45b2-818e-65f39dc003bf
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {key1: value1}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-22 02:58:21.081808'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Validation Mechanism] Dict Equality Validation of default path'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow: Validation Section Mechanism': [-384, 34]
    Validation Mechanism: &id349 [-467, 119]
    'Validation Mechanism: Section to Validate Property': *id349
    Validation Section Mechanism: [-448, 116]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dict Equality Validation of default path
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {\"key1\": \"value1\"}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: c074f10a-0cef-48f7-b729-e2d17f25a016
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match:
    a: LLLoLLL
    c: ['3']
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-22 03:07:50.513458'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Validation Mechanism] Dict Inclusion Validation of new key'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow: Validation Section Mechanism': [-39, -193]
    Validation Mechanism: &id350 [-55, 123]
    'Validation Mechanism: Section to Validate Property': *id350
    Validation Section Mechanism: [193, 118]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dict Inclusion Validation of new key
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"new_key\"] = {\r\n  \"a\": \"LLLoLLL\",\r\n  \"b\"\
    : {\"c\": \"JJJkJJJ\"},\r\n  \"c\": [1, \"3\"]\r\n}\r\nresults[\"success\"] =\
    \ True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['new_key']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: OL
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 2eafcfe5-aa3c-4d33-ac34-63f96dbf8094
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-22 08:17:12.564512'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Validation Mechanism] Nested Result String Validation'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow: Validation Section Mechanism': [77, 51]
    Validation Mechanism: &id351 [290, 124]
    'Validation Mechanism: Section to Validate Property': *id351
    Validation Section Mechanism: [285, -48]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Nested Result String Validation
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {\"a\": {\"b\": \"LOL\"}}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']["a"]["b"]
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: b93d0faf-d528-4fe2-87ba-3ec5f7d591a8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    25779404-589e-4a8f-8b83-7b71c7262010:
      alignment: left
      content: "Get Full Config via NCClient. Convert the Configuration to a string.\r\
        \nCheck that \"ZZZZ\" isn't in the configuration via text match validation\r\
        \nwith negative logic enabled."
      positions: [-337, 197]
    45456377-3939-4c06-8a03-1701ebb7206b:
      alignment: left
      content: "Use NCClient \"Edit Config\" Operation to set\r\nthe description of\
        \ Loopback4 to \"ZZZZ\"."
      positions: [-126, -203]
    5e734ae2-a1a9-422d-b21e-ea980e881f0a:
      alignment: left
      content: "Same as the first service, but\r\nwith negative logic disabled."
      positions: [33, 187]
  last_modified: '2022-01-16 05:18:59.636624'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) NCClient Netconf Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) NCClient Netconf Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) NCClient Netconf Service] Get
      Full Config', '[(R) NCClient Netconf Service] Set Description of Lo4 to ZZZZ',
    '[(R) NCClient Netconf Service] Check for ZZZZ in Config', '[(R) NCClient Netconf
      Service] Erase Lo4 Description', '[(R) NCClient Netconf Service] Check ZZZZ
      is not in Config']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ZZZZ
  content_match_regex: false
  conversion_method: text
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_operation: merge
  default_uuid: 390d5cdb-b7dc-4e89-996f-1cc853be90ce
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:19:11.282891'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NCClient Netconf Service] Get Full Config'
  nc_type: get_config
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NCClient Netconf Service: &id352 [-414, 116]
    NCClient Netconf Service: *id352
    'Regression Workflow: NCClient Netconf Service': *id352
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Full Config
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: test-then-set
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: ''
- access_groups: admin
  admin_only: false
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_operation: merge
  default_uuid: 95a227bd-6ec1-456f-9fea-7913fcdbcb96
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:23:05.758222'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NCClient Netconf Service] Set Description of Lo4 to ZZZZ'
  nc_type: push_config
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NCClient Netconf Service: &id353 [-132, -139]
    NCClient Netconf Service: *id353
    'Regression Workflow: NCClient Netconf Service': *id353
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Set Description of Lo4 to ZZZZ
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: None
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: "    <nc:config xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\r\n    <if:interfaces xmlns:if=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\
    \ xmlns:mmif=\"urn:metamako:params:xml:ns:yang:metamako-if\">\r\n      <if:interface>\r\
    \n        <if:name>Loopback4</if:name>\r\n        <if:config>\r\n        <if:description>ZZZZ</if:description>\r\
    \n        </if:config>\r\n      </if:interface>\r\n    </if:interfaces>\r\n  \
    \  </nc:config>"
- access_groups: admin
  admin_only: false
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ZZZZ
  content_match_regex: false
  conversion_method: text
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_operation: merge
  default_uuid: 94fe140d-b0e8-447b-bda7-a1ccb4a7f31c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:23:36.535509'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NCClient Netconf Service] Check for ZZZZ in Config'
  nc_type: get_config
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NCClient Netconf Service: &id354 [30, 126]
    NCClient Netconf Service: *id354
    'Regression Workflow: NCClient Netconf Service': *id354
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check for ZZZZ in Config
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: test-then-set
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: ''
- access_groups: admin
  admin_only: false
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_operation: merge
  default_uuid: 3282cc8e-0555-42c1-8e91-ff74c76c3d01
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:28:27.422124'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NCClient Netconf Service] Erase Lo4 Description'
  nc_type: push_config
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NCClient Netconf Service: &id355 [249, -136]
    NCClient Netconf Service: *id355
    'Regression Workflow: NCClient Netconf Service': *id355
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Erase Lo4 Description
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: None
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: "    <nc:config xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\r\n    <if:interfaces xmlns:if=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\
    \ xmlns:mmif=\"urn:metamako:params:xml:ns:yang:metamako-if\">\r\n      <if:interface>\r\
    \n        <if:name>Loopback4</if:name>\r\n        <if:config>\r\n        <if:description>None</if:description>\r\
    \n        </if:config>\r\n      </if:interface>\r\n    </if:interfaces>\r\n  \
    \  </nc:config>"
- access_groups: admin
  admin_only: false
  close_connection: false
  commit_conf: false
  completion_time: 1
  connection_name: default
  content_match: ZZZZ
  content_match_regex: false
  conversion_method: text
  copy_destination: running
  copy_source: running
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_operation: merge
  default_uuid: 9ff6c8ae-ea0c-4d2d-8bfa-c4b463596db3
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_url: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  error_option: stop-on-error
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-23 06:28:49.915663'
  lock: false
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NCClient Netconf Service] Check ZZZZ is not in Config'
  nc_type: get_config
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NCClient Netconf Service: &id356 [388, 123]
    NCClient Netconf Service: *id356
    'Regression Workflow: NCClient Netconf Service': *id356
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Check ZZZZ is not in Config
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_url: ''
  start_new_connection: false
  target: running
  target_devices: []
  target_pools: []
  test_option: test-then-set
  time_between_retries: 10
  timeout: 15
  type: netconf_service
  unlock: false
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
  xml_conversion: true
  xml_filter: ''
- access_groups: admin
  admin_only: false
  category: SSH Connection
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 7dbc755c-0f71-4f3a-8c25-a70b4c1d45e8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    51d764cf-2275-4da7-b125-5d05fa7230ef:
      alignment: left
      content: "This service opens the default netmiko connection:\r\n\"OPENING Netmiko\
        \ Connection 'default'\""
      positions: [-18, -197]
    7135acf5-728a-4b50-8bd7-8f9dfda7032b:
      alignment: left
      content: "This service uses \"connection2\" and \"Close Connection\"\r\nis set\
        \ to True. Expected in the service logs:\r\n\"Closed netmiko connection 'connection2'\"\
        \r\n"
      positions: [462, -167]
    aaca4c8e-23fa-49d5-98ad-9be3ca696dc7:
      alignment: left
      content: "This service opens a new connection named \"connection2\".\r\nThe\
        \ logs should contain: \"OPENING Netmiko Connection 'connection2'\"\r\ndespite\
        \ the fact that \"Open New Connection\" is not set."
      positions: [-173, 190]
    d1054aca-df42-4e18-9418-f2233be28528:
      alignment: left
      content: "During the workflow, there should be two VTY open on the\r\ndevice.\r\
        \nAt the end of the workflow, the remaining \"default\" connection\r\nshould\
        \ be closed. Expected in workflow logs:\r\n\"Closed netmiko connection 'default'\"\
        ."
      positions: [374, 129]
  last_modified: '2022-01-16 05:06:57.438954'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Multiple parallel connections to same device
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Multiple parallel connections to same device
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Multiple parallel connections
      to same device] Show VRF with default connection', '[(R) Multiple parallel connections
      to same device] Show VRF with connection connection2', '[(R) Multiple parallel
      connections to same device] Show users with connection2 and close']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 5f18826d-2fc7-4398-9323-a48821d6791d
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-06-27 21:07:09.596633'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Multiple parallel connections to same device] Show VRF with default
    connection'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Multiple parallel connections to same device: &id357 [-72, -122]
    Multiple parallel connections to same device: *id357
    'Regression Workflow: multiple parallel connections to same device': [-72, -122]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show VRF with default connection
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: connection2
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 389983a9-1e6f-4e1e-9dec-67a37d5eebf8
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-06-27 21:08:18.891441'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Multiple parallel connections to same device] Show VRF with connection
    connection2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Multiple parallel connections to same device: &id358 [-219, 114]
    Multiple parallel connections to same device: *id358
    'Regression Workflow: multiple parallel connections to same device': [-231, 101]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show VRF with connection connection2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: true
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: connection2
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 2478ee9e-fafc-43e2-80aa-a117c99c9167
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-06-27 21:08:37.480645'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Multiple parallel connections to same device] Show users with connection2
    and close'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Multiple parallel connections to same device: &id359 [454, -84]
    Multiple parallel connections to same device: *id359
    'Regression Workflow: multiple parallel connections to same device': [454, -84]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show users with connection2 and close
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Notification Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 804d819b-b74c-4ddd-9d93-305c661c778e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    201f02ff-4201-4e48-ac16-a25fb877787c:
      alignment: left
      content: "For this workflow, the \"MAIL_PASSWORD\" env variable must be set\
        \ for\r\neNMS to be able to send notifications.\r\nAll services are configured\
        \ to send mail notification, as well as the workflow\r\nitself."
      positions: [49, -29]
    91b037b9-22e5-42ba-8e3e-fb7a1e24dd57:
      alignment: left
      content: "* Once per device service\r\n* Include Device Results in mail\r\n\
        * All devices including success devices\r\n* No link in summary\r\n* No reply\
        \ to address"
      positions: [14, 175]
    a5cb931b-c6f2-4729-91a6-bf6c89484240:
      alignment: left
      content: "* Run Once service\r\n* Simple mail notification\r\n* All options\
        \ left empty"
      positions: [-410, 275]
    a7b41871-93ac-4e12-8c88-c9ac2e87871f:
      alignment: left
      content: "Notification 3:\r\n* Include device results + result link in summary\r\
        \n* Reply to address set\r\n* Display only Display Failed Devices - washigton\
        \ pass so it is\r\nexcluded from the results. The others two are passing"
      positions: [410, 285]
  last_modified: '2022-05-06 02:05:12.455315'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Mail Notifications
  negative_logic: false
  notification_header: Include device results + result link in summary
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Mail Notifications
  send_notification: true
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Mail Notifications] Notification
      1', '[Mail Notifications] Notification 2', '[Mail Notifications] Notification
      3']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 49b8c6a9-356d-45c5-a4dd-22350c23a1e7
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-28 02:39:15.044828'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Mail Notifications] Notification 1'
  negative_logic: false
  notification_header: "* Run Once service\r\n* Simple mail notification\r\n* All\
    \ options left empty"
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Mail Notifications: &id360 [-422, 198]
    Notification Mechanism: *id360
    Notifications: *id360
    'Regression Workflow: Notifications': *id360
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Notification 1
  send_notification: true
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: e2d0e0d6-f0bc-4c9f-bfe9-2ca9b5165163
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: false
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-28 02:39:04.907474'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Mail Notifications] Notification 2'
  negative_logic: false
  notification_header: "* Once per device service\r\n* Include Device Results in mail\r\
    \n* All devices including success devices\r\n* No link in summary\r\n* No reply\
    \ to address"
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Mail Notifications: &id361 [-26, 64]
    Notification Mechanism: *id361
    Notifications: *id361
    'Regression Workflow: Notifications': *id361
  postprocessing: results["success"] = device.name == "Washington"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Notification 2
  send_notification: true
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 154f3237-0b26-473f-aa1f-989ad80c38d8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: false
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-06-28 02:45:17.379373'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Mail Notifications] Notification 3'
  negative_logic: false
  notification_header: "Notification 3:\r\n* Include device results + result link\
    \ in summary\r\n* Reply to address set\r\n* Display only Display Failed Devices\
    \ - washigton pass so it is\r\nexcluded from the results. The others two are passing"
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Mail Notifications: &id362 [384, 192]
    Notification Mechanism: *id362
    Notifications: *id362
    'Regression Workflow: Notifications': *id362
  postprocessing: results["success"] = device.name == "Washington"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: afourmy@enms.io
  reserved: false
  run_method: per_device
  scoped_name: Notification 3
  send_notification: true
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: d160d365-c782-4f16-8bba-cc256886a52d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    078175a7-4b51-4ccf-b896-3f176212f3ed:
      alignment: left
      content: "Same as first service, but with\r\nnegative logic disabled."
      positions: [24, 143]
    1d4c6192-870d-4a22-bd34-a61abed491bb:
      alignment: left
      content: Command "delete enms_files/netmiko_file"
      positions: [197, -169]
    2392b78f-eb3a-41e3-b824-f1d446b9a4b6:
      alignment: left
      content: Duplicate of the first service
      positions: [366, 126]
    b6e20ed0-9419-4755-942d-77ba613c4370:
      alignment: left
      content: "Run command \"dir enms_files\", use negative logic to\r\nmake sure\
        \ that \"netmiko_file\" is not in the output."
      positions: [-329, 141]
  last_modified: '2022-01-16 05:38:23.167263'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Netmiko File Transfer Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Netmiko File Transfer Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Netmiko File Transfer Service]
      Check no file in enms_files directory', '[(R) Netmiko File Transfer Service]
      Transfer netmiko_file', '[(R) Netmiko File Transfer Service] Check file in directory',
    '[(R) Netmiko File Transfer Service] Delete netmiko_file', '[(R) Netmiko File
      Transfer Service] Check netmiko_file is deleted']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: netmiko_file
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: a3c540d0-9816-49bb-a2d9-75978ba89fb3
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-05 04:40:21.372109'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko File Transfer Service] Check no file in enms_files directory'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko File Transfer Service: &id363 [-346, 74]
    Netmiko File Transfer: *id363
    'Regression Workflow: Netmiko File Transfer': *id363
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Check no file in enms_files directory
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  completion_time: 1
  config_mode: false
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 6051d502-e0d6-407e-a6f2-46d02f342983
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  destination_file: enms_files/netmiko_file
  device_query: ''
  device_query_property: name
  dict_match: {}
  direction: put
  disable_md5: false
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  fast_cli: false
  file_system: ''
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  inline_transfer: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-05 04:44:03.619111'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko File Transfer Service] Transfer netmiko_file'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  overwrite_file: false
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko File Transfer Service: &id364 [-138, -122]
    Netmiko File Transfer: *id364
    'Regression Workflow: Netmiko File Transfer': *id364
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Transfer netmiko_file
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_file: /media/sf_shared/eNMS/tests/file_transfer/a.bin
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: netmiko_file_transfer_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: netmiko_file
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 72f3b7dd-fe02-4157-bd7f-e28577578dc5
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-05 04:44:29.075333'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko File Transfer Service] Check file in directory'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko File Transfer Service: &id365 [13, 69]
    Netmiko File Transfer: *id365
    'Regression Workflow: Netmiko File Transfer': *id365
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Check file in directory
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: delete enms_files/netmiko_file
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: f3c9afdc-408c-4d56-bf8a-d394eee58c02
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-05 05:27:08.100508'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko File Transfer Service] Delete netmiko_file'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko File Transfer Service: &id366 [196, -120]
    Netmiko File Transfer: *id366
    'Regression Workflow: Netmiko File Transfer': *id366
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Delete netmiko_file
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: dir enms_files
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: netmiko_file
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 18c4131f-f1b7-44f3-8a4a-c1d5d1526dfb
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-05 05:27:56.885680'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko File Transfer Service] Check netmiko_file is deleted'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko File Transfer Service: &id367 [358, 66]
    Netmiko File Transfer: *id367
    'Regression Workflow: Netmiko File Transfer': *id367
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Check netmiko_file is deleted
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Global Variables
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: e009591c-3991-48eb-a62a-b76a7314893f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    618b2b51-3ce9-444a-b2e4-8c7e58b980bd:
      alignment: left
      content: "Service in \"run once\" mode. Uses \"get_credential\" to\r\nretrieve\
        \ a non-device credential which passwords\r\nshould evaluate to \"ip interface\
        \ brief\". Uses password\r\nwith substitution for netmiko command.\r\nService\
        \ should pass for two devices (Washington, Austin)\r\nand fail for PaloAlto\
        \ (unreachable, wrong IP)."
      positions: [21, 244]
    8347b493-1682-4d0b-b223-8353f0f8c799:
      alignment: left
      content: "This workflow checks that device and non-device credentials can be\r\
        \nretrieved with the get_credential global function.\r\nIt should be run both\
        \ with admin and non-admin users to make sure that\r\nit fails when users\
        \ don't have access to credentials.\r\nWhenever get_credential is used, the\
        \ subsequent log should be obfuscated\r\nin netmiko validation and rest services."
      positions: [154, 10]
    cf8ec96a-b1db-4627-bda8-75d6feecd29d:
      alignment: left
      content: "Uses \"get_credential\" in python snippet to get\r\ndevice credential.\r\
        \nAdd credentials to result dict for all devices.\r\nAll 3 devices should\
        \ pass."
      positions: [-341, 117]
    e977a4d0-ee1b-4daf-aea6-6ebab0695021:
      alignment: left
      content: "Uses get_credential as part of Rest Call URL.\r\nResulting should\
        \ be obfuscated in both logs and results.\r\nThe credential password should\
        \ evaluate to \"is_alive\"\r\nmaking the resulting URL valid.\r\n2 devices,\
        \ both PASS."
      positions: [457, 201]
  last_modified: '2022-01-16 05:35:27.565228'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Function: get_credential'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: 'Function: get_credential'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Function: get_credential] Get device
      credential', '[Function: get_credential] Show interface via get_credential',
    '[Function: get_credential] Rest Call with get_credential']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto, Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 062317e1-3001-42c9-8eac-f9d9ed27b438
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-05 23:05:06.611016'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Function: get_credential] Get device credential'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Function: get_credential': &id368 [-315, 9]
    Global get_credential Function and Log Obfuscation: *id368
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id368
    get_credential Function: *id368
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get device credential
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"credentials\"] = get_credential(device=device)\r\
    \nresults[\"result\"] = result\r\n"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show {{get_credential(name="Non Device Credential")["password"]}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: f8081a06-d639-43fb-b12e-b5c73e36fc37
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-06 00:00:22.948685'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Function: get_credential] Show interface via get_credential'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Function: get_credential': &id369 [14, 146]
    Global get_credential Function and Log Obfuscation: *id369
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id369
    get_credential Function: *id369
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show interface via get_credential
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 288f9aa0-5fc8-460b-9f4b-d525593ddf40
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-06 01:05:00.094390'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Function: get_credential] Rest Call with get_credential'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    'Function: get_credential': &id370 [447, 101]
    Global get_credential Function and Log Obfuscation: *id370
    'Regression Workflow: Global get_credential Function and Log Obfuscation': *id370
    get_credential Function: *id370
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/{{get_credential(name="Non Device Credential
    - 2")["password"]}}
  run_method: per_device
  scoped_name: Rest Call with get_credential
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Skip Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: ebf92d5c-3791-4b2c-8c0f-3c395e75a1ae
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    79e47a4f-96d6-42bd-8b4c-139812b9bfef:
      alignment: left
      content: "This workflows has run method set to SxS with service targets.\r\n\
        It tests that the following mechanism work properly :\r\n- run once / once\
        \ per device\r\n- skip, both global and per device with skip query"
      positions: [83, 219]
    907fa070-7150-4303-aa0b-848bacc48a68:
      alignment: left
      content: "Run on 4 devices. Austin fails (expected: 3 PASS, 1 FAIL)\r\nShould\
        \ follow both success and failure edges, because\r\nthese edges don't matter\
        \ in that mode."
      positions: [-290, 440]
    91c62455-9d20-4c77-8596-348d4f6a9f02:
      alignment: left
      content: "Run on 4 devices. Two devices are skipped based on name\r\nvia device\
        \ query: Washington, NewYork.\r\nExpected in display: 2 PASS, 2 SKIP."
      positions: [353, 439]
    c8c22a6e-8497-4293-a333-3df8e67d59cb:
      alignment: left
      content: "Set to run on pool \"All devices\" in run once mode.\r\nIncludes a\
        \ log set to \"should appear only once\".\r\nCheck in log that it does appear\
        \ only once."
      positions: [459, 100]
  last_modified: '2022-01-20 06:30:16.255974'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Skip in SxS with service targets and Run Once services
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Skip in SxS with service targets and Run Once services
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Skip in SxS with service targets
      and Run Once services] Once per device', '[Skip in SxS with service targets
      and Run Once services] Skip Query', '[Skip in SxS with service targets and Run
      Once services] Global Skip', '[Skip in SxS with service targets and Run Once
      services] Run Once with Pool']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 1cd5d8ec-28f0-494b-a5bf-ae9674c423cd
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-08 00:49:08.620371'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip in SxS with service targets and Run Once services] Once per device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id371 [-361,
      360]
    Skip in SxS with service targets and Run Once services: *id371
    SxS Service Targets with Run Once + Skip: *id371
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Once per device
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = device.name != \"Austin\"\r\nresults[\"\
    result\"] = result"
  target_devices: [PaloAlto, Austin, Washington, Chicago]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: cdee2c89-f355-4408-9037-e497382d204f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-08 00:52:11.438159'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip in SxS with service targets and Run Once services] Skip Query'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id372 [267,
      355]
    Skip in SxS with service targets and Run Once services: *id372
    SxS Service Targets with Run Once + Skip: *id372
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Skip Query
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: device.name in ("Washington", "NewYork")
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: [Washington, SanDiego, Dallas, NewYork]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 95fc2cb6-8002-44cc-b5e3-9a8cb21b217b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-08 00:54:36.888282'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip in SxS with service targets and Run Once services] Global Skip'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id373 [-201,
      121]
    Skip in SxS with service targets and Run Once services: *id373
    SxS Service Targets with Run Once + Skip: *id373
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Global Skip
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'Regression Workflow: SxS Service Targets with Run Once + Skip': true}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 81503948-913e-4f39-96bf-031ab06fdf05
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-08 00:57:57.869317'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Skip in SxS with service targets and Run Once services] Run Once with Pool'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Regression Workflow: SxS Service Targets with Run Once + Skip': &id374 [429,
      170]
    Skip in SxS with service targets and Run Once services: *id374
    SxS Service Targets with Run Once + Skip: *id374
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Run Once with Pool
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nlog(\"warning\", \"Should appear only ONCE\")\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: [All Devices]
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 86105a06-2aa8-405e-b5dc-4d9a9a37ff7d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-16 05:10:21.356449'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Data Extraction Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Data Extraction Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Data Extraction Service] Initialize
      Variables', '[Data Extraction Service] String Extraction', '[Data Extraction
      Service] Dict Definition', '[Data Extraction Service] Dict Update', '[Data Extraction
      Service] String Replacement', '[Data Extraction Service] List Definition', '[Data
      Extraction Service] List Append', '[Data Extraction Service] List Extend', '[Data
      Extraction Service] Operation via set_var']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [PaloAlto]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 0b629ea2-9629-4a17-8b0e-1e2d0e4af061
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:13:25.555454'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] Initialize Variables'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id375 [-521, 287]
    'Regression Workflow: Data Extraction Service': *id375
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Initialize Variables
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nset_var(\"string\", \"test\")\r\nset_var(\"string2\", \"test2\")\r\nset_var(\"\
    string3\", \"test3\")\r\nset_var(\"dict\", {\"a\": \"b\"})\r\nset_var(\"dict2\"\
    , {1: [2, 3]})\r\nset_var(\"list\", [1, \"4\"])\r\nset_var(\"list2\", [2, (\"\
    trois\",)])\r\nset_var(\"list3\", [\"5\", {\"6\"}])\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: e8d199ec-f2fa-4b60-bceb-2d908156aa6b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 05:10:39.268087'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] String Extraction'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id376 [-410, 425]
    'Regression Workflow: Data Extraction Service': *id376
  postprocessing: results["success"] = var1 == "test"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  query1: get_var("string")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: String Extraction
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var1
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 113c3aff-9413-49ab-aee3-e4cb06614a22
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 05:11:13.766271'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] Dict Definition'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id377 [-102, 128]
    'Regression Workflow: Data Extraction Service': *id377
  postprocessing: 'results["success"] = var2 == {"a": "b"}'
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  query1: get_var("dict")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dict Definition
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var2
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 3b6f3b2d-d165-4b7e-bb98-c4715c614a77
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 05:11:32.486632'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] Dict Update'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: update
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id378 [-201, 416]
    'Regression Workflow: Data Extraction Service': *id378
  postprocessing: 'results["success"] = var2 == {"a": "b", 1: [2, 3]}'
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  query1: get_var("dict2")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Dict Update
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var2
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 0752cae2-ce34-49f2-b7d6-032592e53f27
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:10:33.736633'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] String Replacement'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id379 [-307, 222]
    'Regression Workflow: Data Extraction Service': *id379
  postprocessing: results["success"] = var1 == "test2"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  query1: get_var("string2")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: String Replacement
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var1
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: a95ffb54-f277-4827-8d8d-995eb40e1c75
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:14:26.174039'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] List Definition'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id380 [-1, 512]
    'Regression Workflow: Data Extraction Service': *id380
  postprocessing: results["success"] = var3 == [1, "4"]
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  query1: get_var("list")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: List Definition
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var3
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: adb983e7-e211-4136-9974-5c6200c31ebb
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:16:33.711176'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] List Append'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: append
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id381 [31, 308]
    'Regression Workflow: Data Extraction Service': *id381
  postprocessing: results["success"] = var3 == [1, "4", [2, ("trois",)]]
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  query1: get_var("list2")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: List Append
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var3
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 84deb523-bae4-4208-850c-50ddded3af6e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:17:24.516441'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] List Extend'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: extend
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id382 [159, 138]
    'Regression Workflow: Data Extraction Service': *id382
  postprocessing: results["success"] = var3 == [1, "4", [2, ("trois",)], "5", {"6"}]
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  query1: get_var("list3")
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: List Extend
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: var3
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: de6c8bac-6b3c-46ae-aa09-ebfeba55bc6b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-10 10:27:45.384542'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Service] Operation via set_var'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Service: &id383 [274, 366]
    'Regression Workflow: Data Extraction Service': *id383
  postprocessing: "string_validation = var1 == \"test4\"\r\ndict_validation = var2\
    \ == {\"a\": \"b\", 1: [2, 3], \"4\": 8}\r\nlist_validation = var3 == [1, \"4\"\
    , [2, (\"trois\",)], \"5\", {\"6\"}, (\"b\",), 5, \"huit\"]\r\n\r\nresults[\"\
    success\"] = string_validation and dict_validation and list_validation\r\n"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Operation via set_var
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    set_var(\"var1\", \"test4\", device=device.name)\r\nset_var(\"var2\", {\"4\":\
    \ 8}, operation=\"update\", device=device.name)\r\nset_var(\"var3\", [(\"b\",),\
    \ 5], operation=\"extend\", device=device.name)\r\nset_var(\"var3\", \"huit\"\
    , operation=\"append\", device=device.name)\r\n\r\nresult = {}\r\nresults[\"success\"\
    ] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Superworkflows
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 0d0eae12-1c08-4caa-965b-c2e92476e65d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: '["NewYork", "Atlanta"]'
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    506f2796-55f8-4ddb-849c-c2229459838e:
      alignment: left
      content: "When running a superworkflow, the targets should come\r\nfrom the\
        \ workflow itself and not the from the superworkflow.\r\nWith a parameterized\
        \ run, the targets should come from the run.\r\nThe same principles should\
        \ apply when defining targets\r\nfrom the device query field."
      positions: [-122, -177]
    9b543e1d-204c-45a2-bcb2-9619959a4924:
      alignment: left
      content: "The service targets are set to:\r\n- PaloAlto, Austin for devices\
        \ field\r\n- Washington Pool\r\n- [\"NewYork\", \"Atlanta\"] for device query\
        \ field\r\n=> Should run on 5 devices without parameterized run"
      positions: [183, 77]
    cd8dd28f-bb19-4951-b208-b39a3c0f0571:
      alignment: left
      content: "The parameterized also contains a variable \"endpoint\" that\r\nis\
        \ used in the REST call service of the superworkflow, to make\r\nsure that\
        \ parameterized form variables can be accessed as\r\nglobal variable in a\
        \ superworkflow."
      positions: [374, -186]
  last_modified: '2022-01-20 07:30:44.284827'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: true
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Parameterized Run with a Superworkflow
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\nendpoint =\
    \ StringField('Endpoint', [InputRequired()], default=\"is_alive\")\r\ntarget_devices\
    \ = MultipleInstanceField('Devices', model='device')\r\ntarget_pools = MultipleInstanceField('Pools',\
    \ model='pool')\r\ndevice_query = StringField('Device Query', python=True, widget=TextArea(),\
    \ render_kw={'rows': 2})\r\ndevice_query_property = SelectField('Query Property\
    \ Type', choices=(('name', 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing\
    \ = BooleanField('Multiprocessing', default=False)\r\nmax_processes = IntegerField('Maximum\
    \ number of processes', default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Parameterized Run with a Superworkflow
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Parameterized Run with a Superworkflow]
      Service']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  superworkflow: Superworkflow in SxS w WT with Run Once service
  target_devices: [PaloAlto, Austin]
  target_pools: [Washington]
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 37bdd30a-ce24-47cb-ad06-b7c8a75db44b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-11 01:00:17.856199'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Parameterized Run with a Superworkflow] Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Parameterized Run with a Superworkflow: &id384 [142, -32]
    Parameterized Superworkflow Run: *id384
    'Regression Workflow: Parameterized Superworkflow Run': *id384
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Superworkflows
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 57405649-e3ea-4c11-9016-28ab4e6391d4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    3f6ef0e9-5294-4f04-afc1-187779271fe1:
      alignment: left
      content: "Called by \"Regression Workflow: Parameterized Superworkflow Run\"\
        .\r\nTests that devices configured from a parameterized run works \r\nas expected\
        \ when a workflow has a superworkflow."
      positions: [165, -41]
  last_modified: '2022-01-16 05:16:43.759975'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Superworkflow in SxS w WT with Run Once service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Superworkflow in SxS w WT with Run Once service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Superworkflow in SxS w WT with Run
      Once service] Call to is_alive, Run Once', '[Shared] Placeholder']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: d304cf9b-d467-43a7-9f19-018c80ef1ca6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-07-30 02:04:57.739986'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Superworkflow in SxS w WT with Run Once service] Call to is_alive, Run Once'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {verify: 'false'}
  payload: {}
  pools: [Everything]
  positions:
    'Regression Workflow: Superworkflow in SxS w WT with Run Once service': &id385 [
      -101, 129]
    Superworkflow in SxS w WT with Run Once service: *id385
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://127.0.0.1:5000/rest/{{ endpoint }}
  run_method: once
  scoped_name: Call to is_alive, Run Once
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show interface {{interface}}
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 0f65ced9-2cfa-468f-8298-13098dcdab0a
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: false
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-29 10:42:45.467689'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Labels and Custom Property] Show inteface as global variable'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Labels and Custom Property: [435, 130]
    Parameterized Form (override labels & targets, add payload): &id386 [435, 118]
    'Regression Workflow: Parameterized Form (override labels & targets, add payload)': *id386
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Show inteface as global variable
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 81cb7c54-6fd4-4b41-9536-f7503dfcf277
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    5b4eb4ba-e756-4834-ac39-05d174521efe:
      alignment: left
      content: "This last command isn't supported by the use_textfsm option (there\
        \ is\r\nno associated textFSM template) so with the option enabled, netmiko\r\
        \nshould default to displaying the output as a string."
      positions: [362, 221]
    7a0fb787-f5a8-4fb7-be2b-addc0e139522:
      alignment: left
      content: "This workflow uses netmiko \"use_textfsm\" option to automatically\r\
        \nconvert the output from a string to a dictionary (structured data).\r\n\
        This only works for specific commands, when there is an associated\r\nTextFSM\
        \ template available."
      positions: [168, -111]
  last_modified: '2022-01-16 05:38:53.223357'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Netmiko Validation with TextFSM Option
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Netmiko Validation with TextFSM Option
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Netmiko Validation with TextFSM
      Option] show ip int brief', '[(R) Netmiko Validation with TextFSM Option] show
      version', '[(R) Netmiko Validation with TextFSM Option] show arp', '[(R) Netmiko
      Validation with TextFSM Option] show lldp neighbor']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show ip int brief
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 86475764-3320-4806-bc29-93dc164b86ee
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-30 10:12:09.146619'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Validation with TextFSM Option] show ip int brief'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Validation with TextFSM Option: &id387 [-132, -29]
    Netmiko TextFSM Option: *id387
    'Regression Workflow: Netmiko TextFSM Option': *id387
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: show ip int brief
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show version
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: fc8c63e8-c3f7-47dc-b150-18b6b9971bb5
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-30 10:16:08.282657'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Validation with TextFSM Option] show version'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Validation with TextFSM Option: &id388 [-28, 186]
    Netmiko TextFSM Option: *id388
    'Regression Workflow: Netmiko TextFSM Option': *id388
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: show version
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show arp
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: b4b3b95b-34c5-4279-a6c7-d416989bc97f
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-30 10:16:29.599494'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Validation with TextFSM Option] show arp'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Validation with TextFSM Option: &id389 [316, 137]
    Netmiko TextFSM Option: *id389
    'Regression Workflow: Netmiko TextFSM Option': *id389
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: show arp
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show lldp neighbor
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 1088b834-3df5-43e9-b351-08ecd7d39ace
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-07-30 10:16:44.791787'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Netmiko Validation with TextFSM Option] show lldp neighbor'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Netmiko Validation with TextFSM Option: &id390 [269, -27]
    Netmiko TextFSM Option: *id390
    'Regression Workflow: Netmiko TextFSM Option': *id390
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: show lldp neighbor
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: true
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: d8fc159d-46b4-4f54-9362-a9cb7ec97db5
  definition: Definition
  delete_spaces_before_matching: false
  description: Create and delete a VRF with Napalm
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    8108225c-9e1a-4f57-af77-e8076c8641c9:
      alignment: left
      content: "This workflow tests :\r\n- The configuration and rollback mechanism\
        \ with Napalm\r\n- The connection cache mechanism. Both netmiko and napalm\
        \ connections\r\nmust be closed at the end of the workflow"
      positions: [-121, -29]
  last_modified: '2022-01-16 05:08:01.192249'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: (R) NAPALM Configuration and Rollback Services
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) NAPALM Configuration and Rollback Services
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) NAPALM Configuration and Rollback
      Services] Create a VRF with NAPALM', '[(R) NAPALM Configuration and Rollback
      Services] Rollback Configuration with NAPALM', '[(R) NAPALM Configuration and
      Rollback Services] Check VRF is not configured with Netmiko', '[(R) NAPALM Configuration
      and Rollback Services] Check VRF exists with Netmiko']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  action: load_merge_candidate
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content: "vrf instance napalm\r\n"
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 1ca6fb82-5f8e-49db-9fcc-3c0e32bc7fed
  definition: Definition
  delete_spaces_before_matching: false
  description: Create a VRF "test" with Napalm
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-11-18 08:25:59.346737'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NAPALM Configuration and Rollback Services] Create a VRF with NAPALM'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NAPALM Configuration and Rollback Services: &id391 [-374, -164]
    NAPALM Configuration and Rollback: *id391
    'Regression Workflow: VRF Creation and Deletion with Napalm': *id391
    VRF Creation and Deletion with Napalm: *id391
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id391
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id391
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id391
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Create a VRF with NAPALM
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10
  type: napalm_configuration_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 62d71c5d-76b3-44d2-8993-8f3acd5abed4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-11-18 08:26:18.990107'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NAPALM Configuration and Rollback Services] Rollback Configuration with
    NAPALM'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NAPALM Configuration and Rollback Services: &id392 [287, 136]
    NAPALM Configuration and Rollback: *id392
    'Regression Workflow: VRF Creation and Deletion with Napalm': *id392
    VRF Creation and Deletion with Napalm: *id392
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id392
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id392
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id392
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Rollback Configuration with NAPALM
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_rollback_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: napalm
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 78799b0d-208c-4dba-b1d6-35facc0f053f
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-11-18 08:26:08.788541'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NAPALM Configuration and Rollback Services] Check VRF exists with Netmiko'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NAPALM Configuration and Rollback Services: &id393 [267, -146]
    NAPALM Configuration and Rollback: *id393
    'Regression Workflow A: get_var, set_var, get_result': ['266', '161']
    'Regression Workflow C: Advanced multiprocessing': [123, -187]
    'Regression Workflow: VRF Creation and Deletion with Napalm': *id393
    VRF Creation and Deletion with Napalm: *id393
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id393
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id393
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id393
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Check VRF exists with Netmiko
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: show vrf
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: napalm
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: ce74aa50-a3ce-4f0d-aa7a-a74146d75333
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2019-11-18 08:26:31.713881'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) NAPALM Configuration and Rollback Services] Check VRF is not configured
    with Netmiko'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) NAPALM Configuration and Rollback Services: &id394 [-348, 160]
    NAPALM Configuration and Rollback: *id394
    'Regression Workflow: VRF Creation and Deletion with Napalm': *id394
    VRF Creation and Deletion with Napalm: *id394
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow 5: VRF creation and deletion with Napalm': *id394
    '[Regression Workflow F: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id394
    '[Regression Workflow: Workflow of Workflows] Regression Workflow: VRF Creation and Deletion with Napalm': *id394
    iteration_devices_workflow: ['245', '32']
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Check VRF is not configured with Netmiko
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: e70f7bfc-d489-45d6-9f53-908d03f1e905
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    006272de-91a4-49e0-9b54-9cab6e6f8768:
      alignment: center
      content: "Dictionary Inclusion Validation + Variable substitution :\r\n{\"{{device.ip_address}}\"\
        :{\"prefix_length\":24}}"
      positions: [611, 218]
    187d6918-c286-42d7-a803-e97e05978f3e:
      alignment: center
      content: "Dictionary Inclusion Validation:\r\n{\"fqdn\":\"localhost\",\"vendor\"\
        :\"Arista\"}"
      positions: [4, -188]
    213083b1-d7f0-4638-98aa-ca097fa10603:
      alignment: left
      content: "Dictionary Equality Validation: {\"is_alive\":{\"is_alive\":true}}\r\
        \nWashington must pass, but Austin will fail (napalm timeout has\r\nbeen brought\
        \ down to 1 to not wait too long).\r\n"
      positions: [-391, -186]
    4d62e069-5dfd-4e6d-b418-8c273a750b06:
      alignment: left
      content: "This workflow is running on two target_devices: Washington (vEOS)\
        \ and Austin (dummy).\r\nIt uses NAPALM to retrieve data from a device and\
        \ the validation mechanism.\r\nTo be tested with and without multiprocessing."
      positions: [-13, 4]
    a5c335bc-dced-4512-b5bc-1149ea7eec73:
      alignment: left
      content: "Dictionary Inclusion Validation:\r\n{\"fqdn\":\"localhost\",\"uptime\"\
        :\"666\",\"vendor\":\"Arista\"}\r\nThis service is expected to fail, because\
        \ this uptime is different from 666."
      positions: [584, -212]
    f33d8c65-c691-4aef-ae87-6bcd20a69a11:
      alignment: center
      content: "Test the \"Negative logic\" parameter.\r\nThe validation is set to\
        \ \"Dictionary Equality\" and the match is \r\nan empty dictionary. This shouldn't\
        \ match, but the negative logic\r\nis set to True, so the resulting value\
        \ is a success."
      positions: [-79, 230]
  last_modified: '2022-01-16 05:11:24.548696'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: (R) Napalm Getters Service
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Napalm Getters Service
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Napalm Getters Service] Getters
      Workflow: get facts', '[(R) Napalm Getters Service] Getters Workflow: MAC address',
    '[(R) Napalm Getters Service] Getters Workflow: get facts failed match', '[(R)
      Napalm Getters Service] Getters Workflow: is alive', '[Shared] Getters Workflow:
      Interface IP']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 8b8c3feb-8e37-4d83-b644-61f3f779b57d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match:
    is_alive: {is_alive: true}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  getters: [is_alive]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 10:37:14.672735'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Napalm Getters Service] Getters Workflow: is alive'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Napalm Getters Service: &id395 [-405, -99]
    Napalm Getters Validation: *id395
    'Regression Workflow: Napalm Getters Validation': *id395
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id395
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id395
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id395
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id395
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: is alive'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 1
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_equal
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 00227f4d-e2a3-407b-aa6b-59ae8f1cdfc3
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {fqdn: localhost, vendor: Arista}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  getters: [get_facts]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-06 22:20:19.161043'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Napalm Getters Service] Getters Workflow: get facts'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Napalm Getters Service: &id396 [18, -122]
    Napalm Getters Validation: *id396
    'Regression Workflow: Napalm Getters Validation': *id396
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id396
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id396
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id396
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id396
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: get facts'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 136120e6-ebc7-432c-95c0-d757db0779a7
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  getters: [get_mac_address_table]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-06 23:40:55.348647'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Napalm Getters Service] Getters Workflow: MAC address'
  negative_logic: true
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Napalm Getters Service: &id397 [-45, 144]
    Napalm Getters Validation: *id397
    'Regression Workflow: Napalm Getters Validation': *id397
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id397
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id397
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id397
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id397
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: MAC address'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_equal
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  close_connection: false
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 4683e551-971c-465b-b145-d82080827384
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {fqdn: localhost, uptime: '666', vendor: Arista}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  getters: [get_facts]
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-10-04 10:40:41.939110'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Napalm Getters Service] Getters Workflow: get facts failed match'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  optional_args: {}
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Napalm Getters Service: &id398 [535, -147]
    Napalm Getters Validation: *id398
    'Regression Workflow: Napalm Getters Validation': *id398
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow B: Napalm getters validation'
    : *id398
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow B: Napalm getters validation'
    : *id398
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id398
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Napalm Getters Validation'
    : *id398
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Getters Workflow: get facts failed match'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 60
  type: napalm_getters_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Payload
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: c2765d15-ce64-4ea9-99da-8091208a200c
  definition: Definition
  delete_spaces_before_matching: false
  description: Test the payload extraction and validation mechanisms
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0593f20c-240e-4846-b37e-c03bd4630516:
      alignment: left
      content: "After this service, we no longer use the netmiko connection,\r\nso\
        \ we set \"Close connection\" to true for that service.\r\nCheck that when\
        \ running the service, the connection is indeed\r\nclosed after that service.\r\
        \nThe service is configured with notification enabled, to test service\r\n\
        notification INSIDE a workflow."
      positions: [-352, -81]
    20a6a733-4b79-4390-bf2b-ad05dbd6855f:
      alignment: center
      content: "Validate the result with the regex :\r\n(\\d\\.){3}\\d"
      positions: [-51, 365]
    3844a73f-340f-4b7a-9893-50c5b79998d9:
      alignment: center
      content: "Check that the \"textfsm_variable\" in the payload\r\ncan be matched\
        \ with the \"(\\d\\.){3}\\d\" regular expression."
      positions: [794, 255]
    52d15bff-498b-462d-843c-a23199073858:
      alignment: center
      content: "Check that the results contains the dictionary\r\n{\"value\":[\"1.1.1.1\"\
        ,\"2.2.2.2\",\"3.3.3.3\"]}\r\n"
      positions: [-351, 32]
    55b1e05d-4d84-4227-8774-65cf7ffd992f:
      alignment: center
      content: "Check that the \"regex_variable\" variable\r\nin the payload contains\
        \ the dictionary\r\n{\"value\":[\"1.1.1.1\",\"2.2.2.2\",\"3.3.3.3\"]}\r\n"
      positions: [480, -121]
    cf55f702-da90-466f-9ee6-9e207a0b4808:
      alignment: left
      content: "This workflow uses netmiko to run a \"show ip route\", and a \"Payload\
        \ Extraction\" service to\r\nextract data with regular expression and TextFSM.\r\
        \nThat extracted information is stored both in the workflow payload and the\
        \ results of the extraction\r\nservice :\r\n- the left side of the workflow\
        \ uses the \"get_result\" method to retrieve the results and validate them.\r\
        \n- the right side uses \"get_var\" to extract data from the payload and validate\
        \ it.\r\nThis workflow is also used to test the RESTART mechanism. It must\
        \ be restarted from both\r\nthe left side (validate via result) and the right\
        \ side (validate via payload) to check that\r\nan older payload / result can\
        \ be retrieved from the database."
      positions: [306, 116]
  last_modified: '2022-01-20 06:30:32.689622'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Payload Extraction & Validation
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Payload Extraction & Validation
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Payload Extraction & Validation]
      Payload Extraction', '[Payload Extraction & Validation] Validation dict via
      results', '[Payload Extraction & Validation] Validate dict via payload', '[Payload
      Extraction & Validation] Validate text via payload', '[Payload Extraction &
      Validation] Validate text via results', '[Payload Extraction & Validation] netmiko_show_ip_route']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  auto_find_prompt: true
  close_connection: true
  commands: show ip route
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: text
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 3983764b-b4e5-4ad1-a552-a7e46efc50aa
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: Show IP route
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  driver: device
  enable_mode: true
  exit_command: ''
  expect_password_prompt: ''
  expect_prompt: ''
  expect_string: ''
  expect_username_prompt: ''
  fast_cli: true
  global_delay_factor: 1.0
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ''
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2021-12-30 03:59:55.217474'
  log_level: 1
  mail_recipient: antoine.fourmy@gmail.com
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] netmiko_show_ip_route'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: EOS
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction & Validation: [-18, -145]
    'Regression Workflow: Payload Extraction & Validation': &id399 [49, -207]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id399
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id399
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id399
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id399
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: netmiko_show_ip_route
  send_notification: true
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 3.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: Arista
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 8b5c581a-9e6a-4b40-a78d-096d7e363901
  definition: Definition
  delete_spaces_before_matching: false
  description: Payload Variables Extraction with Regex/TextFSM
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: true
  impacting: true
  include_device_results: true
  include_link_in_summary: true
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: ip_address
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-06 01:33:43.013667'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: (\d.*)/32
  match3: "Value Filldown PROTOCOL (\\S+\\s\\S+?|\\w?)\r\nValue Filldown NETWORK (\\\
    d+.\\d+.\\d+.\\d+)\r\nValue Filldown MASK (\\d+)\r\nValue DISTANCE (\\d+)\r\n\
    Value METRIC (\\d+)\r\nValue DIRECT (directly)\r\nValue Required NEXT_HOP (connected|\\\
    d+\\.\\d+\\.\\d+\\.\\d+)\r\nValue INTERFACE (\\S+)\r\n\r\nStart\r\n  ^\\s+${PROTOCOL}\\\
    s+${NETWORK}/${MASK}\\s+(?:\\[${DISTANCE}/${METRIC}\\]|is\\s+${DIRECT})(?:.+?)${NEXT_HOP},\\\
    s+${INTERFACE}$$ -> Next.Record"
  match_type1: none
  match_type2: regex
  match_type3: textfsm
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: true
  name: '[Payload Extraction & Validation] Payload Extraction'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction & Validation: [-19, -26]
    'Regression Workflow: Payload Extraction & Validation': &id400 [130, -95]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id400
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id400
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id400
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id400
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  query1: get_result("netmiko_show_ip_route", device.name)["success"]
  query2: get_result("netmiko_show_ip_route", device.name)["result"]
  query3: get_result("netmiko_show_ip_route", device=device.name)["result"]
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Payload Extraction
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: simple_variable
  variable2: regex_variable
  variable3: textfsm_variable
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 04cb9770-71d0-4a9c-8521-f1730ebcc94a
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match:
    value: [1.1.1.1, 2.2.2.2, 3.3.3.3]
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 10:36:54.411888'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] Validation dict via results'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction & Validation: [-362, 111]
    'Regression Workflow: Payload Extraction & Validation': &id401 [-338, -9]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id401
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id401
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id401
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id401
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation dict via results
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_result(\"Payload Extraction\", device.name)[\"result\"][\"regex_variable\"\
    ]"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: (\d\.){3}\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: b8722986-bbc0-4479-96c2-9e15af9d2891
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-16 06:56:21.199478'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] Validate text via results'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction & Validation: [-124, 296]
    'Regression Workflow: Payload Extraction & Validation': &id402 [-236, 214]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id402
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id402
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id402
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id402
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validate text via results
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_result(\"Payload Extraction\", device.name)[\"result\"][\"textfsm_variable\"\
    ][\"value\"][0][1]"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 28b7ea42-1ec6-4555-9f9b-07a010a04a1e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match:
    value: [1.1.1.1, 2.2.2.2, 3.3.3.3]
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-07-23 10:40:12.634239'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] Validate dict via payload'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction & Validation: [451, -43]
    'Regression Workflow: Payload Extraction & Validation': &id403 [679, -114]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id403
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id403
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id403
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id403
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validate dict via payload
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = {\"value\": get_var(\"regex_variable\", device=device.name)}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: (\d\.){3}\d
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 4116aeed-19a7-4c81-a165-0781c6fda789
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-16 06:57:42.629334'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction & Validation] Validate text via payload'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction & Validation: [808, 157]
    'Regression Workflow: Payload Extraction & Validation': &id404 [808, 157]
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 7: Payload Extraction & Validation'
    : *id404
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 7: Payload Extraction & Validation'
    : *id404
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id404
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction & Validation'
    : *id404
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validate text via payload
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_var(\"textfsm_variable\", device=device.name)[0][1]"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  category: Payload
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: dfafdf42-16f2-4040-aadc-24aa34acc0ac
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-20 06:30:38.049079'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 5
  maximum_runs: 1
  multiprocessing: false
  name: Payload Extraction with Operations
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Payload Extraction with Operations
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Shared] Getters Workflow: Interface
      IP', '[Payload Extraction with Operations] Payload Workflow: Add initial variables',
    '[Payload Extraction with Operations] Payload Workflow: Extraction 1', '[Payload
      Extraction with Operations] Payload Workflow: Extraction 2', '[Payload Extraction
      with Operations] Validation 1', '[Payload Extraction with Operations] Validation
      2']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: c35a1925-6893-4f16-907a-731c1bbb61d6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:42:49.512906'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: true
  name: '[Payload Extraction with Operations] Payload Workflow: Add initial variables'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction with Operations: &id405 [118, -243]
    'Regression Workflow: Payload Extraction with Operations': *id405
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id405
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id405
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id405
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id405
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Payload Workflow: Add initial variables'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"list\", [1, 2], device=device.name)\r\nset_var(\"dict\"\
    , {\"a\": [\"o\", True, 4]}, device=device.name)\r\nsave_result(success=True,\
    \ result={})"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: f6eca74e-1e95-4be2-bd90-de96112134f0
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:42:55.692116'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: true
  name: '[Payload Extraction with Operations] Payload Workflow: Extraction 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: append
  operation3: update
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction with Operations: &id406 [619, -236]
    'Regression Workflow: Payload Extraction with Operations': *id406
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id406
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id406
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id406
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id406
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  query1: 'get_result("Getters Workflow: Interface IP", device=device.name)["negative_logic"]'
  query2: 'get_result("Getters Workflow: Interface IP", device=device.name)["negative_logic"]'
  query3: 'get_result("Getters Workflow: Interface IP", device=device.name)["match"]'
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Payload Workflow: Extraction 1'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: boolean
  variable2: list
  variable3: dict
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 6df3991c-14eb-439a-a0c6-4d230e68b830
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: ip_address
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: true
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2019-08-14 23:57:00.505853'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: ''
  match2: ''
  match3: ''
  match_type1: none
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: true
  name: '[Payload Extraction with Operations] Payload Workflow: Extraction 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: append
  operation2: extend
  operation3: update
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction with Operations: &id407 [600, 70]
    'Regression Workflow: Payload Extraction with Operations': *id407
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id407
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id407
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id407
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id407
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  query1: get_result("Start")["state"]["completed"]
  query2: get_result("Start")["logs"]
  query3: get_result("Start")["state"]
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: 'Payload Workflow: Extraction 2'
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  variable1: list
  variable2: list
  variable3: dict
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: \[1,2,False,1.*\]
  content_match_regex: true
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 1d19d210-3431-456d-801a-c3df2c629e01
  definition: Definition
  delete_spaces_before_matching: true
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-16 07:00:40.345141'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction with Operations] Validation 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction with Operations: &id408 [5, 75]
    'Regression Workflow: Payload Extraction with Operations': *id408
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id408
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id408
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id408
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id408
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_var(\"list\", device=device.name)"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: '{"a": ["o", True, 4], "prefix_length": 24, "failed": 0}'
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: f9eb49cc-79a0-491d-bfec-bccc80829e4d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2020-03-16 07:01:27.192118'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Extraction with Operations] Validation 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Extraction with Operations: &id409 [-461, 60]
    'Regression Workflow: Payload Extraction with Operations': *id409
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow F S1: Subworkflow
      of Workflow] Regression Workflow 8: Payload Extraction with Operations'
    : *id409
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow 8: Payload Extraction with Operations'
    : *id409
    ? '[[Regression Workflow F: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id409
    ? '[[Regression Workflow: Workflow of Workflows] Regression Workflow: Subworkflow
      of Workflows] Regression Workflow: Payload Extraction with Operations'
    : *id409
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Validation 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = get_var(\"dict\", device=device.name)"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Payload
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 4cd4e805-fa20-4b17-99a0-982435c2e75d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-20 06:31:21.249638'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Payload Recursive Conservation with Restart Mechanism
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Payload Recursive Conservation with Restart Mechanism
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Payload Recursive Conservation with
      Restart Mechanism] Set Payload and Result', '[Payload Recursive Conservation
      with Restart Mechanism] Get Payload 1', '[Payload Recursive Conservation with
      Restart Mechanism] Get Payload 2', '[Payload Recursive Conservation with Restart
      Mechanism] Get Result 1', '[Payload Recursive Conservation with Restart Mechanism]
      Get Result 2']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Jackson, Chicago]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 48b42965-7b8a-47e3-8718-7abd78875350
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:53:26.423950'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Recursive Conservation with Restart Mechanism] Set Payload and Result'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Recursive Conservation with Restart Mechanism: &id410 [-255, 25]
    Restart Mechanism, payload + results recursive conservation: *id410
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Set Payload and Result
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\nset_var(\"var1\", True)\r\nset_var(\"var2\", True)\r\n\r\nresult\
    \ = {\"result1\": True, \"result2\": True}\r\nresults[\"success\"] = True\r\n\
    results[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: ce17753a-8c75-41ef-b445-1e098fd2a814
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:53:39.468365'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Recursive Conservation with Restart Mechanism] Get Payload 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Recursive Conservation with Restart Mechanism: &id411 [36, -178]
    Restart Mechanism, payload + results recursive conservation: *id411
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Get Payload 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n\r\nresult = {}\r\nresults[\"success\"] = var1\r\nresults[\"result\"\
    ] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: d031f158-b694-4982-9590-e11fc5768025
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:53:55.979734'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Recursive Conservation with Restart Mechanism] Get Payload 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Recursive Conservation with Restart Mechanism: &id412 [394, -170]
    Restart Mechanism, payload + results recursive conservation: *id412
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Get Payload 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n\r\nresult = {}\r\nresults[\"success\"] = var2\r\nresults[\"result\"\
    ] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 389675e2-ec59-43e2-a17f-379406cd7f46
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:56:09.506269'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Recursive Conservation with Restart Mechanism] Get Result 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Recursive Conservation with Restart Mechanism: &id413 [77, 130]
    Restart Mechanism, payload + results recursive conservation: *id413
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Get Result 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n\r\nresult = {}\r\nresults[\"success\"] = get_result(\"Set Payload\
    \ and Result\")[\"result\"][\"result1\"]\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 491322d6-1413-46bb-8a4d-85d8c503c052
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-07 09:56:29.243853'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Payload Recursive Conservation with Restart Mechanism] Get Result 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Payload Recursive Conservation with Restart Mechanism: &id414 [410, 129]
    Restart Mechanism, payload + results recursive conservation: *id414
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Get Result 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n\r\nresult = {}\r\nresults[\"success\"] = get_result(\"Set Payload\
    \ and Result\")[\"result\"][\"result2\"]\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 5e99fae5-d8ec-4570-8cc2-e3c82d4a4e08
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: iteration_devices
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-08-21 05:52:57.359508'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Device Iteration] Iteration Devices from Predefined Variable'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: ''
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Device Iteration: &id415 [245, 25]
    'Iteration Mechanism: Device Iteration': *id415
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Iteration Devices from Predefined Variable
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Superworkflows
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 07c45fe2-d259-4a7c-a673-d46d17b0c1db
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-20 07:30:11.659211'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Interaction of Restart Mechanism and Superworkflow
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: [admin]
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Interaction of Restart Mechanism and Superworkflow
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Interaction of Restart Mechanism
      and Superworkflow] Service 1', '[Interaction of Restart Mechanism and Superworkflow]
      Service 2', '[Interaction of Restart Mechanism and Superworkflow] Service 3']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  superworkflow: Basic Superworkflow
  target_devices: [SanJose, SanDiego, Dallas]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Superworkflows
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 6647c1be-7862-4524-85a1-7d2eba1e1342
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-16 05:16:52.311485'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Basic Superworkflow
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: [admin]
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Basic Superworkflow
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Basic Superworkflow] Before Placeholder',
    '[Basic Superworkflow] After Placeholder', '[Shared] Placeholder']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: ae609cd1-323c-4167-a645-27f013b6447d
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-08 07:40:06.900918'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Basic Superworkflow] Before Placeholder'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: [admin]
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Basic Superworkflow: [5, -109]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Before Placeholder
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: db81962f-cc2b-4d1c-93aa-dd072add9ddb
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-08 07:40:14.741511'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Basic Superworkflow] After Placeholder'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: [admin]
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Basic Superworkflow: [293, 159]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: After Placeholder
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 2a3820a3-350a-48d2-a06f-fa8384338502
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-08 07:40:47.888047'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Interaction of Restart Mechanism and Superworkflow] Service 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: [admin]
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Interaction of Restart Mechanism and Superworkflow: &id416 [-9, -137]
    Restart From Feature and Superworkflow Interaction: *id416
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 26d19773-3ce1-4b4c-a46e-f2d72aaa1d97
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-08 07:40:52.757802'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Interaction of Restart Mechanism and Superworkflow] Service 2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: [admin]
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Interaction of Restart Mechanism and Superworkflow: &id417 [149, -3]
    Restart From Feature and Superworkflow Interaction: *id417
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service 2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: dcf59481-2dfd-416f-870b-c2a3746e8e73
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-08 07:40:57.407517'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Interaction of Restart Mechanism and Superworkflow] Service 3'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: [admin]
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Interaction of Restart Mechanism and Superworkflow: &id418 [305, 150]
    Restart From Feature and Superworkflow Interaction: *id418
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service 3
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Global Variables
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 21055caa-f57d-4dd7-b496-4552429ef322
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    d300f746-8293-420f-b288-167d3b6ae552:
      alignment: left
      content: "This workflow tests the get_result and get_var global variable.\r\n\
        Both must be able to access the variables / results created in\r\na workflow\
        \ from within its subworkflows, and reciprocally\r\ncreated in a subworkflow\
        \ from its parent workflow.\r\nRuns on two devices: Austin and Washington.\r\
        \nMust be tested in DxD and SxS per S/W targets, with the\r\nsubworkflow in\
        \ DxD and SxS per S/W targets, and with\r\nmultiprocessing."
      positions: [175, -198]
  last_modified: '2022-04-08 07:07:34.081560'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: 'Functions: get_result and get_var'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: 'Functions: get_result and get_var'
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Functions: get_result and get_var]
      Before Run Once', '[Functions: get_result and get_var] Before Run Per Device',
    '[Functions: get_result and get_var] Subworkflow', '[Functions: get_result and
      get_var] After Run Once', '[Functions: get_result and get_var] After Run Per
      Device']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 45bc867c-7365-45a8-aa54-f57c89d0c95e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-21 00:54:13.502709'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_result and get_var] Before Run Once'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_result and get_var': [-187, -139]
    'Global variables: get_result and get_var': [-187, -139]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Before Run Once
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"Before Run Once\", 1)\r\nresults[\"success\"] = True\r\n\
    results[\"result\"] = \"Before Run Once\""
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 53e443cc-f0f1-46c3-b575-e4f97a10136a
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-21 01:01:25.969004'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_result and get_var] Before Run Per Device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_result and get_var': [-172, 94]
    'Global variables: get_result and get_var': [-172, 94]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Before Run Per Device
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"Before Run Per Device\", device.name, device=device.name)\r\
    \nresults[\"success\"] = True\r\nresults[\"result\"] = f\"Before Run Per Device:\
    \ {device.name}\""
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: ''
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: cb159a71-5290-4ff2-9e03-f0d76efd0c22
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2021-11-21 00:50:28.581310'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_result and get_var] Subworkflow'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_result and get_var': [194, -49]
    'Global variables: get_result and get_var': [194, -49]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Subworkflow
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[[Functions: get_result and get_var]
      Subworkflow] Subservice']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 280388ba-3546-4573-a476-16dfe63475f9
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-21 01:12:01.108991'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_result and get_var] After Run Once'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_result and get_var': [582, -169]
    'Global variables: get_result and get_var': [582, -169]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: After Run Once
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "subworkflow_var = get_var(\"Subworkflow\", device=\"Washington\")\r\
    \nsubworkflow_result = get_result(\"Subservice\", device=\"Washington\")[\"result\"\
    ]\r\n\r\nsuccess = [subworkflow_var] + subworkflow_result == [\r\n  \"Subworkflow\"\
    ,\r\n  1,\r\n  \"Washington\",\r\n  \"Before Run Once\",\r\n  \"Before Run Per\
    \ Device: Washington\",\r\n]\r\nresults[\"success\"] = results[\"result\"] = success"
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: ad002d5b-65c8-46c5-bc90-9e647ed9aeb3
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-21 01:10:51.370260'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Functions: get_result and get_var] After Run Per Device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Functions: get_result and get_var': [438, 106]
    'Global variables: get_result and get_var': [579, 82]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: After Run Per Device
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "subworkflow_var = get_var(\"Subworkflow\", device=device.name)\r\n\
    subworkflow_result = get_result(\"Subservice\", device=device.name)[\"result\"\
    ]\r\n\r\nsuccess = [subworkflow_var] + subworkflow_result == [\r\n  \"Subworkflow\"\
    ,\r\n  1,\r\n  device.name,\r\n  \"Before Run Once\",\r\n  f\"Before Run Per Device:\
    \ {device.name}\",\r\n]\r\nresults[\"success\"] = results[\"result\"] = success"
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 96b8234b-46ed-4618-a811-cda2a6aee525
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-11-21 01:09:08.519718'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[[Functions: get_result and get_var] Subworkflow] Subservice'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    '[Functions: get_result and get_var] Subworkflow': &id419 [228, -43]
    '[Global variables: get_result and get_var] Subworkflow': *id419
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Subservice
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "result = [\r\n  get_var(\"Before Run Once\"),\r\n  get_var(\"Before\
    \ Run Per Device\", device=device.name),\r\n  get_result(\"Before Run Once\")[\"\
    result\"],\r\n  get_result(\"Before Run Per Device\", device=device.name)[\"result\"\
    ],\r\n]\r\n\r\nset_var(\"Subworkflow\", \"Subworkflow\", device=device.name)\r\
    \n\r\nsuccess = result == [\r\n  1,\r\n  device.name,\r\n  \"Before Run Once\"\
    ,\r\n  f\"Before Run Per Device: {device.name}\",\r\n]\r\n\r\nresults[\"success\"\
    ] = success\r\nresults[\"result\"] = result"
  target_devices: [Austin, Washington]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Basics
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 8a30dabc-0a1a-4e82-854c-567ccd41fcc8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0041059d-b9b7-422e-9e82-5c2b6ff4db6f:
      alignment: left
      content: "This workflow runs in SxS with Service Targets. It must be run in\
        \ two times,\r\nfirst with an edge from \"Start\" to \"Service1\", then with\
        \ an edge from \"Start\"\r\nto \"Deletion of SanJose\". Deleting immediately\
        \ after running Service1 and\r\nService2 would yield an \"Out of session scope\"\
        \ database error.\r\n1) The first service runs on \"SanJose\", and the second\
        \ service runs\r\non \"router14\" and \"router15\"\r\n2) - The third service\
        \ will delete :\r\n    * \"SanJose\" to test cascade deletion of results when\
        \ the associated device is deleted.\r\n    * \"Service1\" to test cascade\
        \ deletion of results when the associated service is deleted.\r\n- The fourth\
        \ service will deleted a link.\r\n- The last service should fail at deleting\
        \ a task (tasks are not\r\nin the \"allowed_models\" for deletion in automation.json)"
      positions: [101, 174]
    2636fd0a-5a91-4600-b090-d7ba4b831aa6:
      alignment: left
      content: Runs on "router14" and "router15"
      positions: [410, -11]
    519df264-b0ab-4075-b662-dd4fca05e5c8:
      alignment: left
      content: "Delete LINK \"atlantic-r26-boston-3\"\r\nExpected result: success"
      positions: [289, 371]
    aac54a20-a7bd-4444-8ef3-2c3ce8ae87cc:
      alignment: left
      content: "Attempts to delete TASK \"Configuration Poller\"\r\nExpected result:\
        \ failure"
      positions: [579, 351]
    f55f5e94-bed6-46bc-a7dc-13405d8f1be0:
      alignment: left
      content: Runs on "SanJose"
      positions: [-118, -18]
  last_modified: '2022-01-16 05:27:29.540902'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Deletion and Cascade Deletion
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Deletion and Cascade Deletion
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Deletion and Cascade Deletion] Service1',
    '[Deletion and Cascade Deletion] Service2', '[Deletion and Cascade Deletion] Deletion
      of SanJose', '[Deletion and Cascade Deletion] Deletion of Service2', '[Deletion
      and Cascade Deletion] Link Deletion', '[Deletion and Cascade Deletion] Task
      Deletion']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 1de1f5e0-dff8-4b86-8af6-13cc1a877f93
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-28 12:00:50.083903'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Deletion and Cascade Deletion] Service1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Basic: Deletion (Device, Link, Service, Task)': &id420 [-119, 33]
    Deletion and Cascade Deletion: *id420
    Deletion of Devices, Links, Services, Tasks and associated Cascade Deletion: *id420
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: [SanJose]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 4cdcaef3-a0be-4e09-b708-0e09cff2a1f2
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-28 12:00:44.276785'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Deletion and Cascade Deletion] Service2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Basic: Deletion (Device, Link, Service, Task)': &id421 [380, 42]
    Deletion and Cascade Deletion: *id421
    Deletion of Devices, Links, Services, Tasks and associated Cascade Deletion: *id421
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: [router14, router15]
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 19587d45-0425-418a-944e-572bb27daf52
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-28 12:16:44.033973'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Deletion and Cascade Deletion] Deletion of SanJose'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Basic: Deletion (Device, Link, Service, Task)': &id422 [-204, 300]
    Deletion and Cascade Deletion: *id422
    Deletion of Devices, Links, Services, Tasks and associated Cascade Deletion: *id422
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Deletion of SanJose
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "delete(\"device\", name=\"SanJose\")\r\nresults[\"success\"] = True\r\
    \nresults[\"result\"] = {}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: c35f3269-7e9c-483b-b1ca-0906245d272e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-28 12:16:47.598077'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Deletion and Cascade Deletion] Deletion of Service2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Basic: Deletion (Device, Link, Service, Task)': &id423 [33, 305]
    Deletion and Cascade Deletion: *id423
    Deletion of Devices, Links, Services, Tasks and associated Cascade Deletion: *id423
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Deletion of Service2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "delete(\"service\", scoped_name=\"Service2\")\r\nresults[\"success\"\
    ] = True\r\nresults[\"result\"] = {}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: cb50aff5-4f90-4425-9672-d0b12eee5096
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-28 12:24:57.723715'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Deletion and Cascade Deletion] Link Deletion'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Basic: Deletion (Device, Link, Service, Task)': &id424 [265, 307]
    Deletion and Cascade Deletion: *id424
    Deletion of Devices, Links, Services, Tasks and associated Cascade Deletion: *id424
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Link Deletion
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "delete(\"link\", name=\"atlantic-r26-boston-3\")\r\nresults[\"success\"\
    ] = True\r\nresults[\"result\"] = {}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 931ff916-1285-43d3-aa5c-50cba88ea348
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-28 12:32:20.352135'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Deletion and Cascade Deletion] Task Deletion'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    'Basic: Deletion (Device, Link, Service, Task)': &id425 [530, 289]
    Deletion and Cascade Deletion: *id425
    Deletion of Devices, Links, Services, Tasks and associated Cascade Deletion: *id425
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Task Deletion
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "delete(\"task\", name=\"Configuration Poller\")\r\nresults[\"success\"\
    ] = True\r\nresults[\"result\"] = {}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  count: 5
  creator: admin
  credential_type: any
  default_uuid: 5fec5fe6-f280-4def-ab58-16c7a580d8a8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  ip_address: ''
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 04:00:48.116548'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: ICMP Ping
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  packet_size: 56
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  ports: '22'
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  protocol: ICMP
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: ICMP Ping
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 2
  ttl: 60
  type: ping_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: REST API
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 22a894ff-820f-408c-b08a-c7757a558d17
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    10fa81e7-a777-4a9b-befb-c16bbc46c763:
      alignment: left
      content: "Get request to \"instance/user/admin\"\r\nReturns \"admin\" properties\
        \ as a dictionary.\r\nUses dictionary inclusion to validate, with the\r\n\
        dictionary {\"is_admin\": True}."
      positions: [394, -58]
    2bf39fbe-bdb2-4589-be78-c391137ba834:
      alignment: left
      content: "/configuration endpoint with \"?property=operational_data\"\r\nCheck\
        \ for \"ipv4,ipv6\" in the result, which is part of the\r\n\"show vrf\" command."
      positions: [2, -107]
    86e4f63f-e6a3-4e0d-9c98-a282ed9b7039:
      alignment: left
      content: "Check for \"Command: show running-config\"\r\nin the results."
      positions: [-214, 238]
    cabc9c00-9945-4929-8bc7-cdad8aa38e44:
      alignment: left
      content: "Get request to \"instance/device/{{ device.name }}\"\r\nReturns \"\
        Washington\" properties as a dictionary.\r\nUses dictionary inclusion to validate,\
        \ with the\r\ndictionary {\"netmiko_driver\": \"arista_eos\"}."
      positions: [130, 228]
  last_modified: '2022-01-15 07:44:00.798528'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: GET Endpoints is_alive, configuration and instance
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: GET Endpoints is_alive, configuration and instance
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[GET Endpoints is_alive, configuration
      and instance] is_alive', '[GET Endpoints is_alive, configuration and instance]
      configuration', '[GET Endpoints is_alive, configuration and instance] operational_data',
    '[GET Endpoints is_alive, configuration and instance] instance - device', '[GET
      Endpoints is_alive, configuration and instance] instance - user']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: ''
  custom_username: ''
  default_uuid: dc1831b1-84b3-4279-8459-d89125f7f653
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 04:57:55.707102'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints is_alive, configuration and instance] is_alive'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints is_alive, configuration and instance: &id426 [-312, -87]
    'REST API: GET Endpoints': [-288, -141]
    'REST API: GET Endpoints is_alive, configuration and instance': *id426
    'REST API: Main Endpoints': [56, -43]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/is_alive
  run_method: per_device
  scoped_name: is_alive
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: 'Command: show running-config'
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 717a34b2-b0c2-4aab-847f-01ca2fcf41f6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 09:14:43.897124'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints is_alive, configuration and instance] configuration'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints is_alive, configuration and instance: &id427 [-231, 158]
    'REST API: GET Endpoints': [-294, 105]
    'REST API: GET Endpoints is_alive, configuration and instance': *id427
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/configuration/{{ device.name }}
  run_method: per_device
  scoped_name: configuration
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ipv4,ipv6
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 08048972-7ff2-4e2d-a2e8-2835819728bd
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 09:15:32.868374'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints is_alive, configuration and instance] operational_data'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints is_alive, configuration and instance: &id428 [-39, -37]
    'REST API: GET Endpoints': [-59, -129]
    'REST API: GET Endpoints is_alive, configuration and instance': *id428
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/configuration/{{ device.name }}?property=operational_data
  run_method: per_device
  scoped_name: operational_data
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 1a4fa29f-503a-4263-94a9-edea5be0cc87
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {netmiko_driver: arista_eos}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 09:23:16.509487'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints is_alive, configuration and instance] instance - device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints is_alive, configuration and instance: &id429 [111, 139]
    'REST API: GET Endpoints is_alive, configuration and instance': *id429
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/instance/device/{{ device.name }}
  run_method: per_device
  scoped_name: instance - device
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 3552c8f6-b0f2-4c71-ba3c-92d9d6362d01
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {is_admin: true}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 09:33:25.027833'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints is_alive, configuration and instance] instance - user'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints is_alive, configuration and instance: &id430 [390, 31]
    'REST API: GET Endpoints is_alive, configuration and instance': *id430
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/instance/user/admin
  run_method: per_device
  scoped_name: instance - user
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: dict_included
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: REST API
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: e288d029-1434-4908-8d0a-70848e11166b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    14bd6cae-5d45-4926-992e-5301af68750e:
      alignment: left
      content: "Query to rest/token to get a token.\r\nUses post-processing to check\
        \ that the\r\nstatus code in the results is 200."
      positions: [367, -95]
    2cd79427-3e98-4039-9417-dcd0dd5a3d1c:
      alignment: left
      content: "Query to query/device?operating_system=EOS\r\nReturns a list of all\
        \ devices as dictionaries\r\nwhere the operating system is set to \"EOS\"\
        .\r\nUses post-processing to check all results have\r\nthe operating system\
        \ set to \"EOS\"."
      positions: [225, 251]
    6ac4682f-9fd2-496a-b95f-73f8c14d158b:
      alignment: left
      content: "Query to query/device?name=NonExisting&allow_none=true\r\nReturns\
        \ an empty dictionary because allow_none is set to True.\r\nUses post-processing\
        \ to check that the list is indeed empty."
      positions: [-16, -112]
    98d96f4f-361a-4658-ad93-d5b03174bea1:
      alignment: left
      content: "Query to query/device?name=Washington\r\nReturns a list of one dictionary\
        \ with \"Washington\"\r\nproperties. Uses post-processing to check list\r\n\
        length and device name = \"Washington\""
      positions: [-213, 251]
  last_modified: '2022-01-15 07:44:11.351612'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: GET Endpoints query and token
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: GET Endpoints query and token
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[GET Endpoints query and token] Query
      Device - Washington', '[GET Endpoints query and token] Query Device - NonExisting',
    '[GET Endpoints query and token] Query Device - OS EOS', '[GET Endpoints query
      and token] Get Token']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: f17ae124-63c8-4fb7-8286-3ca02ce17f74
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 10:23:35.564272'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints query and token] Query Device - Washington'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints query and token: &id431 [-241, 163]
    'REST API: GET Endpoints query and token': *id431
    'REST API: GET Endpoints query, result and token': *id431
  postprocessing: "one_element_list = len(results[\"result\"]) == 1\r\nhas_washington\
    \ = results[\"result\"][0][\"name\"] == \"Washington\"\r\nresults[\"success\"\
    ] = one_element_list and has_washington"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/query/device?name={{ device.name }}
  run_method: per_device
  scoped_name: Query Device - Washington
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 9a945c6b-d2fc-42e3-af88-d9f3f826880f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 10:30:43.494121'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints query and token] Query Device - NonExisting'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints query and token: &id432 [-43, -33]
    'REST API: GET Endpoints query and token': *id432
    'REST API: GET Endpoints query, result and token': *id432
  postprocessing: results["success"] = not len(results["result"])
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/query/device?name=NonExisting&allow_none=true
  run_method: per_device
  scoped_name: Query Device - NonExisting
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: d2a7bfa4-b531-44c4-8339-ea713693ceb4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 10:52:26.463394'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints query and token] Query Device - OS EOS'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints query and token: &id433 [193, 158]
    'REST API: GET Endpoints query and token': *id433
    'REST API: GET Endpoints query, result and token': *id433
  postprocessing: "results[\"success\"] = all(\r\n  device[\"operating_system\"] ==\
    \ \"EOS\"\r\n  for device in results[\"result\"]\r\n)"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/query/device?operating_system=EOS
  run_method: per_device
  scoped_name: Query Device - OS EOS
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 07cd4ca8-f031-4c2d-8bbb-4ef7d818c619
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 10:57:50.956919'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[GET Endpoints query and token] Get Token'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    GET Endpoints query and token: &id434 [349, -23]
    'REST API: GET Endpoints query and token': *id434
    'REST API: GET Endpoints query, result and token': *id434
  postprocessing: results["success"] = results["status_code"] == 200
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/token
  run_method: per_device
  scoped_name: Get Token
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: REST API
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: d42726fd-6c57-496c-8b85-f9b496b9883c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    31828760-4f10-4160-b0ef-8eaee9a1146a:
      alignment: left
      content: "Search for the [\"name\",\"configuration\",\"ip_address\"] of the\r\
        \n5 first devices ordered alphabetically.\r\nUses post-processing to check,\
        \  for all 5 devices, that the\r\nIP address is set to 192.168.56.50 and the\
        \ configuration\r\ncontains \"Command: show running-config\"."
      positions: [-82, -120]
    502aae2b-86f8-4130-8dc0-d9a1c84fae6e:
      alignment: left
      content: "Search for the [\"name\",\"configuration_matches\",\"ip_address\"\
        ] of the\r\ndevices whose configuration is matched by the regular expression\r\
        \n\"TRAFFIC-\\d\\d\".\r\nThe configuration_matches is a special property designed\
        \ to return\r\nthe lines of the device configuration that matched the filter.\r\
        \nUses post-processing to check that there are 27 devices that match,\r\n\
        and that for each device, the two following lines are a match:\r\n\"L19: vrf\
        \ instance CUSTOMER-TRAFFIC-28\"\r\n\"L32: no ip routing vrf CUSTOMER-TRAFFIC-28\"\
        \r\nunder the \"configuration_matches\" property.\r\n"
      positions: [430, -69]
    c8bac4e7-7a50-4e05-8b3c-b79e85ca2535:
      alignment: left
      content: "Search for the [\"name\",\"operating_system\",\"ip_address\"] of all\r\
        \ndevices whose name contains a \"i\".\r\nUses post-processing to check that\
        \ there are as many devices\r\nin the results as there are in the pool \"\
        Datacenter Chicago\",\r\nwhich is also configured to match devices with an\
        \ \"i\"."
      positions: [1, 212]
  last_modified: '2022-01-15 07:44:19.036936'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: POST Endpoint search
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: POST Endpoint search
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[POST Endpoint search] First 5 devices',
    '[POST Endpoint search] Devices with i', '[POST Endpoint search] Configuration
      with regex TRAFFIC-dd']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: POST
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 24c2e4cc-e50a-471b-9c57-b83b0b2134dc
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 11:38:49.908283'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[POST Endpoint search] First 5 devices'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload:
    columns: [name, configuration, ip_address]
    maximum_return_records: 5
    start: 5
    type: device
  pools: [Everything]
  positions:
    POST Endpoint search: &id435 [-117, -35]
    'REST API: POST Endpoint search': *id435
    'REST API: POST Endpoints update and search': *id435
  postprocessing: "results[\"success\"] = (\r\n  len(results[\"result\"]) == 5\r\n\
    \  and all(\r\n    device[\"ip_address\"] == \"192.168.56.50\"\r\n    and \"Command:\
    \ show running-config\" in device[\"configuration\"]\r\n    for device in results[\"\
    result\"]\r\n))"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/search
  run_method: per_device
  scoped_name: First 5 devices
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: POST
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 23312fd6-a032-4b58-b597-e650531675ba
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 11:45:30.235163'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[POST Endpoint search] Devices with i'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload:
    columns: [name, operating_system, ip_address]
    maximum_return_records: 100
    search_criteria: {name: i}
    type: device
  pools: [Everything]
  positions:
    POST Endpoint search: &id436 [-29, 112]
    'REST API: POST Endpoint search': *id436
    'REST API: POST Endpoints update and search': *id436
  postprocessing: "chicago_pool = fetch(\"pool\", name=\"Datacenter Chicago\")\r\n\
    results[\"success\"] = len(chicago_pool.devices) == len(results[\"result\"])"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/search
  run_method: per_device
  scoped_name: Devices with i
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: POST
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 179ed04f-e222-4b2d-b5eb-11021ee68be9
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-30 12:29:01.853798'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[POST Endpoint search] Configuration with regex TRAFFIC-dd'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload:
    columns: [name, configuration_matches, ip_address]
    maximum_return_records: 50
    search_criteria: {configuration: TRAFFIC-\d\d, configuration_filter: regex}
    type: device
  pools: [Everything]
  positions:
    POST Endpoint search: &id437 [389, 58]
    'REST API: POST Endpoint search': *id437
    'REST API: POST Endpoints update and search': *id437
  postprocessing: "all_devices = len(results[\"result\"]) == 27\r\nall_matches = all(\r\
    \n  device[\"configuration_matches\"] == [\r\n    \"L19: vrf instance CUSTOMER-TRAFFIC-28\"\
    ,\r\n    \"L32: no ip routing vrf CUSTOMER-TRAFFIC-28\"\r\n  ] for device in results[\"\
    result\"]\r\n)\r\nresults[\"success\"] = all_devices and all_matches"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/search
  run_method: per_device
  scoped_name: Configuration with regex TRAFFIC-dd
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: REST API
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: c6cde597-3f6e-4a70-a556-ff1a3b2b3cb7
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0af0ce02-f0ee-4cbe-82dc-89cd73b96f75:
      alignment: left
      content: "Uses the \"runtime\" global variable set in the\r\nworkflow pre-processing\
        \ to send a GET call\r\nto \"result\" and get the results for the on-going\r\
        \nrun. Uses post-processing to check that its\r\nstatus is set to \"Running\"\
        ."
      positions: [-131, 263]
    0bf89145-fb73-44cc-8ff4-b5cc37a74b35:
      alignment: left
      content: "Create new device \"NewDevice\"\r\nand uses \"fetch\" in post-processing\r\
        \nto check that it exists."
      positions: [-209, -8]
    4a4ee54e-814c-456a-8eee-b1a2992c4785:
      alignment: left
      content: "Deletes NewDevice with a DELETE\r\nREST call and check with fetch\
        \ and\r\nallow_none=True that NewDevice no\r\nlonger exists."
      positions: [531, -4]
    5e7bca9e-658d-4e24-b7ea-ef95f886e31f:
      alignment: left
      content: "Set NewDevice propert1 to \"UPDATED\"\r\nand uses \"fetch\" in post-processing\
        \ to\r\ncheck that the value is indeed \"UPDATED\"."
      positions: [145, -16]
    9e8cbbbc-e680-43a6-99f2-0bb23048c085:
      alignment: left
      content: "Uses the \"runtime\" global variable set in the\r\nworkflow pre-processing\
        \ to send a POST call\r\nto \"search\" and get the results for the on-going\r\
        \nrun. Uses post-processing to check there are\r\n4 results, one for each\
        \ of the previous services."
      positions: [339, 312]
  last_modified: '2022-01-15 07:44:30.923925'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: POST update, DELETE delete and GET & POST results
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: set_var("runtime", self.parent_runtime)
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: POST update, DELETE delete and GET & POST results
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[POST update, DELETE delete and GET
      & POST results] POST Update NewDevice property1', '[POST update, DELETE delete
      and GET & POST results] POST Create NewDevice', '[POST update, DELETE delete
      and GET & POST results] DELETE NewDevice', '[POST update, DELETE delete and
      GET & POST results] GET result', '[POST update, DELETE delete and GET & POST
      results] POST Search Result']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: POST
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: d0d35b79-7f11-4bba-adc6-1aaa53b6b141
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-31 03:47:47.438589'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[POST update, DELETE delete and GET & POST results] POST Update NewDevice
    property1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {name: NewDevice, property1: UPDATED}
  pools: [Everything]
  positions:
    POST update, DELETE delete and GET & POST results: &id438 [140, 51]
    'REST API: POST update, DELETE delete and GET & POST results': *id438
  postprocessing: results["success"] = fetch("device", name="NewDevice").property1
    == "UPDATED"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/instance/device
  run_method: once
  scoped_name: POST Update NewDevice property1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: POST
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 7459b59e-a232-4a0f-ad1b-1fcb515011cb
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-31 03:47:42.124002'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[POST update, DELETE delete and GET & POST results] POST Create NewDevice'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {name: NewDevice}
  pools: [Everything]
  positions:
    POST update, DELETE delete and GET & POST results: &id439 [-232, 66]
    'REST API: POST update, DELETE delete and GET & POST results': *id439
  postprocessing: fetch("device", name="NewDevice")
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/instance/device
  run_method: once
  scoped_name: POST Create NewDevice
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: DELETE
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: d940e81f-7815-4a6e-a3af-efb38aae24b6
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-31 03:47:53.783395'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[POST update, DELETE delete and GET & POST results] DELETE NewDevice'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    POST update, DELETE delete and GET & POST results: &id440 [473, 77]
    'REST API: POST update, DELETE delete and GET & POST results': *id440
  postprocessing: results["success"] = fetch("device", name="NewDevice", allow_none=True)
    is None
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/instance/device/NewDevice
  run_method: once
  scoped_name: DELETE NewDevice
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: GET
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 90f6a266-aee6-4e16-8dbe-f304ff076b93
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-31 03:37:28.832022'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[POST update, DELETE delete and GET & POST results] GET result'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload: {}
  pools: [Everything]
  positions:
    POST update, DELETE delete and GET & POST results: &id441 [-123, 167]
    'REST API: POST update, DELETE delete and GET & POST results': *id441
  postprocessing: results["success"] = results["result"]["status"] == "Running"
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: 'http://192.168.56.102/rest/result/REST API: POST update, DELETE delete
    and GET & POST results/{{ runtime }}'
  run_method: once
  scoped_name: GET result
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  call_type: POST
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: json
  creator: admin
  credential_type: any
  credentials: custom
  custom_password: YWRtaW4=
  custom_username: admin
  default_uuid: 3bc2906c-359d-48c8-ab14-4db92353a50f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  headers: {}
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2021-12-31 03:52:29.182943'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[POST update, DELETE delete and GET & POST results] POST Search Result'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  params: {}
  payload:
    columns: [result, parent_runtime, service_name]
    maximum_return_records: 1000
    search_criteria: {parent_runtime: '{{ runtime }}'}
    type: result
  pools: [Everything]
  positions:
    POST update, DELETE delete and GET & POST results: &id442 [319, 227]
    'REST API: POST update, DELETE delete and GET & POST results': *id442
  postprocessing: results["success"] = len(results["result"]) == 4
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  rest_url: http://192.168.56.102/rest/search
  run_method: once
  scoped_name: POST Search Result
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 15
  type: rest_call_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  verify_ssl_certificate: false
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: SSH Connection
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 8b0c9a93-86ea-4630-9043-eeef27881704
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    4a139d74-317c-4623-ae5d-b4715b9ae95b:
      alignment: left
      content: "Runs on \"Router behind Gateway 1\".\r\nShould try and succeed connecting\r\
        \nto \"Gateway 1\"."
      positions: [-49, 127]
    bfee4cbb-eaef-446f-ae5c-4aee02381dc4:
      alignment: left
      content: "Should re-use cached proxy connections\r\nfor both \"Router behind\
        \ Gateway 1\" and\r\n\"Router behind Gateway 1, 2 and 3\".\r\nNo stacktrace\
        \ expected."
      positions: [712, 128]
    c23ca0ee-235d-404a-bc08-fe900792803a:
      alignment: left
      content: "This workflows tests the Gateway feature: we connect to a remote network\
        \ device via a Gateway device, called \"Gateway\".\r\nThe workflow runs in\
        \ Service Targets mode, with two Netmiko Validation services :\r\n- the first\
        \ tests the gateway mechanism in case there is one, reachable gateway. It\
        \ has one target, \"Router behind Gateway 1\"\r\nwhose \"gateways\" field\
        \ is set to \"Gateway 1\". \r\n- the second service tests the priority tie\
        \ break mechanism: eNMS tries the gateways,\r\nfrom the highest to the lowest\
        \ priority until one is reachable.\r\nIt has one target: \"Router behind Gateway\
        \ 1, 2 and 3\".\r\nGateway 3 has the highest priority, it should be selected\
        \ but is unreachable (wrong IP).\r\nIt should then try Gateway 2 (higher priority\
        \ than Gateway 1, also unreachable) and finally fall back on Gateway 1.\r\n\
        - the last service runs on both \"Router behind Gateway 1\" and \"Router behind\
        \ Gateway 1, 2 and 3\".\r\nThe behavior should be the same as that of the\
        \ first and second services:\r\n* Gateway 1 should be used right away \"Router\
        \ behind Gateway 1\"\r\n* Gateway 1 should be used as a fall back after trying\
        \ Gateway 2 and 3 for \"Router behind Gateway 1, 2 and 3\""
      positions: [367, -135]
    dd3e4d77-8a48-4292-8f3c-fe8aaf0bc273:
      alignment: left
      content: "Runs on \"Router behind Gateway 1, 2 and 3\".\r\nShould try and fail\
        \ connecting to Gateway 3,\r\nthen Gateway 2, and finally succeed connecting\r\
        \nto Gateway 1.\r\nTwo stacktraces expected in the logs."
      positions: [311, 132]
  last_modified: '2022-05-20 13:46:04.332704'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Gateway Mechanism (SSH Proxy with Netmiko)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: (R) Gateway Mechanism (SSH Proxy with Netmiko)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Gateway Mechanism (SSH Proxy
      with Netmiko)] Gateway 1', '[(R) Gateway Mechanism (SSH Proxy with Netmiko)]
      Gateway 3, 2 then 1', '[(R) Gateway Mechanism (SSH Proxy with Netmiko)] Both']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: sh ip int br
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 60691a93-16ad-4b40-a55c-7216ed064000
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2022-01-01 03:01:33.611561'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Gateway Mechanism (SSH Proxy with Netmiko)] Gateway 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Gateway Mechanism (SSH Proxy with Netmiko): &id443 [-39, 41]
    (R) Gateway Mechanism (SSH Proxy with Paramiko): *id443
    (R) Gateway Mechanism (SSH Proxy with Scrapli): *id443
    'Automation: gateways (SSH Proxy with Paramiko)': *id443
    Gateway Mechanism (SSH Proxy with Paramiko): *id443
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Gateway 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {(R) Gateway Mechanism (SSH Proxy with Scrapli): false}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Router behind Gateway 1]
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: sh ip int br
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 310e7b38-235f-4a82-96fc-64befbb2b0b5
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2022-01-01 03:01:18.510188'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Gateway Mechanism (SSH Proxy with Netmiko)] Gateway 3, 2 then 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Gateway Mechanism (SSH Proxy with Netmiko): &id444 [301, 39]
    (R) Gateway Mechanism (SSH Proxy with Paramiko): *id444
    (R) Gateway Mechanism (SSH Proxy with Scrapli): *id444
    'Automation: gateways (SSH Proxy with Paramiko)': *id444
    Gateway Mechanism (SSH Proxy with Paramiko): *id444
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Gateway 3, 2 then 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {(R) Gateway Mechanism (SSH Proxy with Scrapli): false}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: ['Router behind Gateway 1, 2 and 3']
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: sh ip int br
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 5613e3e0-79e5-4eaf-acd6-59e3e9543bd7
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2022-01-01 03:02:00.816577'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Gateway Mechanism (SSH Proxy with Netmiko)] Both'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Gateway Mechanism (SSH Proxy with Netmiko): &id445 [660, 34]
    (R) Gateway Mechanism (SSH Proxy with Paramiko): *id445
    (R) Gateway Mechanism (SSH Proxy with Scrapli): *id445
    'Automation: gateways (SSH Proxy with Paramiko)': *id445
    Gateway Mechanism (SSH Proxy with Paramiko): *id445
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Both
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {(R) Gateway Mechanism (SSH Proxy with Scrapli): false}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: [Router behind Gateway 1, 'Router behind Gateway 1, 2 and 3']
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Parameterized Form
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 1fcf96d3-5549-43a9-9383-9a9f63b55094
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    66f7ccdc-b1bd-421d-acb4-3af6ca3e39eb:
      alignment: left
      content: "This workflow tests that multiprocessing can be used as part of a\r\
        \nparameterized form.\r\nIt tests the \"Runner.get\" function that returns\
        \ the property of the\r\nparameterized form if it exists, and the property\
        \ of the Run otherwise.\r\nThe workflow must be run :\r\n- without parameterized\
        \ form, in which case the multiprocessing configuration\r\ncomes from the\
        \ workflow itself: it is enabled and should use 2 processes.\r\n- with paramterized\
        \ form, in which case the multiprocessing configuration\r\ncomes from the\
        \ form. By default, it is configured to use 5 processes.\r\nTo be tested with\
        \ paramterized form :\r\n* default configuration\r\n* different number of\
        \ process\r\n* multiprocessing disabled"
      positions: [287, -66]
  last_modified: '2022-01-15 06:14:22.375612'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 2
  maximum_runs: 1
  multiprocessing: true
  name: Parameterized Multiprocessing
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "multiprocessing = BooleanField('Multiprocessing', default=True)\r\
    \nmax_processes = IntegerField('Maximum number of processes', default=5)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Parameterized Multiprocessing
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Parameterized Multiprocessing] Empty
      Service']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: [Datacenter San Francisco]
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 16bc9738-b27b-4e05-aaec-6bc07d465729
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-15 06:13:13.584906'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Parameterized Multiprocessing] Empty Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Parameterized Multiprocessing: [216, 129]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Empty Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Parameterized Form
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 59ad14b9-e92b-4595-82a6-66eb74903990
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: '["Atlanta"]'
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    4a30f572-f837-428f-9f47-52f012b79779:
      alignment: left
      content: "We will now update the parameterized form by removing its properties\r\
        \none by one, and check that as soon as a property is removed, its counterpart\r\
        \nin the parent workflow is used instead.\r\n5) Edit the workflow to remove\
        \ the \"device_query\" property from the\r\nparameterized form.\r\nNow that\
        \ it is no longer defined in the form, the value of device query should\r\n\
        come from the workflow, where it is set to [\"Atlanta\"].\r\n6) Run the workflow\
        \ with empty parameterized form and check that the\r\nworkflow now runs on\
        \ Atlanta.\r\n7) Run the workflow with devices set to [\"Jackson\", \"PaloAlto\"\
        ] and check\r\nthat the workflow runs on Atlanta, PaloAlto and Jackson.\r\n\
        8) Edit the workflow to remove the \"target_devices\" property\r\n9) Run the\
        \ workflow with empty parameterized form and check that it now\r\nruns on\
        \ Austin and Atlanta.\r\n10) Edit the workflow to have no parameterized properties.\r\
        \n11) Run the workflow with empty parameterized form, and check that it\r\n\
        runs on the original workflow targets: Austin, Washington and Atlanta."
      positions: [298, 82]
    4eaef783-740b-4b1a-973b-657d2fe0b42a:
      alignment: left
      content: "The parameterized form contains all target related properties:\r\n\
        \"target_devices\", \"target_pools\", \"device_query\"\r\nand \"device_query_property\"\
        .\r\nAs soon as one of these \"target properties\" is detected by eNMS\r\n\
        in the parameterized form, it takes precedence over what is defined\r\nin\
        \ the parent workflow.\r\nThe parent workflow is configured to run on Austin\
        \ (devices),\r\nWashington (pools) and Atlanta (device query).\r\n1) Run the\
        \ workflow without parameterized form: it should run\r\non Austin, Washington\
        \ and Atlanta.\r\n2) Run the workflow with parameterized form without setting\r\
        \nany targets: it should abort with the \"No targets defined\" message.\r\n\
        3) Run the workflow with one parameterized device: check that only\r\nthat\
        \ one device is used as a target.\r\n4) Run the workflow with \"Washington\"\
        \ as parameterized pool and\r\n\"Boston\" as parameterized device query: check\
        \ that only these two\r\ndevices are used as targets."
      positions: [-392, 87]
  last_modified: '2022-01-15 08:33:35.116627'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Parameterized Targets
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "target_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Parameterized Targets
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Parameterized Targets] Empty Service']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Austin]
  target_pools: [Washington]
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 5275cbc9-a0b4-4ef9-aa94-d310bb3971c4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-15 08:09:20.547595'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Parameterized Targets] Empty Service'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Parameterized Targets: [-49, 79]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Empty Service
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "\r\n# Click on \"i\" to right of \"Source Code\" for examples.\r\n\
    \r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Basics
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 7adc02b4-ee9a-4db6-86fd-8a1e615263dc
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    926ebbc5-e82b-4ae5-85fe-f25675a5149b:
      alignment: left
      content: Tests the priority mechanism.
      positions: [211, -52]
  last_modified: '2022-01-20 07:17:43.717735'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Service Priorities
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Service Priorities
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Scalability
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: ab1f9f19-d629-4997-b22c-9d47b14f5532
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-01-28 04:47:54.571482'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Large Workflow (30 services)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow with Large Subworkflows: [-31, -134]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Large Workflow (30 services)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Large Workflow (30 services)] S1',
    '[Large Workflow (30 services)] S2', '[Large Workflow (30 services)] S3', '[Large
      Workflow (30 services)] S4', '[Large Workflow (30 services)] S5', '[Large Workflow
      (30 services)] S6', '[Large Workflow (30 services)] S7', '[Large Workflow (30
      services)] S8', '[Large Workflow (30 services)] S9', '[Large Workflow (30 services)]
      S10', '[Large Workflow (30 services)] S11', '[Large Workflow (30 services)]
      S12', '[Large Workflow (30 services)] S13', '[Large Workflow (30 services)]
      S14', '[Large Workflow (30 services)] S15', '[Large Workflow (30 services)]
      S16', '[Large Workflow (30 services)] S17', '[Large Workflow (30 services)]
      S18', '[Large Workflow (30 services)] S19', '[Large Workflow (30 services)]
      S20', '[Large Workflow (30 services)] S21', '[Large Workflow (30 services)]
      S22', '[Large Workflow (30 services)] S23', '[Large Workflow (30 services)]
      S24', '[Large Workflow (30 services)] S25', '[Large Workflow (30 services)]
      S26', '[Large Workflow (30 services)] S27', '[Large Workflow (30 services)]
      S28']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: b817c56d-c033-458c-ae83-993cd055823f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:52:37.932520'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id446 [-201, -74]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id446
    '[Shared] Large Subworkflow': *id446
    '[Shared] Large Workflow': *id446
    '[Shared] Large Workflow (30 services)': *id446
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: e1dcad6e-3e8a-4dd5-a80a-7eabcab91ec5
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:52:45.162066'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S2'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id447 [-198, -156]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id447
    '[Shared] Large Subworkflow': *id447
    '[Shared] Large Workflow': *id447
    '[Shared] Large Workflow (30 services)': *id447
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S2
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 2bd3e3a0-8250-475a-b6ac-1d07653455ef
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:52:48.316076'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S3'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id448 [-44, -155]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id448
    '[Shared] Large Subworkflow': *id448
    '[Shared] Large Workflow': *id448
    '[Shared] Large Workflow (30 services)': *id448
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S3
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: f8a24aac-b406-4c33-9f05-ddfc4ff238af
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:52:53.264945'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S4'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id449 [-42, -74]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id449
    '[Shared] Large Subworkflow': *id449
    '[Shared] Large Workflow': *id449
    '[Shared] Large Workflow (30 services)': *id449
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S4
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 5bdbe799-df70-4023-a409-2d897e56742c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:52:56.740219'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S5'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id450 [-39, 12]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id450
    '[Shared] Large Subworkflow': *id450
    '[Shared] Large Workflow': *id450
    '[Shared] Large Workflow (30 services)': *id450
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S5
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: deaa5403-8784-4e9a-b54c-79769fba9a8c
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:53:00.621935'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S6'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id451 [-46, 100]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id451
    '[Shared] Large Subworkflow': *id451
    '[Shared] Large Workflow': *id451
    '[Shared] Large Workflow (30 services)': *id451
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S6
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 9a75c03f-f997-41cf-b142-49821342548b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:53:06.649264'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S7'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id452 [-197, 97]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id452
    '[Shared] Large Subworkflow': *id452
    '[Shared] Large Workflow': *id452
    '[Shared] Large Workflow (30 services)': *id452
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S7
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 2a82ec2a-db4a-4b47-884e-e9a8435e71aa
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:53:16.318455'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S8'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id453 [-195, 196]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id453
    '[Shared] Large Subworkflow': *id453
    '[Shared] Large Workflow': *id453
    '[Shared] Large Workflow (30 services)': *id453
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S8
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: abd6f5ef-00fd-4bae-b2fd-0ecb6f95eeac
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:53:21.443941'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S9'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id454 [-35, 195]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id454
    '[Shared] Large Subworkflow': *id454
    '[Shared] Large Workflow': *id454
    '[Shared] Large Workflow (30 services)': *id454
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S9
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: f04f0b3d-f942-4ead-9556-f01d7f41088f
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:53:27.774193'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S10'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id455 [127, 192]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id455
    '[Shared] Large Subworkflow': *id455
    '[Shared] Large Workflow': *id455
    '[Shared] Large Workflow (30 services)': *id455
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S10
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: fcde294c-9506-4d8b-9393-34812ba2e017
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:53:31.949183'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S11'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id456 [125, 97]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id456
    '[Shared] Large Subworkflow': *id456
    '[Shared] Large Workflow': *id456
    '[Shared] Large Workflow (30 services)': *id456
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S11
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: c8d591de-1afb-4210-aee3-0fc42e3e11c1
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:54:29.990827'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S12'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id457 [123, 9]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id457
    '[Shared] Large Subworkflow': *id457
    '[Shared] Large Workflow': *id457
    '[Shared] Large Workflow (30 services)': *id457
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S12
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: aaf44944-cc43-474c-b698-be87e6375568
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:54:32.823215'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S13'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id458 [122, -75]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id458
    '[Shared] Large Subworkflow': *id458
    '[Shared] Large Workflow': *id458
    '[Shared] Large Workflow (30 services)': *id458
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S13
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 92825990-c10e-4191-ae49-972b11d11716
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:54:36.988357'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S14'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id459 [124, -155]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id459
    '[Shared] Large Subworkflow': *id459
    '[Shared] Large Workflow': *id459
    '[Shared] Large Workflow (30 services)': *id459
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S14
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 44280df4-1f49-4f99-9715-6d21ab18079b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:54:40.569403'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S15'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id460 [281, -155]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id460
    '[Shared] Large Subworkflow': *id460
    '[Shared] Large Workflow': *id460
    '[Shared] Large Workflow (30 services)': *id460
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S15
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 8d26e5a0-9560-4fc0-b907-2a5ae3d46b17
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:54:44.068564'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S16'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id461 [283, -74]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id461
    '[Shared] Large Subworkflow': *id461
    '[Shared] Large Workflow': *id461
    '[Shared] Large Workflow (30 services)': *id461
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S16
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 5d14a746-5d97-4437-8c5b-120fa71271ec
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:54:47.932567'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S17'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id462 [282, 13]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id462
    '[Shared] Large Subworkflow': *id462
    '[Shared] Large Workflow': *id462
    '[Shared] Large Workflow (30 services)': *id462
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S17
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 287f15d5-56c1-42c5-a89d-dd0f525b31ce
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:54:54.323875'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S18'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id463 [287, 100]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id463
    '[Shared] Large Subworkflow': *id463
    '[Shared] Large Workflow': *id463
    '[Shared] Large Workflow (30 services)': *id463
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S18
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: daf223c4-0c5d-4590-b38a-ec4d6b2ea38a
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:54:58.153163'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S19'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id464 [296, 192]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id464
    '[Shared] Large Subworkflow': *id464
    '[Shared] Large Workflow': *id464
    '[Shared] Large Workflow (30 services)': *id464
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S19
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: c02fcf6c-ba1a-42ef-9384-d757103034ed
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:55:02.616978'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S20'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id465 [456, 194]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id465
    '[Shared] Large Subworkflow': *id465
    '[Shared] Large Workflow': *id465
    '[Shared] Large Workflow (30 services)': *id465
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S20
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 4774bf4f-7829-49e2-8e0a-7f6ec673e217
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:55:44.109309'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S21'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id466 [457, 99]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id466
    '[Shared] Large Subworkflow': *id466
    '[Shared] Large Workflow': *id466
    '[Shared] Large Workflow (30 services)': *id466
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S21
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: b05b6417-a0c0-4c3b-a4c7-d2695468de66
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:55:48.516525'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S22'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id467 [454, 12]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id467
    '[Shared] Large Subworkflow': *id467
    '[Shared] Large Workflow': *id467
    '[Shared] Large Workflow (30 services)': *id467
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S22
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 90f1b0cb-a581-4e12-8149-796990f7b4ef
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:55:56.471136'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S23'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id468 [448, -77]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id468
    '[Shared] Large Subworkflow': *id468
    '[Shared] Large Workflow': *id468
    '[Shared] Large Workflow (30 services)': *id468
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S23
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 3c1f7cd9-841f-4d9c-b61c-a279437d87be
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:55:59.812987'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S24'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id469 [448, -158]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id469
    '[Shared] Large Subworkflow': *id469
    '[Shared] Large Workflow': *id469
    '[Shared] Large Workflow (30 services)': *id469
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S24
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 089d9728-eed4-434d-a133-9d6ec1cb7508
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:56:03.668117'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S25'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id470 [617, -161]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id470
    '[Shared] Large Subworkflow': *id470
    '[Shared] Large Workflow': *id470
    '[Shared] Large Workflow (30 services)': *id470
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S25
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 97fbe681-27c2-4794-9444-b2d944091cb1
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:56:34.551820'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S26'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id471 [624, -76]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id471
    '[Shared] Large Subworkflow': *id471
    '[Shared] Large Workflow': *id471
    '[Shared] Large Workflow (30 services)': *id471
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S26
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 0c4acbf8-bbe7-42f8-9fc3-54d0759f29b2
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:56:38.173479'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S27'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id472 [625, 10]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id472
    '[Shared] Large Subworkflow': *id472
    '[Shared] Large Workflow': *id472
    '[Shared] Large Workflow (30 services)': *id472
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S27
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 4769968c-5f3a-4bbc-979c-dae21bcdf116
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-21 10:56:41.635965'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Workflow (30 services)] S28'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Workflow (30 services): &id473 [625, 100]
    '[Large Workflow with Large Subworkflows] Large Subworkflow': *id473
    '[Shared] Large Subworkflow': *id473
    '[Shared] Large Workflow': *id473
    '[Shared] Large Workflow (30 services)': *id473
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: S28
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {'[Large Workflow with Large Subworkflows] Large Subworkflow': false}
  skip_query: ''
  skip_value: success
  source_code: "result = {}\r\nresults[\"success\"] = True\r\nresults[\"result\"]\
    \ = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Scalability
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: fedda0d5-4523-471f-a915-15fd70297fbd
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    0e40b23e-b930-425f-907c-7060bd12a8d2:
      alignment: left
      content: "The payload of a run is saved in the Run.payload row.\r\nA large payload\
        \ can impact the performances of various endpoints,\r\nincluding the workflow\
        \ builder refresh mechanism (via the\r\ncontroller.get_service_state function)\
        \ and the \"Results\" page in the\r\nmenu, because the payload is loaded when\
        \ runs are fetched from the\r\ndatabase.\r\nTo avoid these issues, deferred\
        \ column loading is used.\r\nThis workflow artificially creates a very large\
        \ payload to assess the\r\nimpact on the performances.\r\nThe workflow runs\
        \ in DxD mode on 10 devices.\r\nThe \"Create Large Payload\" saves 1M characters\
        \ in the payload,\r\nfor each device.\r\nIt must be run at least 10 times\
        \ before testing the UI."
      positions: ['265.2530517578125', '-85.75']
  last_modified: '2022-01-22 07:20:13.966868'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Large Payload
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Large Payload
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Large Payload] Create Large Payload']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Jackson, PaloAlto, Austin, Washington, Chicago, SanJose, SanDiego,
    Dallas, Philadelphia, LosAngeles]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 34c8748c-4ca8-4fe8-ae2e-a9f58eb3f482
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-22 03:55:35.679131'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Payload] Create Large Payload'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Payload: &id474 [235, 103]
    Workflow with Large Payload: *id474
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Create Large Payload
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "set_var(\"data\", \"1\" * 1_000_000, device=device.name)\r\n# Click\
    \ on \"i\" to right of \"Source Code\" for examples.\r\n\r\nresult = {}\r\nresults[\"\
    success\"] = True\r\nresults[\"result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Scalability
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 200427f2-975c-4374-a935-116140ee4873
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    978c5e85-7607-4b17-a47a-d2608495e3f4:
      alignment: left
      content: "Just like a large payload, large results can impact the performances\r\
        \nof several endpoints, including get_runtimes and get_workflow_results.\r\
        \nIn this workflow, each result is set to a text made of 1M characters.\r\n\
        The workflow runs in DxD mode on 10 devices."
      positions: [270, -88]
  last_modified: '2022-01-22 07:20:19.517877'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Large Results
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Large Results
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Large Results] Create Large Result']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Jackson, PaloAlto, Austin, Washington, Chicago, SanJose, SanDiego,
    Dallas, Philadelphia, LosAngeles]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 8228dbce-5112-4b6d-b9cd-a5ae3057a4ce
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-22 07:08:48.187560'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Results] Create Large Result'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Results: &id475 [241, 66]
    Workflow with Large Results: *id475
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Create Large Result
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "results[\"success\"] = True\r\nresults[\"result\"] = \"*\" * 1_000_000"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Scalability
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: c750b087-dd3d-4a29-a322-80907409352b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    929b8720-5f52-4eae-9808-550a93557efc:
      alignment: left
      content: "This workflows sets the configuration and operational data of\r\n\
        all devices to a large string (1M characters)\r\nAfter running it, various\
        \ endpoints involving fetching devices\r\nfrom the database must be tested,\
        \ including the Inventory\r\nand Visualization pages.\r\nBoth properties should\
        \ be lazy loaded, so having large configuration\r\nand operational data should\
        \ not significantly impact the performances.\r\nThe workflow runs in DxD on\
        \ all devices, with multiprocessing set to 10."
      positions: [246, -101]
  last_modified: '2022-01-22 07:44:03.566378'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 10
  maximum_runs: 1
  multiprocessing: true
  name: Large Device Configuration and Operational Data
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Large Device Configuration and Operational Data
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Large Device Configuration and Operational
      Data] Set Large Configuration and Operational Data']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: [All Devices]
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: cf09b6d4-cf28-47b1-8e51-d449312adc60
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-01-24 07:30:55.371123'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Large Device Configuration and Operational Data] Set Large Configuration
    and Operational Data'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Large Device Configuration and Operational Data: [222, 78]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Set Large Configuration and Operational Data
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "device.configuration = \"*\" * 1_000_000\r\ndevice.operational_data\
    \ = \"*\" * 1_000_000\r\nresult = {}\r\nresults[\"success\"] = True\r\nresults[\"\
    result\"] = result"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Notification Mechanism
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: 9145ad90-67d2-4318-a9c8-0aeee55a8e89
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels: {}
  last_modified: '2022-05-06 02:05:25.761823'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Slack and Mattermost Notifications
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  run_method: per_service_with_workflow_targets
  scoped_name: Slack and Mattermost Notifications
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Slack and Mattermost Notifications]
      Slack in random, per device', '[Slack and Mattermost Notifications] Notification
      in general, once']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Jackson, PaloAlto]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  body: "Per device notification in default channel (random):\r\ndevice name: {{ device.name\
    \ }}"
  channel: ''
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: c9fbaae4-a80d-40f0-bb78-162a40c5183b
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-04-12 04:27:44.216271'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Slack and Mattermost Notifications] Slack in random, per device'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Slack and Mattermost Notifications: &id476 [236, -114]
    Slack and Mattermost notifications: *id476
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Slack in random, per device
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  token: ''
  type: slack_notification_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  body: One notification in general
  channel: general
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: d7fedaa5-b46e-4508-840a-91922f528de2
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-04-12 04:27:25.013194'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Slack and Mattermost Notifications] Notification in general, once'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Slack and Mattermost Notifications: &id477 [240, 143]
    Slack and Mattermost notifications: *id477
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Notification in general, once
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  token: ''
  type: slack_notification_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  add_header: true
  admin_only: false
  close_connection: false
  commands:
  - {prefix: '', value: show run}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 4de20190-9371-47a0-a25f-eacf7c8b4f70
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-05-13 09:41:32.213617'
  local_path: network_data
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Configuration Properties Backup Services] Get Configuration with Scrapli'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Configuration Properties Backup Services: [-531, 385]
    (R) Operational Data Backup Service: [-531, 385]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  property: configuration
  replacements:
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Configuration with Scrapli
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_backup_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  add_header: true
  admin_only: false
  close_connection: false
  commands:
  - {prefix: shusers, value: show users}
  - {prefix: shipintbr, value: show ip interface brief}
  - {prefix: '', value: show vrf}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  - {prefix: '', value: ''}
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 1bfe82cc-e465-419e-96c1-1405332bc8d2
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-05-13 09:43:26.193909'
  local_path: network_data
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Configuration Properties Backup Services] Get Operational Data with
    Scrapli'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Configuration Properties Backup Services: [-93, 389]
    (R) Operational Data Backup Service: [-93, 389]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  property: operational_data
  replacements:
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  - {pattern: '', replace_with: ''}
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: Get Operational Data with Scrapli
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_backup_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: SSH Connection
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: febc905d-208e-4479-9e49-4233b58420db
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    4a139d74-317c-4623-ae5d-b4715b9ae95b:
      alignment: left
      content: "Runs on \"Router behind Gateway 1\".\r\nShould try and succeed connecting\r\
        \nto \"Gateway 1\"."
      positions: [-49, 127]
    bfee4cbb-eaef-446f-ae5c-4aee02381dc4:
      alignment: left
      content: "Should re-use cached proxy connections\r\nfor both \"Router behind\
        \ Gateway 1\" and\r\n\"Router behind Gateway 1, 2 and 3\".\r\nNo stacktrace\
        \ expected."
      positions: [712, 128]
    c23ca0ee-235d-404a-bc08-fe900792803a:
      alignment: left
      content: "This workflows tests the Gateway feature: we connect to a remote network\
        \ device via a Gateway device, called \"Gateway\".\r\nThe workflow runs in\
        \ Service Targets mode, with two Netmiko Validation services :\r\n- the first\
        \ tests the gateway mechanism in case there is one, reachable gateway. It\
        \ has one target, \"Router behind Gateway 1\"\r\nwhose \"gateways\" field\
        \ is set to \"Gateway 1\". \r\n- the second service tests the priority tie\
        \ break mechanism: eNMS tries the gateways,\r\nfrom the highest to the lowest\
        \ priority until one is reachable.\r\nIt has one target: \"Router behind Gateway\
        \ 1, 2 and 3\".\r\nGateway 3 has the highest priority, it should be selected\
        \ but is unreachable (wrong IP).\r\nIt should then try Gateway 2 (higher priority\
        \ than Gateway 1, also unreachable) and finally fall back on Gateway 1.\r\n\
        - the last service runs on both \"Router behind Gateway 1\" and \"Router behind\
        \ Gateway 1, 2 and 3\".\r\nThe behavior should be the same as that of the\
        \ first and second services:\r\n* Gateway 1 should be used right away \"Router\
        \ behind Gateway 1\"\r\n* Gateway 1 should be used as a fall back after trying\
        \ Gateway 2 and 3 for \"Router behind Gateway 1, 2 and 3\""
      positions: [367, -135]
    dd3e4d77-8a48-4292-8f3c-fe8aaf0bc273:
      alignment: left
      content: "Runs on \"Router behind Gateway 1, 2 and 3\".\r\nShould try and fail\
        \ connecting to Gateway 3,\r\nthen Gateway 2, and finally succeed connecting\r\
        \nto Gateway 1.\r\nTwo stacktraces expected in the logs."
      positions: [311, 132]
  last_modified: '2022-05-20 13:52:38.085027'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Gateway Mechanism (SSH Proxy with Scrapli)
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 11
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: (R) Gateway Mechanism (SSH Proxy with Scrapli)
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Gateway Mechanism (SSH Proxy
      with Scrapli)] Gateway 1', '[(R) Gateway Mechanism (SSH Proxy with Scrapli)]
      Gateway 3, 2 then 1', '[(R) Gateway Mechanism (SSH Proxy with Scrapli)] Both']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  commands: sh ip int br
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 948700f1-d633-4cfb-a979-ddedc3db25d8
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2022-05-20 13:52:25.523932'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Gateway Mechanism (SSH Proxy with Scrapli)] Gateway 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Gateway Mechanism (SSH Proxy with Scrapli): [-43, 52]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Gateway 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Router behind Gateway 1]
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  commands: sh ip int br
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 6ddaf5b0-f77b-44a9-9679-f3cb2df9ad04
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2022-05-20 13:52:29.395990'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Gateway Mechanism (SSH Proxy with Scrapli)] Gateway 3, 2 then 1'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Gateway Mechanism (SSH Proxy with Scrapli): [288, 43]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Gateway 3, 2 then 1
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: ['Router behind Gateway 1, 2 and 3']
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  commands: sh ip int br
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: a4f74454-0f27-4040-b935-1cf65817fbb4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2022-05-20 13:52:32.732435'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Gateway Mechanism (SSH Proxy with Scrapli)] Both'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Gateway Mechanism (SSH Proxy with Scrapli): [669, 48]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Both
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: [Router behind Gateway 1, 'Router behind Gateway 1, 2 and 3']
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: d3ddc910-29ff-4af7-80b0-079c88a20be0
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    ca124e82-1fdb-4e4c-9bd1-b8adc9c1d8fd:
      alignment: left
      content: "This workflow tests the Jinja2 conversion mode of the Data Extraction\
        \ Service.\r\nThe workflow runs in SxS with service targets, both service\
        \ are configured to\r\nrun in Run Once mode.\r\nThe first service defines\
        \ the dictionary that is applied to the Jinja2 template.\r\nThe second service\
        \ does the Jinja2 conversion, and uses the validation \r\nmechanism to check\
        \ that the rendered template is correct."
      positions: [148, -14]
      size: 14
  last_modified: '2022-07-25 08:00:16.671806'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: Data Extraction Jinja2 Template
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  run_method: per_service_with_service_targets
  scoped_name: Data Extraction Jinja2 Template
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[Data Extraction Jinja2 Template]
      Apply jinja2 Template', '[Data Extraction Jinja2 Template] Define Input Variables',
    '[Data Extraction Jinja2 Template] Apply TTP Template']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: "hostname core-sw-waw-01\r\n\r\nno ip domain lookup\r\nip domain\
    \ name local.lab\r\nip name-server 1.1.1.1\r\nip name-server 8.8.8.8\r\n\r\nntp\
    \ server 0.pool.ntp.org prefer\r\nntp server 1.pool.ntp.org"
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 479273ac-164c-46fd-a720-1775f95cb5da
  definition: Definition
  delete_spaces_before_matching: true
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-07-25 08:03:43.487197'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: "hostname {{ hostname }}\r\n\r\nno ip domain lookup\r\nip domain name local.lab\r\
    \nip name-server {{ name_server_pri }}\r\nip name-server {{ name_server_sec }}\r\
    \n\r\nntp server {{ ntp_server_pri }} prefer\r\nntp server {{ ntp_server_sec }}"
  match2: ''
  match3: ''
  match_type1: jinja2
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Jinja2 Template] Apply jinja2 Template'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Jinja2 Template: [72, 107]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  query1: get_result("Define Input Variables")["result"]["jinja2"]
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Apply jinja2 Template
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: success
  validation_method: text
  validation_section: results["result"]["Jinja2 value"]["value"]
  variable1: Jinja2 value
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 57d6700c-a22b-4f23-b9a8-eeb7931d5f7e
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-07-25 07:58:35.248975'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Jinja2 Template] Define Input Variables'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Jinja2 Template: [-266, 195]
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Define Input Variables
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  source_code: "results[\"success\"] = True\r\nresults[\"result\"] = {\r\n  \t\"jinja2\"\
    : {\r\n        \"hostname\": \"core-sw-waw-01\",\r\n        \"name_server_pri\"\
    : \"1.1.1.1\",\r\n        \"name_server_sec\": \"8.8.8.8\",\r\n        \"ntp_server_pri\"\
    : \"0.pool.ntp.org\",\r\n        \"ntp_server_sec\": \"1.pool.ntp.org\",\r\n\t\
    },\r\n  \t\"ttp\": \"\"\"interface Loopback0\r\n description Router-id-loopback\r\
    \n ip address 192.168.0.113/24\r\n!\r\ninterface Vlan778\r\n description CPE_Acces_Vlan\r\
    \n ip address 2002::fd37/124\r\n ip vrf CPE1\r\n!\"\"\"\r\n}"
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: python_snippet_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  category: Services
  close_connection: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  custom_property: Default Value
  default_uuid: e1d27b95-ee07-44ab-9501-079bd14215fd
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  labels:
    854236db-efe1-47cd-8be6-7e18374a43f8:
      alignment: left
      content: "is_string = isinstance(results[\"result\"], str)\r\nvalid_content\
        \ = (\r\n  \"VRF\" in results[\"result\"]\r\n  and \"Loopback\" in results[\"\
        result\"]\r\n  and \"vty\" in results[\"result\"]\r\n)\r\nresults[\"success\"\
        ] = is_string and valid_content\r\n"
      positions: [-116, -16]
      size: 14
    8b146c75-48a1-42d0-88e1-97f8c9a88ae4:
      alignment: left
      content: "is_list = isinstance(results[\"result\"], list)\r\nvalid_result =\
        \ True\r\nfor index, vrf in enumerate((\"a\", \"b\", \"c\")):\r\n  if (\r\n\
        \    f\"show vrf {vrf}\" not in results[\"commands\"]\r\n    or \"Protocols\"\
        \ not in results[\"result\"][index]\r\n  ):\r\n    valid_result = False\r\n\
        results[\"success\"] = is_list and valid_result"
      positions: [310, 327]
      size: 14
    c1b2632b-1f52-4a63-84e0-73b56e179f03:
      alignment: left
      content: "is_list = isinstance(results[\"result\"], list)\r\nvalid_content =\
        \ (\r\n  \"VRF\" in results[\"result\"][0]\r\n  and \"Loopback\" in results[\"\
        result\"][1]\r\n  and \"vty\" in results[\"result\"][2]\r\n)\r\nresults[\"\
        success\"] = is_list and valid_content"
      positions: [-115, 329]
      size: 14
    d04ed45e-d3e6-49ce-94a6-b882b3b2af44:
      alignment: left
      content: "is_string = isinstance(results[\"result\"], str)\r\nvalid_commands\
        \ = True\r\nfor vrf in (\"a\", \"b\", \"c\"):\r\n  if f\"show vrf {vrf}\"\
        \ not in results[\"commands\"]:\r\n    valid_commands = False\r\nvalid_content\
        \ = results[\"result\"].count(\"Interfaces\") == 3\r\nresults[\"success\"\
        ] = is_string and valid_commands and valid_content"
      positions: [337, -13]
      size: 14
  last_modified: '2022-07-13 03:39:11.984525'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: (R) Scrapli and Netmiko Multiple Commands and Jinja2
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions: {}
  postprocessing: ''
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  run_method: per_device
  scoped_name: (R) Scrapli and Netmiko Multiple Commands and Jinja2
  send_notification: false
  send_notification_method: mail
  services: ['[Shared] Start', '[Shared] End', '[(R) Scrapli and Netmiko Multiple
      Commands and Jinja2] Scrapli Multiple Commands (text)', '[(R) Scrapli and Netmiko
      Multiple Commands and Jinja2] Scrapli Multiple Commands (list)', '[(R) Scrapli
      and Netmiko Multiple Commands and Jinja2] Netmiko Jinja 2 conversion (text)',
    '[(R) Scrapli and Netmiko Multiple Commands and Jinja2] Netmiko Jinja 2 conversion
      (list)']
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: [Washington]
  target_pools: []
  time_between_retries: 10
  type: workflow
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  commands: "show vrf\r\nshow ip int br\r\nshow users"
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 8733ec48-f66a-4e3c-9a9c-5ac7ddea5bd4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2022-07-13 02:39:00.258456'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli and Netmiko Multiple Commands and Jinja2] Scrapli Multiple Commands
    (text)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli and Netmiko Multiple Commands and Jinja2: [-142, 93]
  postprocessing: "is_string = isinstance(results[\"result\"], str)\r\nvalid_content\
    \ = (\r\n  \"VRF\" in results[\"result\"]\r\n  and \"Loopback\" in results[\"\
    result\"]\r\n  and \"vty\" in results[\"result\"]\r\n)\r\nresults[\"success\"\
    ] = is_string and valid_content\r\n"
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Scrapli Multiple Commands (text)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  close_connection: false
  commands: "show vrf\r\nshow ip int br\r\nshow users"
  completion_time: 1
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 8733ec48-f66a-4e3c-9a9c-5ac7ddea5bd4
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  is_configuration: false
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: false
  last_modified: '2022-07-13 02:39:38.241424'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli and Netmiko Multiple Commands and Jinja2] Scrapli Multiple Commands
    (list)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli and Netmiko Multiple Commands and Jinja2: [-147, 204]
  postprocessing: "is_list = isinstance(results[\"result\"], list)\r\nvalid_content\
    \ = (\r\n  \"VRF\" in results[\"result\"][0]\r\n  and \"Loopback\" in results[\"\
    result\"][1]\r\n  and \"vty\" in results[\"result\"][2]\r\n)\r\nresults[\"success\"\
    ] = is_list and valid_content\r\n"
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Scrapli Multiple Commands (list)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout_ops: 30.0
  timeout_socket: 15.0
  timeout_transport: 30.0
  transport: system
  type: scrapli_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: "{%- for vrf in (\"a\", \"b\", \"c\") -%}\r\nshow vrf {{ vrf }}\r\n{%\
    \ endfor %}"
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 85001988-1b1f-4feb-9dee-12a8e994dad9
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: true
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2022-07-13 03:21:34.458029'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli and Netmiko Multiple Commands and Jinja2] Netmiko Jinja 2 conversion
    (text)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli and Netmiko Multiple Commands and Jinja2: [273, 88]
  postprocessing: "is_string = isinstance(results[\"result\"], str)\r\nvalid_commands\
    \ = True\r\nfor vrf in (\"a\", \"b\", \"c\"):\r\n  if f\"show vrf {vrf}\" not\
    \ in results[\"commands\"]:\r\n    valid_commands = False\r\nvalid_content = results[\"\
    result\"].count(\"Interfaces\") == 3\r\nresults[\"success\"] = is_string and valid_commands\
    \ and valid_content\r\n"
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  results_as_list: false
  run_method: per_device
  scoped_name: Netmiko Jinja 2 conversion (text)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  auto_find_prompt: true
  close_connection: false
  commands: "{%- for vrf in (\"a\", \"b\", \"c\") -%}\r\nshow vrf {{ vrf }}\r\n{%\
    \ endfor %}"
  completion_time: 1
  config_mode: false
  config_mode_command: ''
  connection_name: default
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  credentials: device
  custom_password: ''
  custom_username: ''
  default_uuid: 85001988-1b1f-4feb-9dee-12a8e994dad9
  definition: Definition
  delay_factor: 1.0
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  driver: device
  enable_mode: true
  exit_command: exit
  expect_password_prompt: password
  expect_prompt: admin.*$
  expect_string: ''
  expect_username_prompt: 'username:'
  fast_cli: false
  global_delay_factor: 1.0
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  jinja2_template: true
  jump_command: ssh jump_server_IP
  jump_on_connect: false
  jump_password: ''
  jump_username: ''
  last_modified: '2022-07-13 03:33:28.643596'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Scrapli and Netmiko Multiple Commands and Jinja2] Netmiko Jinja 2 conversion
    (list)'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    (R) Scrapli and Netmiko Multiple Commands and Jinja2: [273, 198]
  postprocessing: "is_list = isinstance(results[\"result\"], list)\r\nvalid_result\
    \ = True\r\nfor index, vrf in enumerate((\"a\", \"b\", \"c\")):\r\n  if (\r\n\
    \    f\"show vrf {vrf}\" not in results[\"commands\"]\r\n    or \"Protocols\"\
    \ not in results[\"result\"][index]\r\n  ):\r\n    valid_result = False\r\nresults[\"\
    success\"] = is_list and valid_result"
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  reply_to: ''
  reserved: false
  results_as_list: true
  run_method: per_device
  scoped_name: Netmiko Jinja 2 conversion (list)
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  start_new_connection: false
  strip_command: true
  strip_prompt: true
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 10.0
  type: netmiko_commands_service
  update_pools_after_running: false
  update_target_pools: false
  use_genie: false
  use_textfsm: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: ''
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  count: 5
  creator: admin
  credential_type: any
  default_uuid: 2caab1c2-7ef6-4977-ba4a-4cb6eef438ec
  definition: Definition
  delete_spaces_before_matching: false
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  ip_address: 127.0.{{ "0" + ".1"}}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-07-21 12:13:16.912535'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[(R) Unix Command & Chell, Ping Service, Jump on Connect mechanism] Ping
    Custom IP'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  owners: []
  owners_access: '[]'
  packet_size: 56
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  ports: '22'
  positions:
    (R) Unix Command & Chell, Ping Service, Jump on Connect mechanism: [155, 189]
  postprocessing: ''
  postprocessing_mode: always
  preprocessing: ''
  priority: 11
  protocol: ICMP
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Ping Custom IP
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  timeout: 2
  ttl: 60
  type: ping_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: results['result']
  vendor: ''
  waiting_time: 0
- access_groups: admin
  admin_only: false
  completion_time: 1
  content_match: ''
  content_match_regex: false
  conversion_method: none
  creator: admin
  credential_type: any
  default_uuid: 479273ac-164c-46fd-a720-1775f95cb5da
  definition: Definition
  delete_spaces_before_matching: true
  description: ''
  device_query: ''
  device_query_property: name
  dict_match: {}
  disable_result_creation: false
  display_only_failed_nodes: false
  impacting: true
  include_device_results: false
  include_link_in_summary: false
  initial_payload: {}
  iteration_devices: ''
  iteration_devices_property: name
  iteration_values: ''
  iteration_variable_name: iteration_value
  last_modified: '2022-07-25 08:13:53.939594'
  log_level: 1
  mail_recipient: ''
  mandatory_parametrization: false
  match1: "interface {{ interface }}\r\n ip address {{ ip }}/{{ mask }}\r\n description\
    \ {{ description }}\r\n ip vrf {{ vrf }}"
  match2: ''
  match3: ''
  match_type1: ttp
  match_type2: none
  match_type3: none
  max_number_of_retries: 100
  max_processes: 15
  maximum_runs: 1
  multiprocessing: false
  name: '[Data Extraction Jinja2 Template] Apply TTP Template'
  negative_logic: false
  notification_header: ''
  number_of_retries: 0
  operating_system: ''
  operation1: __setitem__
  operation2: __setitem__
  operation3: __setitem__
  owners: []
  owners_access: '[]'
  parameterized_form: "name = StringField('Name', [InputRequired()])\r\ninitial_payload\
    \ = DictField()\r\ntarget_devices = MultipleInstanceField('Devices', model='device')\r\
    \ntarget_pools = MultipleInstanceField('Pools', model='pool')\r\ndevice_query\
    \ = StringField('Device Query', python=True, widget=TextArea(), render_kw={'rows':\
    \ 2})\r\ndevice_query_property = SelectField('Query Property Type', choices=(('name',\
    \ 'Name'), ('ip_address', 'IP address')))\r\nmultiprocessing = BooleanField('Multiprocessing',\
    \ default=False)\r\nmax_processes = IntegerField('Maximum number of processes',\
    \ default=15)"
  pools: [Everything]
  positions:
    Data Extraction Jinja2 Template: [80, 246]
  postprocessing: "results[\"success\"] = results[\"result\"][\"TTP value\"][\"value\"\
    ] == [\r\n    [\r\n        {\r\n            \"description\": \"Router-id-loopback\"\
    ,\r\n            \"interface\": \"Loopback0\",\r\n            \"ip\": \"192.168.0.113\"\
    ,\r\n            \"mask\": \"24\"\r\n        },\r\n        {\r\n            \"\
    description\": \"CPE_Acces_Vlan\",\r\n            \"interface\": \"Vlan778\",\r\
    \n            \"ip\": \"2002::fd37\",\r\n            \"mask\": \"124\",\r\n  \
    \          \"vrf\": \"CPE1\"\r\n        }\r\n    ]\r\n]"
  postprocessing_mode: success
  preprocessing: ''
  priority: 10
  query1: get_result("Define Input Variables")["result"]["ttp"]
  query2: ''
  query3: ''
  reply_to: ''
  reserved: false
  run_method: once
  scoped_name: Apply TTP Template
  send_notification: false
  send_notification_method: mail
  shared: false
  skip: {}
  skip_query: ''
  skip_value: success
  target_devices: []
  target_pools: []
  time_between_retries: 10
  type: data_processing_service
  update_pools_after_running: false
  update_target_pools: false
  validation_condition: none
  validation_method: text
  validation_section: ''
  variable1: TTP value
  variable2: ''
  variable3: ''
  vendor: ''
  waiting_time: 0

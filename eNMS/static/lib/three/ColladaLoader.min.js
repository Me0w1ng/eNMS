!function(){THREE.ColladaLoader=class extends THREE.Loader{constructor(e){super(e)}load(e,t,n,s){const o=this,i=""===o.path?THREE.LoaderUtils.extractUrlBase(e):o.path,r=new THREE.FileLoader(o.manager);r.setPath(o.path),r.setRequestHeader(o.requestHeader),r.setWithCredentials(o.withCredentials),r.load(e,function(n){try{t(o.parse(n,i))}catch(t){s?s(t):console.error(t),o.manager.itemError(e)}},n,s)}parse(e,t){function n(e,t){const n=[],s=e.childNodes;for(let e=0,o=s.length;e<o;e++){const o=s[e];o.nodeName===t&&n.push(o)}return n}function s(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let e=0,s=t.length;e<s;e++)n[e]=t[e];return n}function o(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let e=0,s=t.length;e<s;e++)n[e]=parseFloat(t[e]);return n}function i(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let e=0,s=t.length;e<s;e++)n[e]=parseInt(t[e]);return n}function r(e){return e.substring(1)}function a(e){return 0===Object.keys(e).length}function c(e){return void 0!==e&&!0===e.hasAttribute("meter")?parseFloat(e.getAttribute("meter")):1}function l(e){return void 0!==e?e.textContent:"Y_UP"}function d(e,t,s,o){const i=n(e,t)[0];if(void 0!==i){const e=n(i,s);for(let t=0;t<e.length;t++)o(e[t])}}function u(e,t){for(const n in e)e[n].build=t(e[n])}function f(e,t){return void 0!==e.build?e.build:(e.build=t(e),e.build)}function h(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=r(s.getAttribute("source")),n=s.getAttribute("semantic");t.inputs[n]=e}}return t}function m(e){const t={};let n=e.getAttribute("target").split("/");const s=n.shift();let o=n.shift();const i=-1!==o.indexOf("("),a=-1!==o.indexOf(".");if(a)n=o.split("."),o=n.shift(),t.member=n.shift();else if(i){const e=o.split("(");o=e.shift();for(let t=0;t<e.length;t++)e[t]=parseInt(e[t].replace(/\)/,""));t.indices=e}return t.id=s,t.sid=o,t.arraySyntax=i,t.memberSyntax=a,t.sampler=r(e.getAttribute("source")),t}function p(e){const t=[],n=e.channels,s=e.samplers,o=e.sources;for(const e in n)if(n.hasOwnProperty(e)){const i=n[e],r=s[i.sampler],a=r.inputs.INPUT,c=r.inputs.OUTPUT;T(b(i,o[a],o[c]),t)}return t}function g(e){return f(Xe.animations[e],p)}function b(e,t,n){const s=Xe.nodes[e.id],o=je(s.id),i=s.transforms[e.sid],r=s.matrix.clone().transpose();let a,c,l,d,u,f;const h={};switch(i){case"matrix":for(l=0,d=t.array.length;l<d;l++)if(a=t.array[l],c=l*n.stride,void 0===h[a]&&(h[a]={}),!0===e.arraySyntax){const t=n.array[c],s=e.indices[0]+4*e.indices[1];h[a][s]=t}else for(u=0,f=n.stride;u<f;u++)h[a][u]=n.array[c+u];break;case"translate":case"rotate":case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',i)}const m=function(e,t){const n=[];for(const t in e)n.push({time:parseFloat(t),value:e[t]});n.sort(function(e,t){return e.time-t.time});for(let e=0;e<16;e++)w(n,e,t.elements[e]);return n}(h,r);return{name:o.uuid,keyframes:m}}const y=new THREE.Vector3,E=new THREE.Vector3,N=new THREE.Quaternion;function T(e,t){const n=e.keyframes,s=e.name,o=[],i=[],r=[],a=[];for(let e=0,t=n.length;e<t;e++){const t=n[e],s=t.time,c=t.value;ke.fromArray(c).transpose(),ke.decompose(y,N,E),o.push(s),i.push(y.x,y.y,y.z),r.push(N.x,N.y,N.z,N.w),a.push(E.x,E.y,E.z)}return i.length>0&&t.push(new THREE.VectorKeyframeTrack(s+".position",o,i)),r.length>0&&t.push(new THREE.QuaternionKeyframeTrack(s+".quaternion",o,r)),a.length>0&&t.push(new THREE.VectorKeyframeTrack(s+".scale",o,a)),t}function w(e,t,n){let s,o,i,r=!0;for(o=0,i=e.length;o<i;o++)void 0===(s=e[o]).value[t]?s.value[t]=null:r=!1;if(!0===r)for(o=0,i=e.length;o<i;o++)(s=e[o]).value[t]=n;else!function(e,t){let n,s;for(let o=0,i=e.length;o<i;o++){const i=e[o];if(null===i.value[t]){if(n=x(e,o,t),s=k(e,o,t),null===n){i.value[t]=s.value[t];continue}if(null===s){i.value[t]=n.value[t];continue}A(i,n,s,t)}}}(e,t)}function x(e,t,n){for(;t>=0;){const s=e[t];if(null!==s.value[n])return s;t--}return null}function k(e,t,n){for(;t<e.length;){const s=e[t];if(null!==s.value[n])return s;t++}return null}function A(e,t,n,s){n.time-t.time!=0?e.value[s]=(e.time-t.time)*(n.value[s]-t.value[s])/(n.time-t.time)+t.value[s]:e.value[s]=t.value[s]}function R(e){const t=[],n=e.name,s=e.end-e.start||-1,o=e.animations;for(let e=0,n=o.length;e<n;e++){const n=g(o[e]);for(let e=0,s=n.length;e<s;e++)t.push(n[e])}return new THREE.AnimationClip(n,s,t)}function v(e){return f(Xe.clips[e],R)}function H(e){const t={sources:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"bind_shape_matrix":t.bindShapeMatrix=o(s.textContent);break;case"source":const e=s.getAttribute("id");t.sources[e]=oe(s);break;case"joints":t.joints=C(s);break;case"vertex_weights":t.vertexWeights=_(s)}}return t}function C(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=s.getAttribute("semantic"),n=r(s.getAttribute("source"));t.inputs[e]=n}}return t}function _(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=s.getAttribute("semantic"),n=r(s.getAttribute("source")),o=parseInt(s.getAttribute("offset"));t.inputs[e]={id:n,offset:o};break;case"vcount":t.vcount=i(s.textContent);break;case"v":t.v=i(s.textContent)}}return t}function M(e){const t={id:e.id},n=Xe.geometries[t.id];return void 0!==e.skin&&(t.skin=function(e){const t={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},n=e.sources,s=e.vertexWeights,o=s.vcount,i=s.v,r=s.inputs.JOINT.offset,a=s.inputs.WEIGHT.offset,c=e.sources[e.joints.inputs.JOINT],l=e.sources[e.joints.inputs.INV_BIND_MATRIX],d=n[s.inputs.WEIGHT.id].array;let u,f,h,m=0;for(u=0,h=o.length;u<h;u++){const e=o[u],n=[];for(f=0;f<e;f++){const e=i[m+r],t=i[m+a],s=d[t];n.push({index:e,weight:s}),m+=2}for(n.sort(p),f=0;f<4;f++){const e=n[f];void 0!==e?(t.indices.array.push(e.index),t.weights.array.push(e.weight)):(t.indices.array.push(0),t.weights.array.push(0))}}for(e.bindShapeMatrix?t.bindMatrix=(new THREE.Matrix4).fromArray(e.bindShapeMatrix).transpose():t.bindMatrix=(new THREE.Matrix4).identity(),u=0,h=c.array.length;u<h;u++){const e=c.array[u],n=(new THREE.Matrix4).fromArray(l.array,u*l.stride).transpose();t.joints.push({name:e,boneInverse:n})}return t;function p(e,t){return t.weight-e.weight}}(e.skin),n.sources.skinIndices=t.skin.indices,n.sources.skinWeights=t.skin.weights),t}function L(e){return void 0!==e.build?e.build:e.init_from}function O(e){const t=Xe.images[e];return void 0!==t?f(t,L):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",e),null)}function I(e){const t={surfaces:{},samplers:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"newparam":j(s,t);break;case"technique":t.technique=U(s);break;case"extra":t.extra=W(s)}}return t}function j(e,t){const n=e.getAttribute("sid");for(let s=0,o=e.childNodes.length;s<o;s++){const o=e.childNodes[s];if(1===o.nodeType)switch(o.nodeName){case"surface":t.surfaces[n]=q(o);break;case"sampler2D":t.samplers[n]=S(o)}}}function q(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"init_from":t.init_from=s.textContent}}return t}function S(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"source":t.source=s.textContent}}return t}function U(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"constant":case"lambert":case"blinn":case"phong":t.type=s.nodeName,t.parameters=F(s)}}return t}function F(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":t[s.nodeName]=B(s);break;case"transparent":t[s.nodeName]={opaque:s.getAttribute("opaque"),data:B(s)}}}return t}function B(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"color":t[s.nodeName]=o(s.textContent);break;case"float":t[s.nodeName]=parseFloat(s.textContent);break;case"texture":t[s.nodeName]={id:s.getAttribute("texture"),extra:V(s)}}}return t}function V(e){const t={technique:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"extra":P(s,t)}}return t}function P(e,t){for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique":D(s,t)}}}function D(e,t){for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":t.technique[s.nodeName]=parseFloat(s.textContent);break;case"wrapU":case"wrapV":"TRUE"===s.textContent.toUpperCase()?t.technique[s.nodeName]=1:"FALSE"===s.textContent.toUpperCase()?t.technique[s.nodeName]=0:t.technique[s.nodeName]=parseInt(s.textContent)}}}function W(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique":t.technique=z(s)}}return t}function z(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"double_sided":t[s.nodeName]=parseInt(s.textContent)}}return t}function G(e){return e}function J(e){const t=(n=e.url,f(Xe.effects[n],G));var n;const s=t.profile.technique,o=t.profile.extra;let i;switch(s.type){case"phong":case"blinn":i=new THREE.MeshPhongMaterial;break;case"lambert":i=new THREE.MeshLambertMaterial;break;default:i=new THREE.MeshBasicMaterial}function r(e){const n=t.profile.samplers[e.id];let s=null;if(void 0!==n?s=O(t.profile.surfaces[n.source].init_from):(console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),s=O(e.id)),null!==s){const t=function(e){let t,n=e.slice(2+(e.lastIndexOf(".")-1>>>0));switch(n=n.toLowerCase()){case"tga":t=We;break;default:t=De}return t}(s);if(void 0!==t){const n=t.load(s),o=e.extra;if(void 0!==o&&void 0!==o.technique&&!1===a(o.technique)){const e=o.technique;n.wrapS=e.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,n.wrapT=e.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,n.offset.set(e.offsetU||0,e.offsetV||0),n.repeat.set(e.repeatU||1,e.repeatV||1)}else n.wrapS=THREE.RepeatWrapping,n.wrapT=THREE.RepeatWrapping;return n}return console.warn("THREE.ColladaLoader: THREE.Loader for texture %s not found.",s),null}return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",e.id),null}i.name=e.name||"";const c=s.parameters;for(const e in c){const t=c[e];switch(e){case"diffuse":t.color&&i.color.fromArray(t.color),t.texture&&(i.map=r(t.texture));break;case"specular":t.color&&i.specular&&i.specular.fromArray(t.color),t.texture&&(i.specularMap=r(t.texture));break;case"bump":t.texture&&(i.normalMap=r(t.texture));break;case"ambient":t.texture&&(i.lightMap=r(t.texture));break;case"shininess":t.float&&i.shininess&&(i.shininess=t.float);break;case"emission":t.color&&i.emissive&&i.emissive.fromArray(t.color),t.texture&&(i.emissiveMap=r(t.texture))}}let l=c.transparent,d=c.transparency;if(void 0===d&&l&&(d={float:1}),void 0===l&&d&&(l={opaque:"A_ONE",data:{color:[1,1,1,1]}}),l&&d)if(l.data.texture)i.transparent=!0;else{const e=l.data.color;switch(l.opaque){case"A_ONE":i.opacity=e[3]*d.float;break;case"RGB_ZERO":i.opacity=1-e[0]*d.float;break;case"A_ZERO":i.opacity=1-e[3]*d.float;break;case"RGB_ONE":i.opacity=e[0]*d.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',l.opaque)}i.opacity<1&&(i.transparent=!0)}return void 0!==o&&void 0!==o.technique&&1===o.technique.double_sided&&(i.side=THREE.DoubleSide),i}function X(e){return f(Xe.materials[e],J)}function K(e){for(let t=0;t<e.childNodes.length;t++){const n=e.childNodes[t];switch(n.nodeName){case"technique_common":return Z(n)}}return{}}function Z(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"perspective":case"orthographic":t.technique=s.nodeName,t.parameters=Q(s)}}return t}function Q(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":t[s.nodeName]=parseFloat(s.textContent)}}return t}function Y(e){let t;switch(e.optics.technique){case"perspective":t=new THREE.PerspectiveCamera(e.optics.parameters.yfov,e.optics.parameters.aspect_ratio,e.optics.parameters.znear,e.optics.parameters.zfar);break;case"orthographic":let n=e.optics.parameters.ymag,s=e.optics.parameters.xmag;const o=e.optics.parameters.aspect_ratio;s=void 0===s?n*o:s,n=void 0===n?s/o:n,s*=.5,n*=.5,t=new THREE.OrthographicCamera(-s,s,n,-n,e.optics.parameters.znear,e.optics.parameters.zfar);break;default:t=new THREE.PerspectiveCamera}return t.name=e.name||"",t}function $(e){const t=Xe.cameras[e];return void 0!==t?f(t,Y):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",e),null)}function ee(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"directional":case"point":case"spot":case"ambient":t.technique=s.nodeName,t.parameters=te(s)}}return t}function te(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"color":const e=o(s.textContent);t.color=(new THREE.Color).fromArray(e);break;case"falloff_angle":t.falloffAngle=parseFloat(s.textContent);break;case"quadratic_attenuation":const n=parseFloat(s.textContent);t.distance=n?Math.sqrt(1/n):0}}return t}function ne(e){let t;switch(e.technique){case"directional":t=new THREE.DirectionalLight;break;case"point":t=new THREE.PointLight;break;case"spot":t=new THREE.SpotLight;break;case"ambient":t=new THREE.AmbientLight}return e.parameters.color&&t.color.copy(e.parameters.color),e.parameters.distance&&(t.distance=e.parameters.distance),t}function se(e){const t=Xe.lights[e];return void 0!==t?f(t,ne):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",e),null)}function oe(e){const t={array:[],stride:3};for(let i=0;i<e.childNodes.length;i++){const r=e.childNodes[i];if(1===r.nodeType)switch(r.nodeName){case"float_array":t.array=o(r.textContent);break;case"Name_array":t.array=s(r.textContent);break;case"technique_common":const e=n(r,"accessor")[0];void 0!==e&&(t.stride=parseInt(e.getAttribute("stride")))}}return t}function ie(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];1===s.nodeType&&(t[s.getAttribute("semantic")]=r(s.getAttribute("source")))}return t}function re(e){const t={type:e.nodeName,material:e.getAttribute("material"),count:parseInt(e.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=r(s.getAttribute("source")),n=s.getAttribute("semantic"),o=parseInt(s.getAttribute("offset")),a=parseInt(s.getAttribute("set")),c=a>0?n+a:n;t.inputs[c]={id:e,offset:o},t.stride=Math.max(t.stride,o+1),"TEXCOORD"===n&&(t.hasUV=!0);break;case"vcount":t.vcount=i(s.textContent);break;case"p":t.p=i(s.textContent)}}return t}function ae(e){let t=0;for(let n=0,s=e.length;n<s;n++)!0===e[n].hasUV&&t++;t>0&&t<e.length&&(e.uvsNeedsFix=!0)}function ce(e){const t={},n=e.sources,s=e.vertices,o=e.primitives;if(0===o.length)return{};const i=function(e){const t={};for(let n=0;n<e.length;n++){const s=e[n];void 0===t[s.type]&&(t[s.type]=[]),t[s.type].push(s)}return t}(o);for(const e in i){const o=i[e];ae(o),t[e]=le(o,n,s)}return t}function le(e,t,n){const s={},o={array:[],stride:0},i={array:[],stride:0},r={array:[],stride:0},a={array:[],stride:0},c={array:[],stride:0},l=[],d=4,u=[],f=4,h=new THREE.BufferGeometry,m=[];let p=0;for(let s=0;s<e.length;s++){const d=e[s],f=d.inputs;let g=0;switch(d.type){case"lines":case"linestrips":g=2*d.count;break;case"triangles":g=3*d.count;break;case"polylist":for(let e=0;e<d.count;e++){const t=d.vcount[e];switch(t){case 3:g+=3;break;case 4:g+=6;break;default:g+=3*(t-2)}}break;default:console.warn("THREE.ColladaLoader: Unknow primitive type:",d.type)}h.addGroup(p,g,s),p+=g,d.material&&m.push(d.material);for(const s in f){const h=f[s];switch(s){case"VERTEX":for(const s in n){const f=n[s];switch(s){case"POSITION":const n=o.array.length;if(de(d,t[f],h.offset,o.array),o.stride=t[f].stride,t.skinWeights&&t.skinIndices&&(de(d,t.skinIndices,h.offset,l),de(d,t.skinWeights,h.offset,u)),!1===d.hasUV&&!0===e.uvsNeedsFix){const e=(o.array.length-n)/o.stride;for(let t=0;t<e;t++)r.array.push(0,0)}break;case"NORMAL":de(d,t[f],h.offset,i.array),i.stride=t[f].stride;break;case"COLOR":de(d,t[f],h.offset,c.array),c.stride=t[f].stride;break;case"TEXCOORD":de(d,t[f],h.offset,r.array),r.stride=t[f].stride;break;case"TEXCOORD1":de(d,t[f],h.offset,a.array),r.stride=t[f].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',s)}}break;case"NORMAL":de(d,t[h.id],h.offset,i.array),i.stride=t[h.id].stride;break;case"COLOR":de(d,t[h.id],h.offset,c.array),c.stride=t[h.id].stride;break;case"TEXCOORD":de(d,t[h.id],h.offset,r.array),r.stride=t[h.id].stride;break;case"TEXCOORD1":de(d,t[h.id],h.offset,a.array),a.stride=t[h.id].stride}}}return o.array.length>0&&h.setAttribute("position",new THREE.Float32BufferAttribute(o.array,o.stride)),i.array.length>0&&h.setAttribute("normal",new THREE.Float32BufferAttribute(i.array,i.stride)),c.array.length>0&&h.setAttribute("color",new THREE.Float32BufferAttribute(c.array,c.stride)),r.array.length>0&&h.setAttribute("uv",new THREE.Float32BufferAttribute(r.array,r.stride)),a.array.length>0&&h.setAttribute("uv2",new THREE.Float32BufferAttribute(a.array,a.stride)),l.length>0&&h.setAttribute("skinIndex",new THREE.Float32BufferAttribute(l,d)),u.length>0&&h.setAttribute("skinWeight",new THREE.Float32BufferAttribute(u,f)),s.data=h,s.type=e[0].type,s.materialKeys=m,s}function de(e,t,n,s){const o=e.p,i=e.stride,r=e.vcount;function a(e){let t=o[e+n]*l;const i=t+l;for(;t<i;t++)s.push(c[t])}const c=t.array,l=t.stride;if(void 0!==e.vcount){let e=0;for(let t=0,n=r.length;t<n;t++){const n=r[t];if(4===n){const t=e+1*i,n=e+2*i,s=e+3*i;a(e+0*i),a(t),a(s),a(t),a(n),a(s)}else if(3===n){const t=e+1*i,n=e+2*i;a(e+0*i),a(t),a(n)}else if(n>4)for(let t=1,s=n-2;t<=s;t++){const n=e+i*t,s=e+i*(t+1);a(e+0*i),a(n),a(s)}e+=i*n}}else for(let e=0,t=o.length;e<t;e+=i)a(e)}function ue(e){return f(Xe.geometries[e],ce)}function fe(e){return void 0!==e.build?e.build:e}function he(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"joint":t.joints[s.getAttribute("sid")]=me(s);break;case"link":t.links.push(ge(s))}}}function me(e){let t;for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"prismatic":case"revolute":t=pe(s)}}return t}function pe(e){const t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",axis:new THREE.Vector3,limits:{min:0,max:0},type:e.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"axis":const e=o(s.textContent);t.axis.fromArray(e);break;case"limits":const n=s.getElementsByTagName("max")[0],i=s.getElementsByTagName("min")[0];t.limits.max=parseFloat(n.textContent),t.limits.min=parseFloat(i.textContent)}}return t.limits.min>=t.limits.max&&(t.static=!0),t.middlePosition=(t.limits.min+t.limits.max)/2,t}function ge(e){const t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",attachments:[],transforms:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"attachment_full":t.attachments.push(be(s));break;case"matrix":case"translate":case"rotate":t.transforms.push(ye(s))}}return t}function be(e){const t={joint:e.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"link":t.links.push(ge(s));break;case"matrix":case"translate":case"rotate":t.transforms.push(ye(s))}}return t}function ye(e){const t={type:e.nodeName},n=o(e.textContent);switch(t.type){case"matrix":t.obj=new THREE.Matrix4,t.obj.fromArray(n).transpose();break;case"translate":t.obj=new THREE.Vector3,t.obj.fromArray(n);break;case"rotate":t.obj=new THREE.Vector3,t.obj.fromArray(n),t.angle=THREE.MathUtils.degToRad(n[3])}return t}function Ee(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique_common":Ne(s,t)}}}function Ne(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"inertia":t.inertia=o(s.textContent);break;case"mass":t.mass=o(s.textContent)[0]}}}function Te(e){const t={target:e.getAttribute("target").split("/").pop()};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"axis":const e=s.getElementsByTagName("param")[0];t.axis=e.textContent;const n=t.axis.split("inst_").pop().split("axis")[0];t.jointIndex=n.substr(0,n.length-1)}}return t}function we(e){return void 0!==e.build?e.build:e}function xe(e){const t=[],n=Fe.querySelector('[id="'+e.id+'"]');for(let e=0;e<n.childNodes.length;e++){const s=n.childNodes[e];if(1!==s.nodeType)continue;let i,r;switch(s.nodeName){case"matrix":i=o(s.textContent);const e=(new THREE.Matrix4).fromArray(i).transpose();t.push({sid:s.getAttribute("sid"),type:s.nodeName,obj:e});break;case"translate":case"scale":i=o(s.textContent),r=(new THREE.Vector3).fromArray(i),t.push({sid:s.getAttribute("sid"),type:s.nodeName,obj:r});break;case"rotate":i=o(s.textContent),r=(new THREE.Vector3).fromArray(i);const n=THREE.MathUtils.degToRad(i[3]);t.push({sid:s.getAttribute("sid"),type:s.nodeName,obj:r,angle:n})}}return t}const ke=new THREE.Matrix4,Ae=new THREE.Vector3;function Re(e){const t={name:e.getAttribute("name")||"",type:e.getAttribute("type"),id:e.getAttribute("id"),sid:e.getAttribute("sid"),matrix:new THREE.Matrix4,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1!==s.nodeType)continue;let i;switch(s.nodeName){case"node":t.nodes.push(s.getAttribute("id")),Re(s);break;case"instance_camera":t.instanceCameras.push(r(s.getAttribute("url")));break;case"instance_controller":t.instanceControllers.push(ve(s));break;case"instance_light":t.instanceLights.push(r(s.getAttribute("url")));break;case"instance_geometry":t.instanceGeometries.push(ve(s));break;case"instance_node":t.instanceNodes.push(r(s.getAttribute("url")));break;case"matrix":i=o(s.textContent),t.matrix.multiply(ke.fromArray(i).transpose()),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"translate":i=o(s.textContent),Ae.fromArray(i),t.matrix.multiply(ke.makeTranslation(Ae.x,Ae.y,Ae.z)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"rotate":i=o(s.textContent);const e=THREE.MathUtils.degToRad(i[3]);t.matrix.multiply(ke.makeRotationAxis(Ae.fromArray(i),e)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"scale":i=o(s.textContent),t.matrix.scale(Ae.fromArray(i)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"extra":break;default:console.log(s)}}return Ie(t.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",t.id):Xe.nodes[t.id]=t,t}function ve(e){const t={id:r(e.getAttribute("url")),materials:{},skeletons:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"bind_material":const e=s.getElementsByTagName("instance_material");for(let n=0;n<e.length;n++){const s=e[n],o=s.getAttribute("symbol"),i=s.getAttribute("target");t.materials[o]=r(i)}break;case"skeleton":t.skeletons.push(r(s.textContent))}}return t}function He(e,t){const n=[],s=[];let o,i,r;for(o=0;o<e.length;o++){const s=e[o];let i;if(Ie(s))Ce(i=je(s),t,n);else if(a=s,void 0!==Xe.visualScenes[a]){const e=Xe.visualScenes[s].children;for(let s=0;s<e.length;s++){const o=e[s];"JOINT"===o.type&&Ce(je(o.id),t,n)}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",s)}var a;for(o=0;o<t.length;o++)for(i=0;i<n.length;i++)if((r=n[i]).bone.name===t[o].name){s[o]=r,r.processed=!0;break}for(o=0;o<n.length;o++)!1===(r=n[o]).processed&&(s.push(r),r.processed=!0);const c=[],l=[];for(o=0;o<s.length;o++)r=s[o],c.push(r.bone),l.push(r.boneInverse);return new THREE.Skeleton(c,l)}function Ce(e,t,n){e.traverse(function(e){if(!0===e.isBone){let s;for(let n=0;n<t.length;n++){const o=t[n];if(o.name===e.name){s=o.boneInverse;break}}void 0===s&&(s=new THREE.Matrix4),n.push({bone:e,boneInverse:s,processed:!1})}})}function _e(e){const t=[],n=e.matrix,s=e.nodes,o=e.type,i=e.instanceCameras,r=e.instanceControllers,a=e.instanceLights,c=e.instanceGeometries,l=e.instanceNodes;for(let e=0,n=s.length;e<n;e++)t.push(je(s[e]));for(let e=0,n=i.length;e<n;e++){const n=$(i[e]);null!==n&&t.push(n.clone())}for(let e=0,n=r.length;e<n;e++){const n=r[e],s=(d=n.id,f(Xe.controllers[d],M)),o=Oe(ue(s.id),n.materials),i=He(n.skeletons,s.skin.joints);for(let e=0,n=o.length;e<n;e++){const n=o[e];n.isSkinnedMesh&&(n.bind(i,s.skin.bindMatrix),n.normalizeSkinWeights()),t.push(n)}}var d;for(let e=0,n=a.length;e<n;e++){const n=se(a[e]);null!==n&&t.push(n.clone())}for(let e=0,n=c.length;e<n;e++){const n=c[e],s=Oe(ue(n.id),n.materials);for(let e=0,n=s.length;e<n;e++)t.push(s[e])}for(let e=0,n=l.length;e<n;e++)t.push(je(l[e]).clone());let u;if(0===s.length&&1===t.length)u=t[0];else{u="JOINT"===o?new THREE.Bone:new THREE.Group;for(let e=0;e<t.length;e++)u.add(t[e])}return u.name="JOINT"===o?e.sid:e.name,u.matrix.copy(n),u.matrix.decompose(u.position,u.quaternion,u.scale),u}const Me=new THREE.MeshBasicMaterial({color:16711935});function Le(e,t){const n=[];for(let s=0,o=e.length;s<o;s++){const o=t[e[s]];void 0===o?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",e[s]),n.push(Me)):n.push(X(o))}return n}function Oe(e,t){const n=[];for(const s in e){const o=e[s],i=Le(o.materialKeys,t);0===i.length&&("lines"===s||"linestrips"===s?i.push(new THREE.LineBasicMaterial):i.push(new THREE.MeshPhongMaterial));const r=void 0!==o.data.attributes.skinIndex;if(r)for(let e=0,t=i.length;e<t;e++)i[e].skinning=!0;const a=1===i.length?i[0]:i;let c;switch(s){case"lines":c=new THREE.LineSegments(o.data,a);break;case"linestrips":c=new THREE.Line(o.data,a);break;case"triangles":case"polylist":c=r?new THREE.SkinnedMesh(o.data,a):new THREE.Mesh(o.data,a)}n.push(c)}return n}function Ie(e){return void 0!==Xe.nodes[e]}function je(e){return f(Xe.nodes[e],_e)}function qe(e){const t=new THREE.Group;t.name=e.name;const n=e.children;for(let e=0;e<n.length;e++){const s=n[e];t.add(je(s.id))}return t}function Se(e){return f(Xe.visualScenes[e],qe)}if(0===e.length)return{scene:new THREE.Scene};const Ue=(new DOMParser).parseFromString(e,"application/xml"),Fe=n(Ue,"COLLADA")[0],Be=Ue.getElementsByTagName("parsererror")[0];if(void 0!==Be){const e=n(Be,"div")[0];let t;return t=e?e.textContent:function(e){let t="";const n=[e];for(;n.length;){const e=n.shift();e.nodeType===Node.TEXT_NODE?t+=e.textContent:(t+="\n",n.push.apply(n,e.childNodes))}return t.trim()}(Be),console.error("THREE.ColladaLoader: Failed to parse collada file.\n",t),null}const Ve=Fe.getAttribute("version");console.log("THREE.ColladaLoader: File version",Ve);const Pe=function(e){return{unit:c(n(e,"unit")[0]),upAxis:l(n(e,"up_axis")[0])}}(n(Fe,"asset")[0]),De=new THREE.TextureLoader(this.manager);let We;De.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin),THREE.TGALoader&&(We=new THREE.TGALoader(this.manager)).setPath(this.resourcePath||t);const ze=[];let Ge={},Je=0;const Xe={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};d(Fe,"library_animations","animation",function e(t){const n={sources:{},samplers:{},channels:{}};let s=!1;for(let o=0,i=t.childNodes.length;o<i;o++){const i=t.childNodes[o];if(1!==i.nodeType)continue;let r;switch(i.nodeName){case"source":r=i.getAttribute("id"),n.sources[r]=oe(i);break;case"sampler":r=i.getAttribute("id"),n.samplers[r]=h(i);break;case"channel":r=i.getAttribute("target"),n.channels[r]=m(i);break;case"animation":e(i),s=!0;break;default:console.log(i)}}!1===s&&(Xe.animations[t.getAttribute("id")||THREE.MathUtils.generateUUID()]=n)}),d(Fe,"library_animation_clips","animation_clip",function(e){const t={name:e.getAttribute("id")||"default",start:parseFloat(e.getAttribute("start")||0),end:parseFloat(e.getAttribute("end")||0),animations:[]};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"instance_animation":t.animations.push(r(s.getAttribute("url")))}}Xe.clips[e.getAttribute("id")]=t}),d(Fe,"library_controllers","controller",function(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"skin":t.id=r(s.getAttribute("source")),t.skin=H(s);break;case"morph":t.id=r(s.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.")}}Xe.controllers[e.getAttribute("id")]=t}),d(Fe,"library_images","image",function(e){const t={init_from:n(e,"init_from")[0].textContent};Xe.images[e.getAttribute("id")]=t}),d(Fe,"library_effects","effect",function(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"profile_COMMON":t.profile=I(s)}}Xe.effects[e.getAttribute("id")]=t}),d(Fe,"library_materials","material",function(e){const t={name:e.getAttribute("name")};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"instance_effect":t.url=r(s.getAttribute("url"))}}Xe.materials[e.getAttribute("id")]=t}),d(Fe,"library_cameras","camera",function(e){const t={name:e.getAttribute("name")};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"optics":t.optics=K(s)}}Xe.cameras[e.getAttribute("id")]=t}),d(Fe,"library_lights","light",function(e){let t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique_common":t=ee(s)}}Xe.lights[e.getAttribute("id")]=t}),d(Fe,"library_geometries","geometry",function(e){const t={name:e.getAttribute("name"),sources:{},vertices:{},primitives:[]},s=n(e,"mesh")[0];if(void 0!==s){for(let e=0;e<s.childNodes.length;e++){const n=s.childNodes[e];if(1!==n.nodeType)continue;const o=n.getAttribute("id");switch(n.nodeName){case"source":t.sources[o]=oe(n);break;case"vertices":t.vertices=ie(n);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",n.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":t.primitives.push(re(n));break;default:console.log(n)}}Xe.geometries[e.getAttribute("id")]=t}}),d(Fe,"library_nodes","node",Re),d(Fe,"library_visual_scenes","visual_scene",function(e){const t={name:e.getAttribute("name"),children:[]};!function(e){const t=e.getElementsByTagName("node");for(let e=0;e<t.length;e++){const n=t[e];!1===n.hasAttribute("id")&&n.setAttribute("id","three_default_"+Je++)}}(e);const s=n(e,"node");for(let e=0;e<s.length;e++)t.children.push(Re(s[e]));Xe.visualScenes[e.getAttribute("id")]=t}),d(Fe,"library_kinematics_models","kinematics_model",function(e){const t={name:e.getAttribute("name")||"",joints:{},links:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique_common":he(s,t)}}Xe.kinematicsModels[e.getAttribute("id")]=t}),d(Fe,"library_physics_models","physics_model",function(e){const t={name:e.getAttribute("name")||"",rigidBodies:{}};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"rigid_body":t.rigidBodies[s.getAttribute("name")]={},Ee(s,t.rigidBodies[s.getAttribute("name")])}}Xe.physicsModels[e.getAttribute("id")]=t}),d(Fe,"scene","instance_kinematics_scene",function(e){const t={bindJointAxis:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"bind_joint_axis":t.bindJointAxis.push(Te(s))}}Xe.kinematicsScenes[r(e.getAttribute("url"))]=t}),u(Xe.animations,p),u(Xe.clips,R),u(Xe.controllers,M),u(Xe.images,L),u(Xe.effects,G),u(Xe.materials,J),u(Xe.cameras,Y),u(Xe.lights,ne),u(Xe.geometries,ce),u(Xe.visualScenes,qe),function(){const e=Xe.clips;if(!0===a(e)){if(!1===a(Xe.animations)){const e=[];for(const t in Xe.animations){const n=g(t);for(let t=0,s=n.length;t<s;t++)e.push(n[t])}ze.push(new THREE.AnimationClip("default",-1,e))}}else for(const t in e)ze.push(v(t))}(),function(){const e=Object.keys(Xe.kinematicsModels)[0],t=Object.keys(Xe.kinematicsScenes)[0],n=Object.keys(Xe.visualScenes)[0];if(void 0===e||void 0===t)return;const s=(o=e,f(Xe.kinematicsModels[o],fe));var o;const i=function(e){return f(Xe.kinematicsScenes[e],we)}(t),r=Se(n),a=i.bindJointAxis,c={};for(let e=0,t=a.length;e<t;e++){const t=a[e],n=Fe.querySelector('[sid="'+t.target+'"]');if(n){const e=n.parentElement;l(t.jointIndex,e)}}function l(e,t){const n=t.getAttribute("name"),o=s.joints[e];r.traverse(function(s){s.name===n&&(c[e]={object:s,transforms:xe(t),joint:o,position:o.zeroPosition})})}const d=new THREE.Matrix4;Ge={joints:s&&s.joints,getJointValue:function(e){const t=c[e];if(t)return t.position;console.warn("THREE.ColladaLoader: Joint "+e+" doesn't exist.")},setJointValue:function(e,t){const n=c[e];if(n){const s=n.joint;if(t>s.limits.max||t<s.limits.min)console.warn("THREE.ColladaLoader: Joint "+e+" value "+t+" outside of limits (min: "+s.limits.min+", max: "+s.limits.max+").");else if(s.static)console.warn("THREE.ColladaLoader: Joint "+e+" is static.");else{const o=n.object,i=s.axis,r=n.transforms;ke.identity();for(let n=0;n<r.length;n++){const o=r[n];if(o.sid&&-1!==o.sid.indexOf(e))switch(s.type){case"revolute":ke.multiply(d.makeRotationAxis(i,THREE.MathUtils.degToRad(t)));break;case"prismatic":ke.multiply(d.makeTranslation(i.x*t,i.y*t,i.z*t));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+s.type)}else switch(o.type){case"matrix":ke.multiply(o.obj);break;case"translate":ke.multiply(d.makeTranslation(o.obj.x,o.obj.y,o.obj.z));break;case"scale":ke.scale(o.obj);break;case"rotate":ke.multiply(d.makeRotationAxis(o.obj,o.angle))}}o.matrix.copy(ke),o.matrix.decompose(o.position,o.quaternion,o.scale),c[e].position=t}}else console.log("THREE.ColladaLoader: "+e+" does not exist.")}}}();const Ke=function(e){return Se(r(n(e,"instance_visual_scene")[0].getAttribute("url")))}(n(Fe,"scene")[0]);return Ke.animations=ze,"Z_UP"===Pe.upAxis&&Ke.quaternion.setFromEuler(new THREE.Euler(-Math.PI/2,0,0)),Ke.scale.multiplyScalar(Pe.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),ze},kinematics:Ge,library:Xe,scene:Ke}}}}();